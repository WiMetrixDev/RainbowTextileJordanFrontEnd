{"version":3,"sources":["util/config.js","components/ProductionTrackingHeader/index.js","components/AddWorkers/index.js","components/Workers/SetTarget.js","components/WorkersTable/index.js","components/Workers/index.js","components/AddOrders/index.js","components/OrdersTable/index.js","components/Orders/index.js","components/AddOperation/index.js","components/OperationsTable/index.js","components/Operations/index.js","components/AddMarkers/index.js","components/MarkersTable/index.js","components/Marker/index.js","components/AddRollIssuance/index.js","components/RollIssuance/index.js","components/AddCutJob/index.js","components/ExecuteCutJob/index.js","components/CutJob/index.js","components/CutReportTable/index.js","components/CutReportMappingTable/index.js","components/CutReport/index.js","components/AddStyleBulletin/index.js","components/ViewStyleBulletin/index.js","components/StyleBulletin/index.js","components/LineWiseTotalProduction/index.js","components/IECharts/index.js","components/AddPO/index.js","components/POTable/index.js","components/PO/index.js","components/AssignPO/index.js","components/AssignPOtoBundle/index.js","components/StockIn/index.js","components/StockOut/index.js","components/ManualStocking/index.js","components/AssignCard/index.js","components/CardAssignment/index.js","components/Table.js","components/AddPackingList/index.js","components/PackingListTable/index.js","components/PackingListTable/deletePackingList.js","components/PackingList/index.js","components/PlanSimulateTab/index.js","components/PlanSimulate/index.js","containers/pages/ProductionTracking/index.js"],"names":["module","exports","basic_url","random_string","api_endpoint","api_endpoint_warehouse","useStyles","makeStyles","theme","root","flexGrow","display","menuButton","marginRight","spacing","title","withRouter","props","classes","React","useState","className","AppBar","position","style","backgroundColor","color","CssBaseline","Toolbar","justifyContent","src","require","alt","width","Typography","variant","alignItems","cursor","onClick","history","push","withSnackbar","designations","setDesignations","deparments","setDepartments","state","setState","setLoading","useEffect","fetch","then","res","json","console","log","Departments","catch","err","Designations","Grid","container","item","lg","md","sm","xs","padding","TextField","value","workerId","onChange","e","target","name","fullWidth","label","workerName","Autocomplete","options","getOptionLabel","option","department_code","v","department","renderInput","params","designation_code","designation","Button","height","url","designation_id","department_id","method","Error_No","enqueueSnackbar","Error_Description","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","undefined","InputProps","endAdornment","InputAdornment","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","type","MyTable","columns","data","handleUpload","useTable","initialState","pageSize","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","previousPage","pageIndex","canPreviousPage","nextPage","page","canNextPage","pageOptions","selectedRowIds","selectedFlatRows","setPageSize","marginTop","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","textAlign","getCellProps","Object","keys","length","disabled","workers","setWorkers","time","Workers","flexDirection","marginLeft","showSecond","format","use12Hours","inputReadOnly","accessor","vals","datetime","moment","keysArray","arr","parseInt","worker_id","body","JSON","stringify","setModalValues","setModalVisible","gotoPage","original","modalVisible","modalValues","tableValues","setTableValues","editState","setEditState","fetchWorkers","Dialog","open","marginBottom","worker_code","worker_name","designator_id","designator_code","CircularProgress","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","palette","background","paper","useTheme","setValue","borderTopLeftRadius","borderTopRightRadius","Tabs","event","newValue","indicatorColor","textColor","aria-label","Tab","borderBottom","dir","direction","borderBottomLeftRadius","borderBottomRightRadius","buyer","handleDelete","setOpenBackdrop","openBackdrop","setDeleteLoader","fetchOrders","Orders","buyer_code","style_code","order_id","order_description","otn","record","Backdrop","operationCode","operationDescription","operationSMV","min","pieceRate","fetchOperations","Operations","operation_code","operation_description","operation_smv","piece_rate","operation_id","AddOperation","sizes","setSizes","styles","setStyles","colors","setColors","Colors","size","Styles","Sizes","values","quantity","s","uuid","size_id","size_code","margin","no_of_plies","marker_description","draft","filter","d","loading","marker_id","Markers","fetchMarkers","Marker","fontSize","invoiceNumbers","setInvoiceNumbers","departments","args","a","RouteID","rolls","ItemID","RollLength","obj","itemIDArray","intentionRouteID","Responses","Invoices","Routes","fetchInvoiceNumbers","onBackdropClick","top","right","mV","item_id","InvoiceCode","invoice","InvoiceID","Rolls","ToLocation","RollIssuance","partNames","setPartNames","markers","setMarkers","fetchPartNames","marker","Part_Names","cut_description","no_of_layers","part_name","cutJobs","setCutJobs","fetchCutJobs","CutJobs","cutJob","cut_job_id","cut_job_description","no_of_bundles","CutJob","count","setCount","Cut_Report","paddingTop","fontWeight","alert","CutReport","spreadSheetButtonVisible","setSpreadSheetButtonVisible","modalVisible2","setModalVisible2","responses","setResponses","operations","setOperations","machineTypes","setMachineTypes","Promise","all","o","operation","ops","machine_types","operation_sequence","machine_type","machineType","sequence","timeForTarget","noOfOperators","noOfHelpers","no_of_operators","no_of_helpers","time_for_target","fulLWidth","files","readXlsxFile","styleBulletin","somethingChanged","setSomethingChanged","handleUpdateTable","style_id","tempTable","handleUpdate","t","Style_id","order_target","allocated_time_for_target","table","handleFetch","Style_Bulletin","defaultValue","Number","StyleBulletin","MyResponsiveBar","attr","attrAxis","orientation","x","y","IECharts","Paper","LineWiseTotalProduction","po_description","po_id","PO","overflowY","po_code","cuts","setCuts","pos","setPOs","bundles","setBundles","checked","setChecked","fetchStyles","fetchPOs","fetchColorsForStyleCodes","Cuts","fetchCutForOrder","cut","cut_code","Bundles","fetchBundleForCut","handleAdd","bundle","b","bundle_id","bundlesToSend","po","remarks","toString","FormControlLabel","control","Checkbox","inputProps","multiple","disableCloseOnSelect","bundle_code","multiline","AssignBundle","invoiceCodes","setInvoiceCodes","setRolls","notify","message","handleRollIntention","array","warehouseStatus","routeID","ErrorNumber","fetchInvoiceCodes","fetchDepartments","Location","PackingList","overflowX","Select","MenuItem","lots","setLots","fetchPackingList","filterResults","packinglist","ColorCode","StyleCode","LotCode","Set","fetchData","xl","lot","CardAssigment","AssignCard","defaultColumn","initialValue","updateMyData","onBlur","border","Table","skipPageReset","autoResetPage","pageCount","App","useMemo","setData","setSkipPageReset","rowIndex","columnId","addIcon","zIndex","distance","setDistance","setUnit","anchorEl","setAnchorEl","handleClose","uploadVisible","setUploadVisible","noOfRolls","setNoOfRolls","excelLoading","setExcelLoading","handleAppend","newArr","temp","Date","getTime","Supplier","Buyer","net_weight","gross_weight","fabric_type","roll_no","season_code","RadioGroup","Radio","NetWeight","GrossWeight","RollCode","Season","FabricType","Menu","keepMounted","Boolean","onClose","setFetched","Option","Tooltip","content","targetMinutes","plannedEfficiency","textFields","setTextFields","recalculate","fetchAndUpdateWorkers","r","Plan","ppm","parseFloat","toFixed","formattedPlans","workersForThisOperation","selectedWorkers","plansFromFetch","plans","handleSelect","tV","newTableValues","production","minutes","sW","handleTextFields","FormControl","FormLabel","isMulti","base","components","appBar","drawer","flexShrink","drawerPaper","toolbar","mixins","ProductionTracking","sptsValue","setSptsValue","paddingLeft","Drawer","paddingBottom","Divider","List","ListItem","button","key","ListItemText","primary","to","AssignPOtoBundle","ManualStocking","CardAssignment"],"mappings":"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","file":"static/js/1.3fe35d72.chunk.js","sourcesContent":["module.exports = {\n    basic_url: 'https://api.myjson.com/bins/1etsk2',\n    random_string: \"Random String\",\n    // api_endpoint:'http://192.168.88.237',\n    api_endpoint:'http://192.168.1.4:4334', //Jordan\n    // api_endpoint:'http://192.168.88.220:8800', //ANAS\n    api_endpoint_warehouse:'http://192.168.1.4:8081/api'\n    // api_endpoint_warehouse:'http://192.168.88.220:8081/api'\n  }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n//import Button from '@material-ui/core/Button';\n//import IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/HomeWork';\nimport DeviceIcon from '@material-ui/icons/DeviceHub';\nimport SignoutIcon from '@material-ui/icons/LastPage';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Menu from '@material-ui/core/Menu';\nimport { withRouter } from 'react-router-dom'\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display:'flex'\n    //zIndex:2000\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst ButtonAppBar = props => {\n  const classes = useStyles();\n  const [anchorElSPTS, setAnchorElSPTS] = React.useState(null);\n  const [anchorElWarehouse, setAnchorElWarehouse] = React.useState(null);\n  const [anchorElCut, setAnchorElCut] = React.useState(null);\n\n  const handleClick = (event,arg) => {\n    console.log('asdaf',event,arg)\n    if(arg === 'spts'){\n      setAnchorElSPTS(event.currentTarget);\n    }else if(arg === 'cutting'){\n      setAnchorElCut(event.currentTarget);\n    }else if(arg === 'warehouse'){\n      setAnchorElWarehouse(event.currentTarget);\n    }\n  };\n\n  const handleCloseSPTS = () => {\n    setAnchorElSPTS(null);\n  };\n  const handleCloseCut = () => {\n    setAnchorElCut(null);\n  };\n  const handleCloseWarehouse = () => {\n    setAnchorElWarehouse(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{backgroundColor:'#fff',color:'#418832'}}>\n        <CssBaseline />\n        <Toolbar style={{display:'flex',justifyContent:'space-between'}}>\n            <div>\n                <img src={require('../../assets/WiMetrix.png')} alt=\"Logo\" style={{width:120}}/>\n            </div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n              <Typography color='secondary' variant=\"h5\">Rainbow</Typography>\n            {/* <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'warehouse')}>\n                    <HomeIcon />&nbsp;\n                    <Typography variant=\"subtitle1\">Warehouse</Typography>\n                </div>\n                <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'cutting')}>\n                    <DeviceIcon/>&nbsp;\n                    <Typography variant=\"subtitle1\">Cutting</Typography>\n                </div>\n                <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'spts')}>\n                    <SettingsIcon/>&nbsp;\n                    <Typography variant=\"subtitle1\">SPTS</Typography>\n                </div> */}\n                {/* <Menu\n                    id=\"simple-menu-spts\"\n                    anchorEl={anchorElSPTS}\n                    //keepMounted\n                    open={Boolean(anchorElSPTS)}\n                    onClose={handleCloseSPTS}\n                >\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('workers')\n                        handleCloseSPTS()\n                    }}>Workers</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('orders')\n                        handleCloseSPTS()\n                    }}>Orders</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('operations')\n                        handleCloseSPTS()\n                    }}>Operations</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('styleBulletin')\n                        handleCloseSPTS()\n                    }}>Style Bulletin</MenuItem>\n                </Menu>\n                <Menu\n                    id=\"simple-menu-cut\"\n                    anchorEl={anchorElCut}\n                    //keepMounted\n                    open={Boolean(anchorElCut)}\n                    onClose={handleCloseCut}\n                >\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('marker')\n                        handleCloseCut()\n                    }}>Marker</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('po')\n                        handleCloseCut()\n                    }}>PO</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('cutJob')\n                        handleCloseCut()\n                    }}>Cut Job</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('cutReport')\n                        handleCloseSPTS()\n                    }}>Cut Report</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('assignPO')\n                        handleCloseCut()\n                    }}>Assign PO to Bundle</MenuItem>\n                </Menu>\n                <Menu\n                    id=\"simple-menu-cut\"\n                    anchorEl={anchorElWarehouse}\n                    //keepMounted\n                    open={Boolean(anchorElWarehouse)}\n                    onClose={handleCloseWarehouse}\n                >\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('packingList')\n                        handleCloseWarehouse()\n                    }}>Packing List</MenuItem>\n                </Menu> */}\n            </div>\n            <div style={{display:'flex',alignItems:'center',cursor:'pointer'}} onClick={()=>props.history.push('/')}>\n                <Typography variant=\"subtitle1\" style={{cursor:'pointer'}}>Logout</Typography>\n                <SignoutIcon />\n            </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withRouter(ButtonAppBar)","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n//import axios from 'axios'\nimport { withSnackbar } from 'notistack';\n\nconst AddWorkers = props => {\n\n    const [designations,setDesignations] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n    const [state,setState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/worker/insertWorker.php?worker_code=${state.workerId}&worker_name=${state.workerName}&designator_id=${state.designation.designation_id}&designator_code=${state.designation.designation_code}&department_id=${state.department.department_id}&department_code=${state.department.department_code}`;\n            console.log('url: ',url)\n            // alert(url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully added Worker!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n                //console.log('generate qrcode response',res)\n                //setQrCode(res.code)\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                props.enqueueSnackbar('Error While Adding Worker!', { \n                    variant: 'info',\n                })\n                setLoading(false)\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            props.enqueueSnackbar('Error While Adding Worker!', { \n                variant: 'info',\n            })\n            setLoading(false)\n        }\n\n    }\n\n    React.useEffect(()=>{\n\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDepartments.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res departments',res)\n            setDepartments(res.Departments)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res designations',res)\n            setDesignations(res.Designations)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n    },[])\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.workerId} onChange={e => setState({...state,workerId:e.target.value})} name=\"workerId\" variant=\"outlined\" fullWidth label=\"Worker ID\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.workerName} onChange={e => setState({...state,workerName:e.target.value})} name=\"workerName\" variant=\"outlined\" fullWidth label=\"Worker Name\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={deparments}\n                        getOptionLabel={option => option.department_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,department:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Department\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                    {/* <TextField name=\"department\" variant=\"outlined\" fullWidth label=\"Department\"/> */}\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={designations}\n                        getOptionLabel={option => option.designation_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,designation:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Designation\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                    {/* <TextField name=\"designation\" variant=\"outlined\" fullWidth label=\"Designation\"/> */}\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Worker</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddWorkers)","import React from 'react'\nimport { Grid, TextField, Button,InputAdornment, Typography } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { useTable, usePagination, useGlobalFilter,useRowSelect } from 'react-table'\nimport { withSnackbar } from 'notistack';\nimport SearchIcon from '@material-ui/icons/Search'\nimport TimePicker from 'rc-time-picker';\nimport 'rc-time-picker/assets/index.css';\nimport moment from 'moment'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Rolls\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef()\n      const resolvedRef = ref || defaultRef\n  \n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate\n      }, [resolvedRef, indeterminate])\n  \n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      )\n    }\n  )\n\nfunction MyTable({ columns, data, handleUpload }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        selectedFlatRows,\n    state: { selectedRowIds },\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n        initialState: { pageSize: 50 }\n      },useGlobalFilter,usePagination,useRowSelect,\n      hooks => {\n        hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n    })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div >\n            <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n              <div style={{width:300}}>\n                  <GlobalFilter\n                      preGlobalFilteredRows={preGlobalFilteredRows}\n                      globalFilter={globalFilter}\n                      setGlobalFilter={setGlobalFilter}\n                  />\n              </div>\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            // console.log('row: ',row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{textAlign:'center'}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <p>Selected Workers: {Object.keys(selectedRowIds).length}</p>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {\n                Object.keys(selectedRowIds).length > 0?\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >Set Target</Button>\n                    </Grid>\n                </Grid>\n                :null\n            }\n        </div>\n    )\n}\n\nconst SetTarget = props => {\n\n    // const [designations,setDesignations] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n    const [workers,setWorkers] = React.useState([])\n    const [state,setState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n    const [time, onChange] = React.useState(null);\n    \n\n    const handleUpload = (vals) => {\n\n        if(!time){\n            props.enqueueSnackbar('Select target time first!', { \n                variant: 'warning',\n            })\n            return\n        }\n\n        setLoading(true)\n        let datetime = moment(time, 'HH:mm').format('YYYY-MM-DD HH:mm');\n        let keysArray = Object.keys(vals)\n        let arr = []\n        for(let i=0; i<keysArray.length;i++){\n            console.log(workers[parseInt(keysArray[i])].worker_id)\n            arr.push(workers[parseInt(keysArray[i])].worker_id)\n        }\n        console.log(arr)\n        console.log('rows: ',arr,', time: ',datetime,', department: ',state.department.department_code)\n        try{\n            let url = api_endpoint+`/Jordan/AttendanceSystem/updateTargetForWorkers.php`;\n            console.log('url: ',url)\n            // alert(url)\n            fetch(url,{\n                method: 'post',\n                headers:{\n                    'Content-Type':'application/json'\n                },\n                body:JSON.stringify({\n                    \"workers\":arr,\n                    \"target\":datetime\n                })\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully updated Target Time!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Error while saving target time!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n                //console.log('generate qrcode response',res)\n                //setQrCode(res.code)\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                props.enqueueSnackbar('Error while saving target time!', { \n                    variant: 'info',\n                })\n                setLoading(false)\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            props.enqueueSnackbar('Error while saving target time!', { \n                variant: 'info',\n            })\n            setLoading(false)\n        }\n\n    }\n\n    const fetchWorkers = () => {\n\n        try{\n            fetch(api_endpoint+'/Jordan/SPTS/worker/getWorkersForDepartment.php?department_id='+state.department.department_id,{\n                method:'post',\n            })\n            .then(res => res.json()\n            .then(res => {\n                console.log('res departments',res)\n                if(res.Workers){\n                    setWorkers(res.Workers)\n                }else{\n                    props.enqueueSnackbar(\"No worker found!\", { \n                        variant: 'info',\n                    })\n                }\n            }))\n            .catch(err => {\n                console.log('err in fetch',err)\n            })\n        }catch(err){\n            console.log('err in fetch',err)\n        }\n\n    }\n\n    React.useEffect(()=>{\n\n        try{\n            fetch(api_endpoint+'/Jordan/SPTS/worker/getDepartments.php')\n            .then(res => res.json()\n            .then(res => {\n                console.log('res departments',res)\n                setDepartments(res.Departments)\n            }))\n            .catch(err => {\n                console.log('err in fetch',err)\n            })\n        }catch(err){\n            console.log('err in fetch',err)\n        }\n\n    },[])\n\n    return (\n        <div>\n            <Grid container style={{display:'flex',justifyContent:'center',alignItems:'center'}}>\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={deparments}\n                        getOptionLabel={option => option.department_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,department:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Department\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                    {/* <TextField name=\"department\" variant=\"outlined\" fullWidth label=\"Department\"/> */}\n                </Grid>\n                {\n                    state.department?\n                    <>\n                        <Grid item lg={3} md={3} sm={6} xs={12} style={{padding:5}}>\n                            <Button \n                                color='primary' \n                                variant='contained' \n                                style={{color:'#fff',height:55}} \n                                onClick={fetchWorkers}\n                                fullWidth\n                            >fetch workers</Button>\n                        </Grid>\n                    </>\n                    :null\n                }\n                {\n                    workers.length>0?\n                    <div style={{display:'flex',flexDirection:'column',marginLeft:10}}>\n                        <Typography variant=\"subtitle1\">\n                            Target Time\n                        </Typography>\n                        <TimePicker\n                            showSecond={false}\n                            // defaultValue={moment().hour(0).minute(0)}\n                            onChange={(value)=>onChange(value)}\n                            format={'h:mm a'}\n                            use12Hours\n                            inputReadOnly\n                        />\n                    </div>\n                    :null\n                }\n            </Grid>\n            {\n                workers.length>0?\n                <MyTable columns={[\n                    {\n                        Header: 'Worker Code',\n                        accessor: 'worker_code',\n                    },\n                    {\n                        Header: 'Worker Name',\n                        accessor: 'worker_name',\n                    }\n                ]} data={workers} handleUpload={handleUpload} />\n                :null\n            }\n        </div>\n    )\n}\n\nexport default withSnackbar(SetTarget)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Worker\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(row.original)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                {/* <td style={{textAlign:'center'}}>\n                    <InfoIcon color=\"primary\" style={{cursor:'pointer'}} onClick={()=>{\n                    setModalVisible(true)\n                    console.log('row',row)\n                    setModalValues(row.original)\n                }}/></td> */}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            {/* <table {...getTableProps()} style={{width:'100%'}}>\n                \n                <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n                <tbody  {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                        </tr>\n                    )\n                    })}\n\n                </tbody>\n            </table> */}\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n                {/* <div>Go to page:</div>\n                <input\n                    type=\"number\"\n                    defaultValue={pageIndex + 1 || 1}\n                    onChange={e => {\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\n                        gotoPage(page)\n                    }}\n                /> */}\n                {/* <select\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                >\n                    {pageSizeOptions.map(pageSize => (\n             <option key={pageSize} value={pageSize}>\n               Show {pageSize}\n             </option>\n           ))}\n                </select> */}\n            </div>\n        </div>\n    )\n}\n\nconst WorkersTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [designations,setDesignations] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    React.useEffect(()=>{\n        console.log('modalValues',modalValues)\n        setEditState(modalValues)\n    },[modalValues])\n\n    const handleUpdate = () => {\n        console.log('editState',editState)\n        \n        try{\n            let url = api_endpoint+`/Jordan/SPTS/worker/updateWorker.php?worker_id=${editState.worker_id}&worker_code=${editState.worker_code}&worker_name=${editState.worker_name}&department_id=${editState.department_id}&department_code=${editState.department_code}&designator_id=${editState.designator_id}&designator_code=${editState.designator_code}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Updated Worker!', { \n                        variant: 'info',\n                    })\n                    fetchWorkers()\n                    setModalVisible(false)\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Updating Worker!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Updating Worker!', { \n                variant: 'info',\n            })\n        }\n    }\n\n    const fetchWorkers = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/worker/getWorkers.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Workers)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchWorkers()\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDepartments.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res departments',res)\n            setDepartments(res.Departments)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res designations',res)\n            setDesignations(res.Designations)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n    }, [])\n\n    return (\n        <div>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid>\n            </div> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Worker</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField value={editState.worker_code} onChange={e => setEditState({...editState,worker_code:e.target.value})} name=\"workerId\" variant=\"outlined\" fullWidth label=\"Worker ID\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField value={editState.worker_name} onChange={e => setEditState({...editState,worker_name:e.target.value})} name=\"workerName\" variant=\"outlined\" fullWidth label=\"Worker Name\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Autocomplete\n                                            //id=\"combo-box-demo\"\n                                            options={deparments}\n                                            getOptionLabel={option => option.department_code}\n                                            style={{ width: '100%' }}\n                                            disabled={true}\n                                            //onChange={(e,v) => setState({...state,department:v})}\n                                            //defaultValue={departments.filter}\n                                            renderInput={params => (\n                                                <TextField {...params} label=\"Department\" variant=\"outlined\" fullWidth />\n                                            )}\n                                        />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Autocomplete\n                                        //id=\"combo-box-demo\"\n                                            options={designations}\n                                            getOptionLabel={option => option.designation_code}\n                                            style={{ width: '100%' }}\n                                            disabled={true}\n                                            //onChange={(e,v) => setState({...state,designation:v})}\n                                            renderInput={params => (\n                                                <TextField {...params} label=\"Designation\" variant=\"outlined\" fullWidth />\n                                            )}\n                                        />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Worker ID',\n                                accessor: 'worker_id',\n                            },\n                            {\n                                Header: 'Code',\n                                accessor: 'worker_code',\n                            },\n                            {\n                                Header: 'Name',\n                                accessor: 'worker_name',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\n                        //     <tr>\n                        //         <th>Worker ID</th>\n                        //         <th>Worker Code</th>\n                        //         <th>Name</th>\n                        //         <th style={{ width: '70px' }}></th>\n                        //     </tr>\n                        //     <tbody>\n                        //         {\n                        //             tableValues.map(v => (\n                        //                 <tr>\n                        //                     <td>{v.worker_id}</td>\n                        //                     <td>{v.worker_code}</td>\n                        //                     <td>{v.worker_name}</td>\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                        //                         setModalVisible(true)\n                        //                         setModalValues(v)\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                        //                 </tr>\n                        //             ))\n                        //         }\n                                \n                        //     </tbody>\n                        // </table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(WorkersTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddWorkers from '../AddWorkers'\nimport SetTarget from '../Workers/SetTarget'\nimport WorkersTable from '../WorkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Workers = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Workers</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Workers\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"Set Target\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        <Tab label=\"View Workers\" {...a11yProps(2)} style={{color:'#fff',borderBottom:value===2?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddWorkers />\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <SetTarget />\n                    </TabPanel>\n                    <TabPanel value={value} index={2} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <WorkersTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Workers","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\n//import Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\n\nconst AddOrders = props => {\n\n    const [state,setState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/order/insertOrder.php?buyer=${state.buyer}&style_code=${state.style}&color=${state.color}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Order!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Order!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Order!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.buyer} onChange={e => setState({...state,buyer:e.target.value})} name=\"buyer\" variant=\"outlined\" fullWidth label=\"Buyer\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.style} onChange={e => setState({...state,style:e.target.value})} name=\"style\" variant=\"outlined\" fullWidth label=\"Style\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.color} onChange={e => setState({...state,color:e.target.value})} name=\"color\" variant=\"outlined\" fullWidth label=\"Color\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Order</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddOrders)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Order\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td>\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst OrdersTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState, setEditState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    React.useEffect(() => {\n        console.log('modalValues', modalValues)\n        setEditState(modalValues)\n    }, [modalValues])\n\n    const handleUpdate = () => {\n        console.log('editState', editState)\n        //operation_id operation_code operation_description operation_smv\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/order/updateOrder.php?order_id=${editState.order_id}&order_description=${editState.order_description}&otn=${editState.otn}&buyer=${editState.buyer_code}&style_code=${editState.style_code}&color=${editState.color}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'post',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    setLoading(false)\n                    console.log('res: ', res)\n                    if (res.Error_No === 0) {\n                        props.enqueueSnackbar('Successfully Updated Order!', {\n                            variant: 'info',\n                        })\n                        fetchOrders()\n                        setModalVisible(false)\n                    } else {\n                        if (typeof res.Error_Description === 'object') {\n                            console.log('objecttypeee')\n                            props.enqueueSnackbar('Validation Errors!', {\n                                variant: 'info',\n                            })\n                        } else {\n                            props.enqueueSnackbar(res.Error_Description, {\n                                variant: 'info',\n                            })\n                        }\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Error While Updating Order!', {\n                        variant: 'info',\n                    })\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Updating Order!', {\n                variant: 'info',\n            })\n        }\n    }\n\n    const handleDelete = (record) => {\n\n        try {\n            setDeleteLoader(true)\n            setOpenBackdrop(true)\n            fetch(api_endpoint + `/Jordan/SPTS/order/closeOrder.php?order_id=${record.order_id}`)\n                .then(res => res.json())\n                .then(res => {\n                    setDeleteLoader(false)\n                    setOpenBackdrop(false)\n                    console.log('delete response: ', res)\n                    if (res.Error_No === 0) {\n                        props.enqueueSnackbar('Successfully deleted order!', {\n                            variant: 'info',\n                        })\n                        fetchOrders()\n                    }\n                    //setTableValues(res.Orders)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setDeleteLoader(false)\n                    setOpenBackdrop(false)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setDeleteLoader(false)\n            setOpenBackdrop(false)\n            //setTableValues([])\n        }\n    }\n\n    const fetchOrders = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/order/getOrders.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Orders)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchOrders()\n    }, [])\n\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Style',\n                                accessor: 'style_code',\n                            },\n                            {\n                                Header: 'Buyer',\n                                accessor: 'buyer_code',\n                            },\n                            {\n                                Header: 'Color',\n                                accessor: 'color',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop} />\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\n                        //     <tr>\n                        //         <th>Color</th>\n                        //         <th>Style</th>\n                        //         <th>Buyer</th>\n                        //         <th style={{ width: '70px' }}></th>\n                        //     </tr>\n                        //     <tbody>\n                        //         {\n                        //             tableValues.map(v => (\n                        //                 <tr>\n                        //                     <td>{v.color}</td>\n                        //                     <td>{v.style_code}</td>\n                        //                     <td>{v.buyer_code}</td>\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                        //                         setModalVisible(true)\n                        //                         setModalValues(v)\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                        //                         handleDelete(v); setOpenBackdrop(true); console.log('delete row: ', v);\n                        //                     }} style={{ cursor: 'pointer' }} /></td>\n                        //                 </tr>\n                        //             ))\n                        //         }\n\n                        //     </tbody>\n                            \n                        // </table>\n                }\n                <Backdrop open={openBackdrop}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(OrdersTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddOrders from '../AddOrders'\nimport OrdersTable from '../OrdersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Orders = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Orders</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Order\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Orders\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddOrders />\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <OrdersTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Orders","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\n//import Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\n\nconst AddOperations = props => {\n\n    const [state,setState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    const handleAdd = () => {\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/operation/insertOperation.php?operation_code=${state.operationCode}&operation_description=${state.operationDescription}&operation_smv=${state.operationSMV}&piece_rate=${state.pieceRate}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Operation!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Operation!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Operation!', { \n                variant: 'info',\n            })\n        }\n\n    }\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.operationCode} onChange={e => setState({...state,operationCode:e.target.value})} name=\"operationCode\" variant=\"outlined\" fullWidth label=\"Operation Code\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.operationDescription} onChange={e => setState({...state,operationDescription:e.target.value})} name=\"operationDescription\" variant=\"outlined\" fullWidth label=\"Operation Description\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.operationSMV} type=\"number\" min={0} onChange={e => setState({...state,operationSMV:e.target.value})} name=\"operationSMV\" variant=\"outlined\" fullWidth label=\"Operation SMV\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.pieceRate} type=\"number\" min={0} onChange={e => setState({...state,pieceRate:e.target.value})} name=\"pieceRate\" variant=\"outlined\" fullWidth label=\"Piece Rate\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Operation</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddOperations)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Operation\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst OperationsTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    React.useEffect(()=>{\n        console.log('modalValues',modalValues)\n        setEditState(modalValues)\n    },[modalValues])\n\n    const handleUpdate = () => {\n        console.log('editState',editState)\n        //operation_id operation_code operation_description operation_smv\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/operation/updateOperation.php?operation_id=${editState.operation_id}&operation_code=${editState.operation_code}&operation_description=${editState.operation_description}&operation_smv=${editState.operation_smv}&piece_rate=${editState.piece_rate}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Updated Operation!', { \n                        variant: 'info',\n                    })\n                    fetchOperations()\n                    setModalVisible(false)\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Updating Operation!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Updating Operation!', { \n                variant: 'info',\n            })\n        }\n    }\n\n    const fetchOperations = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/operation/getOperations.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Operations)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchOperations()\n    }, [])\n\n    return (\n        <div>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Operation\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid>\n            </div> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Operation</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"operationCode\" value={editState.operation_code} onChange={e => setEditState({...editState,operation_code:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation Code\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"operationDescription\" value={editState.operation_description} onChange={e => setEditState({...editState,operation_description:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation Description\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"operationSMV\" type=\"number\" value={editState.operation_smv} onChange={e => setEditState({...editState,operation_smv:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation SMV\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"pieceRate\" type=\"number\" value={editState.piece_rate} onChange={e => setEditState({...editState,piece_rate:e.target.value})} variant=\"outlined\" fullWidth label=\"Piece Rate\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Operation ID',\n                                accessor: 'operation_id',\n                            },\n                            {\n                                Header: 'Operation Code',\n                                accessor: 'operation_code',\n                            },\n                            {\n                                Header: 'Description',\n                                accessor: 'operation_description',\n                            },\n                            {\n                                Header: 'SMV',\n                                accessor: 'operation_smv',\n                            },\n                            {\n                                Header: 'Piece Rate',\n                                accessor: 'piece_rate',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\n                        //     <tr>\n                        //         <th>Operation Code</th>\n                        //         <th>operation Description</th>\n                        //         <th>Operation SMV</th>\n                        //         <th>Piece Rate</th>\n                        //         <th style={{ width: '70px' }}></th>\n                        //     </tr>\n                        //     <tbody>\n                        //         {\n                        //             tableValues.map(v => (\n                        //                 <tr>\n                        //                     <td>{v.operation_code}</td>\n                        //                     <td>{v.operation_description}</td>\n                        //                     <td>{v.operation_smv}</td>\n                        //                     <td>{v.piece_rate}</td>\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                        //                         setModalVisible(true)\n                        //                         setModalValues(v)\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                        //                 </tr>\n                        //             ))\n                        //         }\n                                \n                        //     </tbody>\n                        // </table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(OperationsTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddOperation from '../AddOperation'\nimport OperationsTable from '../OperationsTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Operations = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Operations</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Operation\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Operations\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddOperation />\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <OperationsTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Operations","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst AddMarkers = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        console.log('state',state)\n        if(state.style){\n            fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n            .then(res => res.json()\n            .then(res => {\n                console.log('res colors',res)\n                setColors(res.Colors)\n            }))\n            .catch(err => {\n                console.log('err in fetch',err)\n            })\n\n        }\n    },[state.style])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        if(state.size){\n            setModalVisible(true)\n        }\n        \n    },[state.size])\n\n    const handleAppend = () => {\n        console.log('handleAppend',state.style,state.quantity)\n        setModalVisible(false)\n        setTableValues(s => [...s,{id:uuid(),size_id:state.size.size_id,size_code:state.size.size_code,quantity:state.quantity}])\n        setState({...state,size_id:null,size_code:null,quantity:null})\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        fetch(api_endpoint+'/Jordan/Cutting/Marker/getSizes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res sized',res)\n            setSizes(res.Sizes)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        // fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        // .then(res => res.json()\n        // .then(res => {\n        //     console.log('res designations',res)\n        //     setDesignations(res.Designations)\n        // }))\n        // .catch(err => {\n        //     console.log('err in fetch',err)\n        // })\n\n    },[])\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        console.log('state: ',state)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${JSON.stringify(tableValues)}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Marker!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Marker!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Marker!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Enter Quantity\n                    </div>\n                    <div style={{padding:10}}>\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\n                    </div>\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            Save Quantity\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={sizes}\n                        getOptionLabel={option => option.size_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,size:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Size</th>\n                                <th>Quantity</th>\n                                <th style={{ width: '40px' }}></th>\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            {console.log('tableValues',tableValues)}\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.size_code}</td>\n                                            <td>{v.quantity}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Marker</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddMarkers)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Marker\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th style={{width:'40px'}}></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{textAlign:'center'}}><InfoIcon color=\"primary\" style={{cursor:'pointer'}} onClick={()=>{\n                    setModalVisible(true)\n                    console.log('row',row)\n                    setModalValues(row.original)\n                }}/></td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            {/* <table {...getTableProps()} style={{width:'100%'}}>\n                \n                <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n                <tbody  {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                        </tr>\n                    )\n                    })}\n\n                </tbody>\n            </table> */}\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n                {/* <div>Go to page:</div>\n                <input\n                    type=\"number\"\n                    defaultValue={pageIndex + 1 || 1}\n                    onChange={e => {\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\n                        gotoPage(page)\n                    }}\n                /> */}\n                {/* <select\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                >\n                    {pageSizeOptions.map(pageSize => (\n             <option key={pageSize} value={pageSize}>\n               Show {pageSize}\n             </option>\n           ))}\n                </select> */}\n            </div>\n        </div>\n    )\n}\n\nconst MarkersTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [sizes, setSizes] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState, setEditState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    // React.useEffect(()=>{\n    //     console.log('modalValues',modalValues)\n    //     setEditState(modalValues)\n    // },[modalValues])\n    React.useEffect(() => {\n        console.log('modalValues', modalValues)\n        setLoading(true)\n        setEditState(modalValues)\n        if (modalValues) {\n\n            try {\n                let url = api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${modalValues.marker_id}`;\n                console.log('url', url)\n                fetch(url, {\n                    method: 'post',\n                })\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log('res: ', res)\n                        setSizes(res.Sizes)\n                        setLoading(false)\n                        // if(res.Error_No===0){\n                        //     props.enqueueSnackbar('Successfully Updated Worker!', { \n                        //         variant: 'info',\n                        //     })\n                        //     //fetchWorkers()\n                        //     setModalVisible(false)\n                        // }else{\n                        //     if(typeof res.Error_Description==='object'){\n                        //         console.log('objecttypeee')\n                        //         props.enqueueSnackbar('Validation Errors!', { \n                        //             variant: 'info',\n                        //         })\n                        //     }else{\n                        //         props.enqueueSnackbar(res.Error_Description, { \n                        //             variant: 'info',\n                        //         })\n                        //     }\n                        // }\n                    })\n                    .catch(err => {\n                        console.log('error while fetching', err)\n                        setLoading(false)\n                        props.enqueueSnackbar('Error While Getting Styles!', {\n                            variant: 'info',\n                        })\n                    })\n            } catch (err) {\n                console.log('err in try catch', err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Fetching Styles!', {\n                    variant: 'info',\n                })\n            }\n        }\n    }, [modalValues])\n\n\n    const fetchMarkers = () => {\n\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/Marker/getMarkers.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Markers)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n\n        fetchMarkers()\n\n    }, [])\n\n    return (\n        <div>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid>\n            </div> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true ?\n                                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\n                                            <CircularProgress color='primary' />\n                                        </div>\n                                        :\n                                        <div container style={{ textAlign: 'center' }}>\n                                            {\n                                                sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                            }\n                                        </div>\n                                }\n                                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Marker',\n                                accessor: 'marker_description',\n                            }\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(MarkersTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddMarkers from '../AddMarkers'\nimport MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Marker = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Marker</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Markers\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Markers\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddMarkers />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        {/* <div>ghgk</div> */}\n                        <MarkersTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Marker","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport SearchIcon from '@material-ui/icons/Search'\nimport CloseIcon from '@material-ui/icons/Close'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\n//import './index.css'\nimport { api_endpoint,api_endpoint_warehouse } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter, useRowSelect } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}) {\n    //const count = preGlobalFilteredRows.length\n\n    return (\n        <span>\n            <TextField\n                name='searchValue'\n                variant=\"outlined\"\n                label=\"Search\"\n                value={globalFilter || ''}\n                onChange={e => setGlobalFilter(e.target.value || undefined)}\n                fullWidth\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">\n                        <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                    </InputAdornment>\n                }}\n            />\n        </span>\n    )\n}\nconst IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = React.useRef()\n        const resolvedRef = ref || defaultRef\n\n        React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n        }, [resolvedRef, indeterminate])\n\n        return (\n            <>\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n        )\n    }\n)\nfunction MyTable({ columns, data, handleUpload }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter, selectedRowIds },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n    } = useTable({\n        columns,\n        data,\n    }, useGlobalFilter, usePagination, useRowSelect,\n        hooks => {\n            hooks.visibleColumns.push(columns => [\n                // Let's make a column for selection\n                {\n                    id: 'selection',\n                    // The header can use the table's getToggleAllRowsSelectedProps method\n                    // to render a checkbox\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\n                        <div>\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n                        </div>\n                    ),\n                    // The cell can use the individual row's getToggleRowSelectedProps method\n                    // to the render a checkbox\n                    Cell: ({ row }) => (\n                        <div>\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                        </div>\n                    ),\n                },\n                ...columns,\n            ])\n        })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{ width: '90%' }}>\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}>\n                <div style={{ width: 400 }}>\n                    <GlobalFilter\n                        preGlobalFilteredRows={preGlobalFilteredRows}\n                        globalFilter={globalFilter}\n                        setGlobalFilter={setGlobalFilter}\n                    />\n                </div>\n            </div>\n            <table {...getTableProps()} style={{ width: '100%' }}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                            {/* <th></th> */}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {/* <td>{i+1}</td> */}\n                                {row.cells.map(cell => {\n                                    return <td style={{ fontSize: 12 }} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {\n                Object.keys(selectedRowIds).length > 0 ?\n                    <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop: 20 }}>\n                            <Button fullWidth variant=\"contained\" color='primary' onClick={() => handleUpload(selectedRowIds)} style={{ color: '#fff', height: 55 }} >UPLOAD</Button>\n                        </Grid>\n                    </Grid>\n                    : null\n            }\n        </div>\n    )\n}\n\nconst AddRollIssuance = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [invoiceNumbers, setInvoiceNumbers] = React.useState([])\n    const [departments, setDepartments] = React.useState([])\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState([])\n    // const [editState, setEditState] = React.useState({})\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    // React.useEffect(() => {\n    //     console.log('modalValues', modalValues)\n    //     setEditState(modalValues)\n    // }, [modalValues])\n\n    const handleFetch = () => {\n\n        console.log('state: ', state)\n        console.log('tableValues: ', tableValues)\n        setTableValues(null)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try {\n            let url = api_endpoint_warehouse + `/fetch/getIssuanceRollsForInvoiceID?invoiceID=${state.invoice ? state.invoice.InvoiceID : ''}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    setLoading(false)\n                    console.log('res: ', res)\n                    if (res.Rolls) {\n                        setTableValues(res.Rolls)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Failed to Fetch Packing List!', {\n                        variant: 'info',\n                    })\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Fetch Packing List!', {\n                variant: 'info',\n            })\n        }\n\n    }\n\n    const handleUpload = async (args) => {\n        if (state.department) {\n            console.log('args', args, Object.keys(args), state.department.RouteID)\n            let keysArray = Object.keys(args)\n            let rolls = []\n            setLoading(true)\n            for (let i = 0; i < keysArray.length; i++) {\n                rolls.push({\n                    ItemID: tableValues[parseInt(keysArray[i])].ItemID,\n                    RollLength: tableValues[parseInt(keysArray[i])].RollLength\n                })\n            }\n            console.log('rolls', rolls)\n            let obj = {\n                itemIDArray: rolls,\n                intentionRouteID: state.department.RouteID\n            }\n            console.log('obj ---> ', obj)\n            try {\n                let url = api_endpoint + `/Jordan/Warehouse/Issuance/insertDepartmentMovement.php`\n                //invoice_no=${state.invoice?state.invoice.invoice_code:''}\n                console.log('url', url)\n                fetch(url, {\n                    method: 'post',\n                    body: JSON.stringify(obj)\n                })\n                    .then(res => res.json())\n                    .then(async res => {\n                        setLoading(false)\n                        console.log('response Roll Insertion: ', res)\n                        if (res.Error_No === 0) {\n                            props.enqueueSnackbar('Roll Intention Inserted successfully!', {\n                                variant: 'info',\n                            })\n                            let keys = []\n                            if (res.Responses && res.Responses.length > 0) {\n                                setModalValues(res.Responses)\n                                setModalVisible(true)\n                            }\n                            // await Promise.all(keysArray.map(kI => keys.push(tableValues[parseInt(kI)].item_id)))\n                            // console.log('keys => ',keys)\n                            // let tempTableValues = tableValues\n                            // for(let i=0;i<keys.length;i++){\n                            //     tempTableValues = tempTableValues.filter(tV => tV.item_id === keys[i])\n                            //     // tableValues[parseInt(keysArray[i])].item_id\n                            // }\n                            setTableValues([])\n\n                        } else {\n                            props.enqueueSnackbar('Failed to Insert roll!', {\n                                variant: 'info',\n                            })\n                        }\n                        // if(res.Packing_List){\n                        //     setTableValues(res.Packing_List)\n                        // }\n                    })\n                    .catch(err => {\n                        console.log('error while fetching', err)\n                        setLoading(false)\n                        props.enqueueSnackbar('Failed to Insert roll!', {\n                            variant: 'info',\n                        })\n                    })\n            } catch (err) {\n                console.log('err in try catch', err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Insert roll!', {\n                    variant: 'info',\n                })\n            }\n        } else {\n            props.enqueueSnackbar('Select Department First!', {\n                variant: 'info',\n            })\n        }\n\n\n\n    }\n\n    const fetchInvoiceNumbers = () => {\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getIssuanceInvoices')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.Invoices) {\n                        setInvoiceNumbers(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            //setTableValues([])\n        }\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getRoutesForStockingOut')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.Routes) {\n                        setDepartments(res.Routes)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            //setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchInvoiceNumbers()\n    }, [])\n    // React.useEffect(() => {\n    //     fetchPackingListForInvoice()\n    // }, [state.invoice])\n\n    return (\n        <>\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\n            <Dialog\n                open={modalVisible}\n                onBackdropClick={() => setModalVisible(false)}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalValues && modalValues.length > 0 ?\n                            <div style={{ width: '100%', textAlign: 'center', position: 'relative' }}>\n                                <CloseIcon color={'lightgrey'} size={25} style={{ position: 'absolute', top: 5, right: 5, cursor: 'pointer' }} onClick={() => setModalVisible(false)} />\n                                <Typography variant=\"h6\" color='primary' style={{ textAlign: 'center' }}>\n                                    Issuance Summary\n                            </Typography>\n                                <table style={{ width: '100%', marginTop: 15 }}>\n                                    <thead>\n                                        <tr>\n                                            <th style={{ fontSize: 13 }}>Roll Rfid</th>\n                                            <th style={{ fontSize: 13 }}>Status</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            modalValues.map(mV => (\n                                                <tr>\n                                                    <td style={{ fontSize: 12 }}>{mV.item_id}</td>\n                                                    <td style={{ fontSize: 12 }}>{mV.Error_Description}</td>\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            : 'Nothing to Display'\n                    }\n                </div>\n            </Dialog>\n\n            <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid item lg={4} md={4} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={invoiceNumbers}\n                        getOptionLabel={option => option.InvoiceCode}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, invoice: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\n                    <Button fullWidth variant=\"contained\" color='primary' onClick={handleFetch} style={{ color: '#fff', height: '100%' }} >\n                        {\n                            loading === true ?\n                                <CircularProgress color={'#fff'} />\n                                :\n                                `Fetch`\n                        }\n                    </Button>\n                </Grid>\n                <Grid item lg={4} md={4} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={departments}\n                        getOptionLabel={option => option.ToLocation}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, department: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n\n                {\n                    // tableValues === null ?\n                    // <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                    //     <CircularProgress color='primary' />\n                    // </div>\n                    // :\n                    tableValues === null || tableValues.length === 0 ?\n                        null\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Rfid',\n                                accessor: 'TagID',\n                            },\n                            // {\n                            //     Header: 'ID',\n                            //     accessor: 'ItemID',\n                            // },\n                            {\n                                Header: 'Supplier',\n                                accessor: 'Supplier',\n                            },\n                            // {\n                            //     Header: 'Buyer',\n                            //     accessor: 'Buyer',\n                            // },\n                            {\n                                Header: 'Style',\n                                accessor: 'StyleCode',\n                            },\n                            {\n                                Header: 'Color',\n                                accessor: 'ColorCode',\n                            },\n                            {\n                                Header: 'Roll No',\n                                accessor: 'RollCode',\n                            },\n                            {\n                                Header: 'Fabric',\n                                accessor: 'FabricType',\n                            },\n                            {\n                                Header: 'Length',\n                                accessor: 'RollLength',\n                            },\n                            {\n                                Header: 'Net Weight',\n                                accessor: 'NetWeight',\n                            },\n                            {\n                                Header: 'Gross Weight',\n                                accessor: 'GrossWeight',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} handleUpload={handleUpload}\n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\n                        />\n                }\n            </Grid>\n            <Backdrop open={openBackdrop}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </>\n    )\n}\n\nexport default withSnackbar(AddRollIssuance)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddRollIssuance from '../AddRollIssuance'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst RollIssuance = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Roll Issuance</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add roll Issuance\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        {/* <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddRollIssuance/>\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    {/* <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewPackingList/>\n                        <MarkersTable />\n                    </TabPanel> */}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default RollIssuance","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst AddCutJob = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [sizes,setSizes] = React.useState([])\n    const [partNames,setPartNames] = React.useState([])\n    // const [styles,setStyles] = React.useState([])\n    // const [colors,setColors] = React.useState([])\n    // const [tableValues,setTableValues] = React.useState([])\n    const [markers,setMarkers] = React.useState([])\n\n    \n    React.useEffect(()=>{\n        fetchMarkers()\n        fetchPartNames()\n    },[])\n\n    React.useEffect(()=>{\n        \n        if(state.marker){\n            //console.log('satte',state)\n            try {\n                fetch(api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${state.marker.marker_id}`)\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res)\n                        setSizes(res.Sizes)\n                    })\n                    .catch(err => {\n                        console.log('err in fetching', err)\n                        setSizes([])\n                    })\n            } catch (err) {\n                console.log('try catch error: ', err)\n                setSizes([])\n            }\n        }\n\n    },[state.marker])\n\n    const fetchMarkers = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/Marker/getMarkers.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setMarkers(res.Markers)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setMarkers([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setMarkers([])\n        }\n    }\n    const fetchPartNames = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/cutReport/getPartNames.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if(res.Part_Names){\n                        setPartNames(res.Part_Names)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setMarkers([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setMarkers([])\n        }\n    }\n\n    const handleAdd = () => {\n\n        setLoading(true)\n        console.log('satet',state)\n        try{\n            let url = api_endpoint+`/Jordan/Cutting/CutJob/insertCutJobForMarker.php?marker_id=${state.marker.marker_id}&no_of_layers=${state.no_of_layers}&cut_description=${state.cut_description}&part_name=${state.part_name}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Cut Job!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Cut Job!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Cut Job!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Enter Quantity\n                    </div>\n                    <div style={{padding:10}}>\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\n                    </div>\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            Save Quantity\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog> */}\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={markers}\n                        getOptionLabel={option => option.marker_description}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,marker:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Marker\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={sizes}\n                        getOptionLabel={option => option.size_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,size:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid> */}\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField name='cut_description' variant=\"outlined\" label=\"Cut Description\" values={state.cut_description} onChange={e=>setState({...state,cut_description:e.target.value})} fullWidth />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField name='no_of_layers' variant=\"outlined\" label=\"No Of Layers\" values={state.no_of_layers} onChange={e=>setState({...state,no_of_layers:e.target.value})} fullWidth />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={partNames}\n                        getOptionLabel={option => option.part_name}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => {if(v){setState({...state,part_name:v.part_name})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Part Name\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                    {/* <TextField name='part_name' variant=\"outlined\" label=\"Part Name\" values={state.part_name} onChange={e=>setState({...state,part_name:e.target.value})} fullWidth /> */}\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Cut job</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddCutJob)","import React from 'react'\nimport { Grid, TextField, Button, Typography } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst ExecuteCutJob = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    // const [sizes,setSizes] = React.useState([])\n    // const [styles,setStyles] = React.useState([])\n    // const [colors,setColors] = React.useState([])\n    // const [tableValues,setTableValues] = React.useState([])\n    const [cutJobs,setCutJobs] = React.useState([])\n\n    \n    React.useEffect(()=>{\n        fetchCutJobs()\n    },[])\n\n    // React.useEffect(()=>{\n        \n    //     if(state.marker){\n    //         //console.log('satte',state)\n    //         try {\n    //             fetch(api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${state.marker.marker_id}`)\n    //                 .then(res => res.json())\n    //                 .then(res => {\n    //                     console.log(res)\n    //                     setSizes(res.Sizes)\n    //                 })\n    //                 .catch(err => {\n    //                     console.log('err in fetching', err)\n    //                     setSizes([])\n    //                 })\n    //         } catch (err) {\n    //             console.log('try catch error: ', err)\n    //             setSizes([])\n    //         }\n    //     }\n\n    // },[state.marker])\n\n    const fetchCutJobs = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/CutJob/getCutJobs.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if(res.CutJobs){\n                        setCutJobs(res.CutJobs)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setCutJobs([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setCutJobs([])\n        }\n    }\n\n    const handleAdd = () => {\n\n        setLoading(true)\n        console.log('satet',state)\n        try{\n            \n            let url = api_endpoint+`/Jordan/Cutting/CutJob/executeCutJob.php?cut_job_id=${state.cutJob.cut_job_id}&no_of_bundles=${state.no_of_bundles}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Executed Cut Job!', { \n                        variant: 'info',\n                    })\n                    setModalVisible(true)\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Executing Cut Job!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Executing Cut Job!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{width:200,padding:20,display:'flex',justifyContent:'center'}}>\n                    <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Cut Job Executed Successfully!</Typography>\n                </div>\n                <div style={{width:200,padding:'0px 20px',display:'flex',justifyContent:'center'}}>\n                    Cut Job ID: {state.cutJob?state.cutJob.cut_job_id:null}\n                    </div>\n                <div style={{width:200,padding:20,display:'flex',justifyContent:'center'}}>\n                    <Button style={{marginTop:20}} variant=\"contained\" fullWidth onClick={()=>setModalVisible(false)}>Okay</Button>\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={cutJobs}\n                        getOptionLabel={option => option.cut_job_description}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,cutJob:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Cut Job\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField name='no_of_bundles' variant=\"outlined\" label=\"No Of Bundles\" values={state.no_of_bundles} onChange={e=>setState({...state,no_of_bundles:e.target.value})} fullWidth />\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Execute Cut Job</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(ExecuteCutJob)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddCutJob from '../AddCutJob'\nimport ExecuteCutJob from '../ExecuteCutJob'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst CutJob = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Cut Job</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Cut Job\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"Execute Cut Job\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddCutJob />\n                        \n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ExecuteCutJob />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CutJob","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search\"\n            style={{marginTop:30}}\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,handleDelete }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}>\n                    <DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={() => handleDelete(row.original)} />\n                </td>\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst CutReportTable = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [styles, setStyles] = React.useState([])\n    const [count, setCount] = React.useState(null)\n    const [colors, setColors] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [state, setState] = React.useState({})\n    const [tableValues, setTableValues] = React.useState(null)\n    // const [editState,setEditState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    React.useEffect(() => {\n\n        if (state.style) {\n            try {\n                fetch(api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style.style_code}`)\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res)\n                        setColors(res.Colors)\n                    })\n                    .catch(err => {\n                        console.log('err in fetching', err)\n                        setColors([])\n                    })\n            } catch (err) {\n                console.log('try catch error: ', err)\n                setColors([])\n            }\n        }\n\n\n    }, [state.style])\n\n\n    const handleFetch = () => {\n        setCount(null)\n        console.log('Stat', state)\n        setLoading(true)\n        let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutReportForOrder.php?order_id=${state.color.order_id}`;\n        console.log('url', url)\n        try {\n            fetch(url)\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.Cut_Report) {\n                        setTableValues(res.Cut_Report)\n                        setCount(res.Cut_Report.length)\n                        setLoading(false)\n                    } else {\n                        setTableValues([])\n                        setLoading(false)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                    setLoading(false)\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n            setLoading(false)\n        }\n    }\n\n    React.useEffect(() => {\n        try {\n            //fetch(api_endpoint + '/Jordan/SPTS/style/getUploadedStyleCodes.php')\n            fetch(api_endpoint + '/Jordan/SPTS/order/getStyleCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setStyles(res.Styles)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setStyles([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setStyles([])\n        }\n        //fetchMarkers()\n\n    }, [])\n\n    const handleDelete = (record) => {\n        console.log('record: ', record)\n        alert('In progress!')\n        // let url = api_endpoint + `/Jordan/SPTS/cutReport/deleteBundles.php?bundle_ids=${record.bundle_id}`;\n        // console.log('url',url)\n        // try {\n        //     fetch(url,{\n        //         method:'post'\n        //     })\n        //         .then(res => res.json())\n        //         .then(res => {\n        //             console.log(res)\n        //             if(res.Cut_Report){\n        //                 setTableValues(res.Cut_Report)\n        //                 setLoading(false)\n        //             }else{\n        //                 setTableValues([])\n        //                 setLoading(false)\n        //             }\n        //         })\n        //         .catch(err => {\n        //             console.log('err in fetching', err)\n        //             setTableValues([])\n        //             setLoading(false)\n        //         })\n        //     } catch (err) {\n        //         console.log('try catch error: ', err)\n        //         setTableValues([])\n        //         setLoading(false)\n        // }\n\n\n    }\n\n    return (\n        <div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={5} md={5} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, style: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid lg={5} md={5} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, color: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\n                    <Button variant=\"contained\" color='primary' style={{ width: '100%', height: 55, color: '#fff' }} onClick={handleFetch}>\n                        {\n                            loading===true?\n                            <CircularProgress color={'#fff'}/>\n                            :`Fetch`\n                        }\n                    </Button>\n                </Grid>\n                {/* <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid> */}\n            </div>\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true?\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\n                                        <CircularProgress color='primary'/>\n                                    </div>\n                                    :\n                                    <div container style={{textAlign:'center'}}>\n                                        {\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                        }\n                                    </div>\n                                }\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            {\n                tableValues === null ?\n                    null\n                    :\n                    <>\n                    {\n                        count !== null?\n                        <Grid lg={12} md={12} sm={12} xs={12} style={{paddingTop:15,marginTop:15}}>\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\n                                No Of Cuts: {count}\n                            </Typography>\n\n                        </Grid>\n                        :null\n                    }\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        {\n                            loading === true ?\n                                <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                                    <CircularProgress color='primary' />\n                                </div>\n                                :\n                                 <MyTable columns={[\n                                        {\n                                            Header: 'Cut',\n                                            accessor: 'cut_code',\n                                        },\n                                        {\n                                            Header: 'Bundle',\n                                            accessor: 'bundle_code',\n                                        },\n                                        {\n                                            Header: 'Piece Size',\n                                            accessor: 'piece_size',\n                                        },\n                                        {\n                                            Header: 'Color',\n                                            accessor: 'color',\n                                        },\n                                        {\n                                            Header: 'Qty',\n                                            accessor: 'quantity',\n                                        },\n                                        {\n                                            Header: 'Pay Order',\n                                            accessor: 'pay_order_code',\n                                        },\n                                        {\n                                            Header: 'Seq Start',\n                                            accessor: 'seq_start',\n                                        },\n                                        {\n                                            Header: 'Seq End',\n                                            accessor: 'seq_end',\n                                        },\n                                        {\n                                            Header: 'Part Name',\n                                            accessor: 'part_name',\n                                        },\n                                        {\n                                            Header: 'Remarks',\n                                            accessor: 'remarks',\n                                        },\n                                    ]} data={tableValues} tableValues={tableValues} handleDelete={handleDelete} />\n\n                                // <table style={{ height: 400, overflowY: 'scroll' }}>\n                                //     <tr>\n                                //         {/* <th style={{ width: '40px' }}></th> */}\n                                //         <th>OTN</th>\n                                //         <th>Cut</th>\n                                //         <th>Bundle</th>\n                                //         <th>Piece Size</th>\n                                //         <th>Color</th>\n                                //         <th>Quantity</th>\n                                //         <th>Seq Start</th>\n                                //         <th>Seq End</th>\n                                //         <th>Part Name</th>\n                                //         <th style={{ width: '40px' }}></th>\n                                //         {/* <th style={{ width: '70px' }}></th> */}\n                                //     </tr>\n                                //     <tbody>\n                                //         {\n                                //             tableValues && tableValues.map((v, i) => (\n                                //                 <tr>\n                                //                     <td>{v.otn}</td>\n                                //                     <td>{v.cut_code}</td>\n                                //                     <td>{v.bundle_code}</td>\n                                //                     <td>{v.piece_size}</td>\n                                //                     <td>{v.color}</td>\n                                //                     <td>{v.quantity}</td>\n                                //                     <td>{v.seq_start}</td>\n                                //                     <td>{v.seq_end}</td>\n                                //                     <td>{v.part_name}</td>\n                                                    \n                                //                 </tr>\n                                //             ))\n                                //         }\n\n                                //     </tbody>\n                                // </table>\n                        }\n                    </div>\n                    </>\n\n            }\n        </div>\n    )\n}\n\nexport default withSnackbar(CutReportTable)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search\"\n            style={{marginTop:30}}\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data}) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              {/* <th></th> */}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}>\n                    <DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={() => handleDelete(row.original)} />\n                </td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst CutReportMappingTable = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [state, setState] = React.useState({})\n    const [tableValues, setTableValues] = React.useState(null)\n    // const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    React.useEffect(()=>{\n\n        if(state.style){\n            try {\n                fetch(api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style.style_code}`)\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res)\n                        setColors(res.Colors)\n                    })\n                    .catch(err => {\n                        console.log('err in fetching', err)\n                        setColors([])\n                    })\n            } catch (err) {\n                console.log('try catch error: ', err)\n                setColors([])\n            }\n        }\n\n\n    },[state.style])\n    \n    const handleFetch = () => {\n        console.log('Stat',state)\n        setLoading(true)\n        let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutReportMappingForOrder.php?order_id=${state.color.order_id}`;\n        console.log('url',url)\n        try {\n                    fetch(url)\n                        .then(res => res.json())\n                        .then(res => {\n                            console.log(res)\n                            if(res.Cut_Report){\n                                setTableValues(res.Cut_Report)\n                                setLoading(false)\n                            }else{\n                                setTableValues([])\n                                setLoading(false)\n                            }\n                        })\n                        .catch(err => {\n                            console.log('err in fetching', err)\n                            setTableValues([])\n                            setLoading(false)\n                        })\n                    } catch (err) {\n                        console.log('try catch error: ', err)\n                        setTableValues([])\n                        setLoading(false)\n                }\n    }\n    \n    React.useEffect(() => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/order/getStyleCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setStyles(res.Styles)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setStyles([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setStyles([])\n        }\n        \n\n    }, [])\n\n    return (\n        <div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Grid lg={5} md={5} sm={5} xs={5} style={{padding:5}}>\n                <Autocomplete\n                    //id=\"combo-box-demo\"\n                    options={styles}\n                    getOptionLabel={option => option.style_code}\n                    style={{ width: '100%' }}\n                    onChange={(e,v) => setState({...state,style:v})}\n                    renderInput={params => (\n                        <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                    )}\n                />\n            </Grid>\n            <Grid lg={5} md={5} sm={5} xs={5} style={{padding:5}}>\n                <Autocomplete\n                    //id=\"combo-box-demo\"\n                    options={colors}\n                    getOptionLabel={option => option.color}\n                    style={{ width: '100%' }}\n                    onChange={(e,v) => setState({...state,color:v})}\n                    renderInput={params => (\n                        <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                    )}\n                />\n            </Grid>\n            <Grid lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                <Button variant=\"contained\" color='primary' style={{width:'100%',height:55,color:'#fff'}} onClick={handleFetch}>\n                    {\n                        loading===true?\n                        <CircularProgress color={'#fff'}/>\n                        :`Fetch`\n                    }\n                </Button>\n            </Grid>\n                {/* <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid> */}\n            </div>\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true?\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\n                                        <CircularProgress color='primary'/>\n                                    </div>\n                                    :\n                                    <div container style={{textAlign:'center'}}>\n                                        {\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                        }\n                                    </div>\n                                }\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            {\n                tableValues === null ?\n                null\n                :\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    {\n                        loading === true ?\n                            <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                                <CircularProgress color='primary' />\n                            </div>\n                            :\n                            <MyTable columns={[\n                                {\n                                    Header: 'Cut',\n                                    accessor: 'cut_code',\n                                },\n                                {\n                                    Header: 'Bundle',\n                                    accessor: 'bundle_code',\n                                },\n                                {\n                                    Header: 'Piece Size',\n                                    accessor: 'piece_size',\n                                },\n                                {\n                                    Header: 'Color',\n                                    accessor: 'color',\n                                },\n                                {\n                                    Header: 'Qty',\n                                    accessor: 'quantity',\n                                },\n                                {\n                                    Header: 'RFID',\n                                    accessor: 'rfid',\n                                },\n                                {\n                                    Header: 'Seq Start',\n                                    accessor: 'seq_start',\n                                },\n                                {\n                                    Header: 'Seq End',\n                                    accessor: 'seq_end',\n                                },\n                                {\n                                    Header: 'Part Name',\n                                    accessor: 'part_name',\n                                },\n                            ]} data={tableValues} tableValues={tableValues} />\n                            // <table style={{ height: 400, overflowY: 'scroll' }}>\n                            //     <tr>\n                            //         {/* <th style={{ width: '40px' }}></th> */}\n                            //         <th>OTN</th>\n                            //         <th>Cut</th>\n                            //         <th>Bundle</th>\n                            //         <th>RFID</th>\n                            //         <th>Piece Size</th>\n                            //         <th>Color</th>\n                            //         <th>Quantity</th>\n                            //         <th>Seq Start</th>\n                            //         <th>Seq End</th>\n                            //         <th>Part Name</th>\n                            //         {/* <th style={{ width: '70px' }}></th> */}\n                            //     </tr>\n                            //     <tbody>\n                            //         {\n                            //             tableValues && tableValues.map((v,i) => (\n                            //                 <tr>\n                            //                     <td>{v.otn}</td>\n                            //                     <td>{v.cut_code}</td>\n                            //                     <td>{v.bundle_code}</td>\n                            //                     <td>{v.rfid}</td>\n                            //                     <td>{v.piece_size}</td>\n                            //                     <td>{v.color}</td>\n                            //                     <td>{v.quantity}</td>\n                            //                     <td>{v.seq_start}</td>\n                            //                     <td>{v.seq_end}</td>\n                            //                     <td>{v.part_name}</td>\n                            //                     {/* <td style={{ textAlign: 'center' }}>\n                            //                     <InfoIcon color='primary' onClick={() => {\n                            //                         setModalVisible(true)\n                            //                         setModalValues(v)\n                            //                     }} style={{ cursor: 'pointer', marginRight: 15 }} />\n                            //                         <DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                            //                 </tr>\n                            //             ))\n                            //         }\n                                    \n                            //     </tbody>\n                            // </table>\n                    }\n                </div>\n\n            }\n        </div>\n    )\n}\n\nexport default withSnackbar(CutReportMappingTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport CutReportTable from '../CutReportTable'\nimport CutReportMappingTable from '../CutReportMappingTable'\n// import OrdersTable from '../OrdersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst CutReport = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Cut Report</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"View Cut Report\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Cut Report Mapping\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <CutReportTable />\n                        \n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <CutReportMappingTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CutReport","import React from 'react'\nimport { Grid, TextField, Button, Typography, CircularProgress } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport readXlsxFile from 'read-excel-file'\n\n\n\nconst AddStyleBulletin = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [spreadSheetButtonVisible, setSpreadSheetButtonVisible] = React.useState(false)\n    const [modalVisible2, setModalVisible2] = React.useState(false)\n    const [responses, setResponses] = React.useState([])\n    const [loading,setLoading] = React.useState(false)\n    //const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [operations,setOperations] = React.useState([])\n    const [machineTypes,setMachineTypes] = React.useState([])\n    //const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    //const [deparments,setDepartments] = React.useState([])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        console.log('state',state)\n        // if(state.style){\n        //     fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n        //     .then(res => res.json()\n        //     .then(res => {\n        //         console.log('res colors',res)\n        //         setColors(res.Colors)\n        //     }))\n        //     .catch(err => {\n        //         console.log('err in fetch',err)\n        //     })\n\n        // }\n    },[state.style])\n\n\n    const handleAppend = () => {\n        console.log('handleAppend',state)\n        setModalVisible(false)\n        setTableValues(s => [...s,{id:uuid(),operation_code:state.operation?state.operation.operation_code:'',operation_description:state.operation?state.operation.operation_description:'',operation_sequence:state.sequence,no_of_operators:state.noOfOperators,no_of_helpers:state.noOfHelpers,machine_type:state.machineType?state.machineType.machine_type:'',target:state.target,time_for_target:state.timeForTarget}])\n        //setState({...state,size_id:null,size_code:null,quantity:null})\n    }\n\n    const handleFileUpload = (e) => {\n        // setExcelLoading(true)\n        console.log('e ',e)\n        console.log('e.target.files ',e.target.files)\n        //setFilesState()\n        try{\n\n            readXlsxFile(e.target.files[0]).then(async (rows) => {\n                let arr = []\n                console.log('rows: ',rows)\n                for(let i=1; i<rows.length; i++){\n                    let obj = {\n                        operation_code:rows[i][0],\n                        operation_description:rows[i][1],\n                        operation_sequence:rows[i][2],\n                        no_of_operators:rows[i][3],\n                        machine_type:rows[i][4],\n                        target:rows[i][5],\n                        time_for_target:rows[i][6],\n                        no_of_helpers:rows[i][7],\n                        id:uuid()\n                    }\n                    arr.push(obj)\n                }\n                console.log('arr',arr)\n                setTableValues(arr)\n                // setExcelLoading(false)\n                // `rows` is an array of rows\n                // each row being an array of cells.\n              })\n        }catch(err){\n            console.log('errr',err)\n            // setExcelLoading(false)\n        }\n\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res operations',res)\n\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\n\n            setOperations(ops)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res machine Types',res)\n            // let s = await Promise.all(res.Machi.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description})))\n\n            // setOperations(ops)\n            setMachineTypes(res.machine_types)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        \n    },[])\n\n    const handleUpload = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        console.log('state: ',state)\n        console.log('tableValues: ',tableValues)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/style/insertStyleBulletin.php`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n                body: JSON.stringify({styleBulletin:tableValues,style_code:state.style})\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Responses){\n                    setResponses(res.Responses)\n                    setModalVisible2(true)\n                }\n                if(res.Error_No===0){\n                    props.enqueueSnackbar(res.Error_Description?res.Error_Description:'Successfully Added Style Bulletin!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Style Bulletin!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Style Bulletin!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible2}\n            >\n                <div style={{ padding: 20, width: 543 }}>\n                    <div style={{padding:10,textAlign:'center'}}>\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Summary of Insertion</Typography>\n                    </div>\n                    <Grid container style={{padding:10}}>\n                        {\n                            responses && responses.length && responses.length>0?\n                            <table style={{width:'100%'}}>\n                                <tr>\n                                    <th>Style</th>\n                                    <th>Operation Code</th>\n                                    <th>Operation Desc</th>\n                                    <th>Operation Seq</th>\n                                    <th>Status</th>\n                                </tr>\n                                <tbody>\n                                    {\n                                        responses && responses.map(v => (\n                                            <tr>\n                                                <td>{v.style_code}</td>\n                                                <td>{v.operation_code}</td>\n                                                <td>{v.operation_description}</td>\n                                                <td>{v.operation_sequence}</td>\n                                                <td style={{color:v.Error_Description==='Failed'?'red':''}}>{v.Error_Description}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                            :null\n                        }\n                    \n                    </Grid>\n                        <div style={{display:'flex',justifyContent:'center'}}>\n                            <Button color='primary' fullWidth onClick={()=>setModalVisible2(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                                Okay\n                            </Button>\n                        </div>\n                    </div>\n            </Dialog>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10,textAlign:'center'}}>\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Provide The Following Information For Style</Typography>\n                    </div>\n                    <Grid container style={{padding:10}}>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={operations}\n                                getOptionLabel={option => option.operation}\n                                style={{ width: '100%' }}\n                                onChange={(e,v) => setState({...state,operation:v})}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={machineTypes}\n                                getOptionLabel={option => option.machine_type}\n                                style={{ width: '100%' }}\n                                onChange={(e,v) => setState({...state,machineType:v})}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" values={state.sequence} onChange={e=>setState({...state,sequence:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" values={state.target} onChange={e=>setState({...state,target:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" values={state.timeForTarget} onChange={e=>setState({...state,timeForTarget:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" values={state.noOfOperators} onChange={e=>setState({...state,noOfOperators:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" values={state.noOfHelpers} onChange={e=>setState({...state,noOfHelpers:e.target.value})} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <div style={{display:'flex',justifyContent:'center'}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            Okay\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => {if(v){setState({...state,style:v.style_code})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                    <Button variant=\"contained\" color='primary' onClick={()=>setModalVisible(true)} style={{height:55,color:'#fff'}} fulLWidth>\n                        Add\n                    </Button>\n                    {/* <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    /> */}\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5,justifyContent:'center',display:'flex'}}>\n                    <Typography variant=\"subtitle1\" color='primary' style={{cursor:'pointer',textAlign:'center',fontWeight:'700'}} onClick={()=>setSpreadSheetButtonVisible(!spreadSheetButtonVisible)}>Upload from Spreadsheet</Typography>\n                    {spreadSheetButtonVisible === true?\n                    <input type='file' style={{marginLeft:15}} onChange={handleFileUpload}/>\n                    :null\n                    }\n                </Grid>\n                    {/* {\n                        spreadSheetButtonVisible === true?\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5,justifyContent:'center',display:'flex'}}>\n                            <input type='file'/>\n                        </Grid>\n                        :null\n                    } */}\n                \n                \n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\n                </Grid> */}\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Operation Code</th>\n                                <th>Operation Desc</th>\n                                <th>Operation Seq</th>\n                                <th>No. of Operators</th>\n                                <th>Machine Type</th>\n                                <th>Target</th>\n                                <th>Time For Target</th>\n                                <th>No. of Helpers</th>\n                                <th style={{ width: '40px' }}></th>\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.operation_code}</td>\n                                            <td>{v.operation_description}</td>\n                                            <td>{v.operation_sequence}</td>\n                                            <td>{v.no_of_operators}</td>\n                                            <td>{v.machine_type}</td>\n                                            <td>{v.target}</td>\n                                            <td>{v.time_for_target}</td>\n                                            <td>{v.no_of_operators}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleUpload}\n                        fullWidth\n                    >{\n                        loading===true?\n                        <CircularProgress color='#fff'/>\n                        :`Upload Style Bulletin`   \n                    }</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddStyleBulletin)","import React from 'react'\nimport { Grid, TextField, Button,Backdrop,CircularProgress, Typography } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst ViewStyleBulletin = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [count, setCount] = React.useState(null)\n    const [somethingChanged, setSomethingChanged] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    //const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [operations,setOperations] = React.useState([])\n    const [machineTypes,setMachineTypes] = React.useState([])\n    //const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    //const [deparments,setDepartments] = React.useState([])\n\n    // React.useEffect(()=>{\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n    //     console.log('state',state)\n    //     // if(state.style){\n    //     //     fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n    //     //     .then(res => res.json()\n    //     //     .then(res => {\n    //     //         console.log('res colors',res)\n    //     //         setColors(res.Colors)\n    //     //     }))\n    //     //     .catch(err => {\n    //     //         console.log('err in fetch',err)\n    //     //     })\n\n    //     // }\n    // },[state.style])\n\n\n    // const handleAppend = () => {\n    //     console.log('handleAppend',state)\n    //     setModalVisible(false)\n    //     setTableValues(s => [...s,{id:uuid(),operation_code:state.operation.operation_code,operation_description:state.operation.operation_description,operation_sequence:state.sequence,no_of_operators:state.noOfOperators,no_of_helpers:state.noOfHelpers,machine_type:state.machineType.machine_description,target:state.target,time_for_target:state.timeForTarget}])\n    //     //setState({...state,size_id:null,size_code:null,quantity:null})\n    // }\n\n    React.useEffect(()=>{\n        \n        //__________________________________________________________________________________________________________//\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        //__________________________________________________________________________________________________________//\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res operations',res)\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\n            setOperations(ops)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        //__________________________________________________________________________________________________________//\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res machine Types',res)\n            setMachineTypes(res.machine_types)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        //__________________________________________________________________________________________________________//\n\n        \n    },[])\n\n    const handleDelete = (record) => {\n        console.log('toDelete:',record)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/style/deleteStyleBulletin.php?styleBulletin=${JSON.stringify({...record,Style_id:record.style_id})}`\n            console.log('url: ',url)\n            setOpenBackdrop(true)\n            fetch(url,{\n                method:'post'\n            })\n                .then(res => res.json())\n                .then(res => {\n                    setOpenBackdrop(false)\n                    console.log('delete response: ', res)\n                    if (res.Error_No === 0) {\n                        props.enqueueSnackbar('Successfully deleted style bulletin!', {\n                            variant: 'info',\n                        })\n                        handleFetch()\n                    }\n                    //setTableValues(res.Orders)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setOpenBackdrop(false)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setOpenBackdrop(false)\n            //setTableValues([])\n        }\n        // try{\n        //     let url = api_endpoint+`/Jordan/SPTS/style/deleteStyleBulletin.php?styleBulletin=${record}`;\n        //     console.log('url',url)\n        //     fetch(url,{\n        //         method: 'post',\n        //     })\n        //     .then(res => res.json())\n        //     .then(res => {\n        //         setLoading(false)\n        //         console.log('res: ',res)\n        //         setTableValues(res.Style_Bulletin)\n        //     })\n        //     .catch(err => {\n        //         console.log('error while fetching',err)\n        //         setLoading(false)\n        //         props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n        //             variant: 'info',\n        //         })\n        //     })\n        // }catch(err){\n        //     console.log('err in try catch',err)\n        //     setLoading(false)\n        //     props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n        //         variant: 'info',\n        //     })\n        // }\n    }\n    const handleUpdateTable = async () => {\n        // console.log('modalValues',modalValues)\n        // console.log('tableVlaue',tableValues)\n        let tempTable = await Promise.all(tableValues.map(v => {\n            if(v.style_id===modalValues.style_id){\n                return modalValues\n            }else{\n                return v\n            }\n        }))\n        console.log('newTable',tempTable)\n        setTableValues(tempTable)\n        setSomethingChanged(true)\n        setModalVisible(false)\n\n        //let \n\n    }\n\n    const handleUpdate = async () => {\n        console.log('tableValues',tableValues)\n        setLoading(true)\n        let table = await Promise.all(tableValues.map(t => ({...t,Style_id:t.style_id,target:t.order_target,time_for_target:t.allocated_time_for_target})))\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/style/updateStyleBulletin.php`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n                body: JSON.stringify({styleBulletin:table})\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                setTableValues([])\n                setSomethingChanged(false)\n                props.enqueueSnackbar('Updated Style Bulletin Successfully!', { \n                    variant: 'info',\n                })\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Update Style Bulletin!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Update Style Bulletin!', { \n                variant: 'info',\n            })\n        }\n\n    }\n\n    const handleFetch = () => {\n        setCount(null)\n\n        console.log('state: ',state)\n        console.log('tableValues: ',tableValues)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/style/getStyleBulletinForStyleCode.php?style_code=${state.style}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                setTableValues(res.Style_Bulletin)\n                setCount(res.Style_Bulletin.length)\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Update The Following Information For Style\n                    </div>\n                    {\n                        modalValues?\n                        <Grid container style={{padding:10}}>\n                            {\n                                console.log('modalValues ====> ',modalValues)\n                            }\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={operations}\n                                getOptionLabel={option => option.operation}\n                                style={{ width: '100%' }}\n                                defaultValue={()=>operations.filter(o => o.operation_code===modalValues.operation_code)[0]}\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,operation_id:v.operation_id,operation_code:v.operation_code,operation_description:v.operation_description})}}}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={machineTypes}\n                                getOptionLabel={option => option.machine_type}\n                                style={{ width: '100%' }}\n                                defaultValue={{machine_type:modalValues.machine_type}}\n                                //value={modalValues.machine_type}\n                                //defaultValue={() => machineTypes.filter(t => t.)}\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,machine_type:v.machine_type})}}}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" value={modalValues.operation_sequence} onChange={e=>setModalValues({...modalValues,operation_sequence:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" value={modalValues.order_target} onChange={e=>setModalValues({...modalValues,order_target:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" value={modalValues.allocated_time_for_target} onChange={e=>setModalValues({...modalValues,allocated_time_for_target:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" value={modalValues.no_of_operators} onChange={e=>setModalValues({...modalValues,no_of_operators:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" value={modalValues.no_of_helpers} onChange={e=>setModalValues({...modalValues,no_of_helpers:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                    </Grid>\n                    :null\n                    }\n                    <div style={{display:'flex',justifyContent:'center'}}>\n                        <Button color='primary' fullWidth onClick={handleUpdateTable} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            {\n                                loading === true?\n                                <CircularProgress color={'#fff'}/>\n                                :\n                                `Update`\n                            }\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                    <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{height:55,color:'#fff'}} fullWidth>\n                        fetch\n                    </Button>\n                    \n                    {/* <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                            )}\n                        /> */}\n                </Grid>\n                {/* <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                            <Button variant=\"contained\" color='primary' onClick={handleUpdate} style={{height:55,color:'#fff'}} fullWidth>\n                                Save changes\n                            </Button>\n                        </Grid> */}\n                {\n                        somethingChanged===true?\n                        <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                            <Button variant=\"contained\" color='primary' onClick={handleUpdate} style={{height:55,color:'#fff'}} fullWidth>\n                                {\n                                    loading===true?\n                                    <CircularProgress color={'#fff'}/>\n                                    :`Update`\n                                }\n                            </Button>\n                        </Grid>\n                        :null\n                    }\n                \n                \n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\n                </Grid> */}\n                {\n                    count !== null?\n                    <Grid container style={{display:'flex',justifyContent:'center'}}>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:15,marginTop:15}}>\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\n                                No Of Style Bulletin: {count}\n                            </Typography>\n\n                        </Grid>\n                    </Grid>\n                    :null\n                }\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        loading===true?\n                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Operation Code</th>\n                                <th>Operation Desc</th>\n                                <th>Operation Seq</th>\n                                <th>No. of Operators</th>\n                                <th>Machine Type</th>\n                                <th>Target</th>\n                                <th>Time For Target</th>\n                                <th>No. of Helpers</th>\n                                <th></th>\n                                {/* <th style={{ width: '40px' }}></th> */}\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.operation_code}</td>\n                                            <td>{v.operation_description}</td>\n                                            <td>{v.operation_sequence}</td>\n                                            <td>{v.no_of_operators}</td>\n                                            <td>{v.machine_type}</td>\n                                            <td>{v.order_target}</td>\n                                            <td>{v.allocated_time_for_target}</td>\n                                            <td>{v.no_of_helpers}</td>\n                                            <td><EditIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                                console.log('v',v)\n                                                //setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>handleDelete(v)} /></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                            <Backdrop open={openBackdrop}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                {/* <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleUpload}\n                        fullWidth\n                    >Upload Style Bulletin</Button>\n                </Grid> */}\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(ViewStyleBulletin)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddStyleBulletin from '../AddStyleBulletin'\nimport ViewStyleBulletin from '../ViewStyleBulletin'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst StyleBulletin = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Style Bulletin</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Style Bulletin\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Style Bulletin\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddStyleBulletin/>\n                        \n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewStyleBulletin />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default StyleBulletin","import React from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\nimport { XYPlot, VerticalBarSeries,XAxis,YAxis } from 'react-vis'\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsiveBar = ({data}) => {\r\n    \r\n    console.log('data: ',data)\r\n    \r\n    return(\r\n        <div>\r\n            <XYPlot height={300} width={300} color=\"#418832\">\r\n            <XAxis\r\n                attr=\"x\"\r\n                attrAxis=\"y\"\r\n                orientation=\"bottom\"\r\n            />\r\n            <YAxis\r\n                attr=\"y\"\r\n                attrAxis=\"x\"\r\n                orientation=\"left\"\r\n            />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                    style={{}}\r\n                />\r\n            </XYPlot>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyResponsiveBar","import React from 'react'\r\nimport { Paper,Typography, Grid } from '@material-ui/core'\r\nimport LineWiseTotalProduction from '../LineWiseTotalProduction'\r\n\r\nconst data = [\r\n    {\r\n        x: 0,\r\n        y: 10\r\n    },\r\n    {\r\n        x: 1,\r\n        y: 11.248257034033035\r\n    },\r\n    {\r\n        x: 2,\r\n        y: 12.20577945795663\r\n    },\r\n    {\r\n        x: 3,\r\n        y: 12.801326795474443\r\n    },\r\n    {\r\n        x: 4,\r\n        y: 13.132807927572742\r\n    },\r\n    {\r\n        x: 5,\r\n        y: 15.841383594752223\r\n    },\r\n    {\r\n        x: 6,\r\n        y: 15.732741198841865\r\n    },\r\n    {\r\n        x: 7,\r\n        y: 13.287092723327687\r\n    },\r\n    {\r\n        x: 8,\r\n        y: 11.113246356017706\r\n    }\r\n    ]\r\n\r\nconst IECharts = props => {\r\n\r\n\r\n\r\n    return(<div style={{ padding: 20 }}>\r\n        <Paper style={{padding:20,backgroundColor:'#f6f6f6'}}>\r\n            <Grid container>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>Line Wise Total Production</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>WIP</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>Worker Wise Fault Monitoring</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n        </div>)\r\n}\r\n\r\nexport default IECharts","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst AddPO = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        console.log('state',state)\n        if(state.style){\n            fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n            .then(res => res.json()\n            .then(res => {\n                console.log('res colors',res)\n                setColors(res.Colors)\n            }))\n            .catch(err => {\n                console.log('err in fetch',err)\n            })\n\n        }\n    },[state.style])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        if(state.size){\n            setModalVisible(true)\n        }\n        \n    },[state.size])\n\n    const handleAppend = () => {\n        console.log('handleAppend',state.style,state.quantity)\n        setModalVisible(false)\n        setTableValues(s => [...s,{id:uuid(),size_id:state.size.size_id,size_code:state.size.size_code,quantity:state.quantity}])\n        setState({...state,size_id:null,size_code:null,quantity:null})\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        fetch(api_endpoint+'/Jordan/Cutting/Marker/getSizes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res sized',res)\n            setSizes(res.Sizes)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        // fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        // .then(res => res.json()\n        // .then(res => {\n        //     console.log('res designations',res)\n        //     setDesignations(res.Designations)\n        // }))\n        // .catch(err => {\n        //     console.log('err in fetch',err)\n        // })\n\n    },[])\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        console.log('state: ',state)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/Cutting/PO/insertPOAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&PO_code=${state.po_description}&size_mappings=${JSON.stringify(tableValues)}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added PO!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding PO!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding PO!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Enter Quantity\n                    </div>\n                    <div style={{padding:10}}>\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\n                    </div>\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            Save Quantity\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={sizes}\n                        getOptionLabel={option => option.size_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,size:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\n                </Grid> */}\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.po_description} onChange={e => setState({...state,po_description:e.target.value})} name=\"poDescription\" variant=\"outlined\" fullWidth label=\"PO Description\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Size</th>\n                                <th>Quantity</th>\n                                <th style={{ width: '40px' }}></th>\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            {console.log('tableValues',tableValues)}\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.size_code}</td>\n                                            <td>{v.quantity}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add PO</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddPO)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\n\nconst POTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [sizes,setSizes] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    // React.useEffect(()=>{\n    //     console.log('modalValues',modalValues)\n    //     setEditState(modalValues)\n    // },[modalValues])\n    React.useEffect(()=>{\n        console.log('modalValues',modalValues)\n        setLoading(true)\n        setEditState(modalValues)\n        if(modalValues){\n\n            try{\n                let url = api_endpoint+`/Jordan/Cutting/PO/getSizesForPO.php?PO_id=${modalValues.po_id}`;\n                console.log('url',url)\n                fetch(url,{\n                    method: 'post',\n                })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ',res)\n                    setSizes(res.Sizes)\n                    setLoading(false)\n                })\n                .catch(err => {\n                    console.log('error while fetching',err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Error While Getting Styles!', { \n                        variant: 'info',\n                    })\n                })\n            }catch(err){\n                console.log('err in try catch',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Fetching Styles!', { \n                    variant: 'info',\n                })\n            }\n        }\n    },[modalValues])\n\n    const fetchMarkers = () => {\n\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/PO/getPO.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.PO)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        \n        fetchMarkers()\n\n    }, [])\n\n    return (\n        <div>\n            \n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true?\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\n                                        <CircularProgress color='primary'/>\n                                    </div>\n                                    :\n                                    <div container style={{textAlign:'center'}}>\n                                        {\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                        }\n                                    </div>\n                                }\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <table style={{overflowY: 'scroll' }}>\n                            <tr>\n                                <th style={{ width: '40px' }}></th>\n                                <th>PO</th>\n                                <th style={{ width: '40px' }}></th>\n                            </tr>\n                            <tbody>\n                                {\n                                    tableValues && tableValues.map((v,i) => (\n                                        <tr>\n                                            <td>{i+1}</td>\n                                            <td style={{textAlign:'center'}}>{v.po_code}</td>\n                                            <td style={{ textAlign: 'center' }}>\n                                            <InfoIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} />\n                                                {/* <DeleteIcon color='primary' style={{ cursor: 'pointer' }} /> */}\n                                                </td>\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(POTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddPO from '../AddPO'\nimport POTable from '../POTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst PO = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">PO</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add PO\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View PO\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddPO />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        {/* <div>ghgk</div> */}\n                        <POTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default PO","import React from 'react'\nimport { Grid, TextField, Button, CircularProgress,Typography } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst AssignPO = props => {\n\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n    const [styles, setStyles] = React.useState([])\n    const [colors, setColors] = React.useState([])\n    const [cuts, setCuts] = React.useState([])\n    const [pos, setPOs] = React.useState([])\n    const [bundles, setBundles] = React.useState([])\n    const [checked, setChecked] = React.useState(false);\n\n  const handleChange = event => {\n      console.log('check value: ',event.target.checked)\n    setChecked(event.target.checked);\n    if(event.target.checked===true){\n        setState({...state,bundle:bundles})\n    }else{\n        setState({...state,bundle:null})\n    }\n  };\n\n    const fetchStyles = () => {\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/order/getStyleCodes.php`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ', res)\n                    setStyles(res.Styles)\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    const fetchPOs = () => {\n        try {\n            let url = api_endpoint + `/Jordan/Cutting/PO/getPO.php`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ', res)\n                    if(res.PO){\n                        setPOs(res.PO)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    // const handleSelectAll = () => {\n    //     //set\n    //     setState({...state,bundle:null})\n    //     console.log('state',state,bundles)\n    // }\n    const fetchColorsForStyleCodes = () => {\n        console.log('state', state)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ', res)\n                    if(res.Colors){\n                        setColors(res.Colors)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    const fetchCutForOrder = () => {\n        console.log('state', state)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutsForOrder.php?order_id=${state.color.order_id}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res cut: ', res)\n                    if(res.Cuts){\n                        setCuts(res.Cuts)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    const fetchBundleForCut = () => {\n        console.log('state', state)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/cutReport/getBundlesForOrderCut.php?order_id=${state.color.order_id}&cut_code=${state.cut.cut_code}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res bundles: ', res)\n                    if(res.Bundles){\n                        setBundles(res.Bundles)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n\n    React.useEffect(() => {\n        fetchStyles()\n        fetchPOs()\n    }, [])\n    React.useEffect(() => {\n        if(state.style){\n            fetchColorsForStyleCodes()\n        }\n    }, [state.style])\n    React.useEffect(() => {\n        console.log('statte', state)\n        if(state.color){\n            fetchCutForOrder()\n        }\n    }, [state.color])\n    React.useEffect(() => {\n        console.log('statte', state)\n        if(state.cut){\n            fetchBundleForCut()\n        }\n    }, [state.cut])\n\n    const handleAdd = async () => {\n        console.log('state', state)\n        if(state.bundle){\n            setLoading(true)\n            const bundlesToSend = await Promise.all(state.bundle.map(b => ({bundle_id:b.bundle_id})))\n            console.log('bundlesToSend',bundlesToSend)\n            try{\n                    let url = api_endpoint+`/Jordan/Cutting/PO/assignPOtoBundle.php?PO_id=${state.po.po_id}&PO_code=${state.po.po_code}&remarks=${state.remarks}&bundle_mapping=${JSON.stringify(bundlesToSend)}`;\n                    console.log('url',url)\n                    fetch(url,{\n                        method: 'post',\n                    })\n                    .then(res => res.json())\n                    .then(res => {\n                        setLoading(false)\n                        console.log('res: ',res)\n                        if(res.Error_No===0){\n                            props.enqueueSnackbar('Successfully Added Order!', { \n                                variant: 'info',\n                            })\n                        }else{\n                            if(typeof res.Error_Description==='object'){\n                                console.log('objecttypeee')\n                                props.enqueueSnackbar('Validation Errors!', { \n                                    variant: 'info',\n                                })\n                            }else{\n                                props.enqueueSnackbar(res.Error_Description, { \n                                    variant: 'info',\n                                })\n                            }\n                        }\n                    })\n                    .catch(err => {\n                        console.log('error while fetching',err)\n                        setLoading(false)\n                        props.enqueueSnackbar('Error While Adding Order!', { \n                            variant: 'info',\n                        })\n                    })\n                }catch(err){\n                    console.log('err in try catch',err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Error While Adding Order!', { \n                        variant: 'info',\n                    })\n                }\n        }\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        \n        // \n\n    }\n    return (\n        <div>\n            <Grid container>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={styles}\n                                getOptionLabel={option => option.style_code}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => {if(v){setState({ ...state, style: v.style_code })}else{setState({ ...state, style: v })}}}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={colors}\n                                getOptionLabel={option => option.color}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => setState({ ...state, color: v })}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={cuts}\n                                getOptionLabel={option => option.cut_code.toString()}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => setState({ ...state, cut: v })}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Cut\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                            </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={pos}\n                                getOptionLabel={option => option.po_code}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => setState({ ...state, po: v })}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"PO\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        {\n                            bundles && bundles.length > 0?\n                            <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                                <FormControlLabel\n                                    control={\n                                    <Checkbox checked={checked}\n                                    onChange={handleChange}\n                                    value=\"primary\"\n                                    inputProps={{ 'aria-label': 'primary checkbox' }} />\n                                    }\n                                    label=\"Select All Bundles\"\n                                />\n                            </Grid>\n                            :null\n                        }\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                            {\n                                checked === true?\n                                <Typography variant=\"subtitle\" color='primary' style={{marginBottom:10}}>* All Bundles Selected</Typography>\n                                :\n                                <Autocomplete\n                                    options={bundles}\n                                    multiple\n                                    disableCloseOnSelect\n                                    getOptionLabel={option => option.bundle_code}\n                                    style={{ width: '100%' }}\n                                    //value={state.bundle}\n                                    onChange={(e, v) => setState({ ...state, bundle: v })}\n                                    renderInput={params => (\n                                        <TextField {...params} label=\"Bundle\" variant=\"outlined\" fullWidth />\n                                    )}\n                                />\n                            }\n                        </Grid>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                            <TextField\n                                variant=\"outlined\"\n                                multiline\n                                rows={2}\n                                fullWidth\n                                label=\"Remarks\"\n                                onChange={(e) => setState({ ...state, remarks: e.target.value })}\n                                // renderInput={params => (\n                                //     <TextField {...params} label=\"Bundle\" variant=\"outlined\" fullWidth />\n                                // )}\n                            />\n                        </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                    <Button\n                        color='primary'\n                        variant='contained'\n                        style={{ color: '#fff', height: '50px' }}\n                        onClick={handleAdd}\n                        fullWidth\n                    >{\n                        loading===true?\n                        <CircularProgress color={'#fff'} />\n                        :\n                        `Assign PO to Bundle`\n                    }</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AssignPO)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AssignPO from '../AssignPO'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst AssignBundle = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Assign PO to Bundle</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Assign Bundle\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        {/* <Tab label=\"View Markers\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AssignPO />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#fff',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        {/* <div>ghgk</div> */}\n                        {/* <MarkersTable /> */}\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AssignBundle","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n//import './index.css'\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter,useRowSelect } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Rolls\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef()\n      const resolvedRef = ref || defaultRef\n  \n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate\n      }, [resolvedRef, indeterminate])\n  \n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      )\n    }\n  )\n\nfunction MyTable({ columns, data, handleUpload }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        selectedFlatRows,\n    state: { selectedRowIds },\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination,useRowSelect,\n      hooks => {\n        hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n    })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div >\n            <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n              <div style={{width:300}}>\n                  <GlobalFilter\n                      preGlobalFilteredRows={preGlobalFilteredRows}\n                      globalFilter={globalFilter}\n                      setGlobalFilter={setGlobalFilter}\n                  />\n              </div>\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            // console.log('row: ',row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{textAlign:'center'}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {\n                Object.keys(selectedRowIds).length > 0?\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\n                    </Grid>\n                </Grid>\n                :null\n            }\n        </div>\n    )\n}\n\nconst StockIn = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    // const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    // const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [invoiceCodes, setInvoiceCodes] = React.useState([])\n    const [rolls, setRolls] = React.useState([])\n    const [departments, setDepartments] = React.useState([])\n    const [tableValues, setTableValues] = React.useState([])\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n    \n    const notify = message => props.enqueueSnackbar(message, { \n      variant: 'info',\n    })\n\n    const fetchRolls = () => {\n      setLoading(true)\n      try {\n        let url = api_endpoint_warehouse+`/fetch/getRollsForInvoiceIDOperation?operation=In&invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\n        console.log('url',url)\n        fetch(url,{\n            method: 'get',\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log('--->',res)\n            if(res.Rolls){\n              setRolls(res.Rolls)\n            }\n            setLoading(false)\n          })\n          .catch(err => {\n            setLoading(false)\n            console.log('err in fetching', err)\n            // setTableValues([])\n          })\n      } catch (err) {\n          setLoading(false)\n          console.log('try catch error: ', err)\n          // setTableValues([])\n      }\n    }\n    const handleRollIntention = async (array) => {\n\n\n      if(!state.department){\n        notify('Select a department first')\n        return\n      }\n\n      setLoading(true)\n      console.log('array: ',array,', rolls: ',rolls,state)\n      let keysArray = Object.keys(array)\n      let error = false\n      let arr = []\n      for(let i=0; i<keysArray.length;i++){\n        console.log(rolls[parseInt(keysArray[i])].ItemID)\n        arr.push(rolls[parseInt(keysArray[i])].ItemID)\n      }\n      console.log(arr)\n        try {\n          let url = api_endpoint_warehouse+`/update/makeStockInOutForRolls`;\n          console.log('url',url)\n          fetch(url,{\n              method: 'put',\n              headers:{\n                'Content-Type':'application/json'\n              },\n              body:JSON.stringify({warehouseStatus:'stockedIn',routeID:state.department.RouteID,itemIDArray:arr})\n          })\n          .then(res => res.json())\n          .then(res => {\n            setLoading(false)\n            if(res.ErrorNumber===0){\n              notify('Successfull')\n            }else{\n              notify('Something went wrong')\n            }\n              console.log('roll intetntion insertion response -----> ',res)\n            })\n            .catch(err => {\n              notify('Something went wrong')\n              console.log('err in fetching', err)\n              setLoading(false)\n            })\n        } catch (err) {\n            notify('Something went wrong')\n            console.log('try catch error: ', err)\n            setLoading(false)\n        }\n\n    }\n\n    const fetchInvoiceCodes = () => {\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getInvoicesForOperation?operation=In')\n                .then(res => res.json())\n                .then(res => {\n                    console.log('=> ',res)\n                    if(res.Invoices){\n                      setInvoiceCodes(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    // setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            // setTableValues([])\n        }\n    }\n    const fetchDepartments = () => {\n      try {\n        fetch(api_endpoint_warehouse + '/fetch/getRoutesForStockingIn')\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n                if (res.Routes) {\n                    setDepartments(res.Routes)\n                }\n            })\n            .catch(err => {\n                console.log('err in fetching', err)\n                //setTableValues([])\n            })\n    } catch (err) {\n        console.log('try catch error: ', err)\n        //setTableValues([])\n    }\n    }\n\n    React.useEffect(() => {\n      fetchInvoiceCodes()\n      fetchDepartments()\n    }, [])\n\n    return (\n        <div>\n            <Grid container style={{justifyContent:'center',display:'flex'}}>\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\n                    <Autocomplete\n                      options={invoiceCodes}\n                      getOptionLabel={option=>option.InvoiceCode}\n                      style={{ width: '100%' }}\n                      onChange={(e, v) => setState({ ...state, invoice: v })}\n                      renderInput={params => (\n                          <TextField {...params} label=\"Invoice Codes\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\n                    {\n                      loading===true?\n                      <CircularProgress color={'#fff'}/>\n                      :'Fetch'\n                    }\n                  </Button>\n                </Grid>\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\n                    <Autocomplete\n                      options={departments}\n                      getOptionLabel={option => option.Location}\n                      style={{ width: '100%' }}\n                      onChange={(e, v) => setState({ ...state, department: v })}\n                      renderInput={params => (\n                          <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                </Grid>\n            </Grid>\n            {\n              rolls.length===0?\n              <div style={{padding:50,justifyContent:'center',display:'flex',color:'grey'}}>\n                Nothing to display.\n              </div>\n              :\n              <MyTable columns={[\n                  {\n                      Header: 'RFID',\n                      accessor: 'TagID',\n                  },\n                  {\n                      Header: 'Supplier',\n                      accessor: 'Supplier',\n                  },\n                  {\n                      Header: 'Buyer',\n                      accessor: 'Buyer',\n                  },\n                  {\n                      Header: 'Style',\n                      accessor: 'StyleCode',\n                  },\n                  {\n                      Header: 'Color',\n                      accessor: 'ColorCode',\n                  },\n                  {\n                      Header: 'Length',\n                      accessor: 'RollLength',\n                  },\n                  {\n                      Header: 'Net Weight',\n                      accessor: 'NetWeight',\n                  },\n                  {\n                      Header: 'Gross Weight',\n                      accessor: 'GrossWeight',\n                  },\n                  \n              ]} data={rolls} handleUpload={handleRollIntention} />\n\n            }\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            \n        </div>\n    )\n}\n\nexport default withSnackbar(StockIn)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\n// import DeleteIcon from '@material-ui/icons/Delete'\n// import EditIcon from '@material-ui/icons/Edit'\n// import { Dialog } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n//import './index.css'\nimport { api_endpoint,api_endpoint_warehouse } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter,useRowSelect } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Rolls\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef()\n      const resolvedRef = ref || defaultRef\n  \n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate\n      }, [resolvedRef, indeterminate])\n  \n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      )\n    }\n  )\n\nfunction MyTable({ columns, data, handleUpload }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        selectedFlatRows,\n    state: { selectedRowIds },\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination,useRowSelect,\n      hooks => {\n        hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n    })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div >\n            <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n              <div style={{width:300}}>\n                  <GlobalFilter\n                      preGlobalFilteredRows={preGlobalFilteredRows}\n                      globalFilter={globalFilter}\n                      setGlobalFilter={setGlobalFilter}\n                  />\n              </div>\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            console.log('row: ',row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{textAlign:'center'}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {\n                Object.keys(selectedRowIds).length > 0?\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\n                    </Grid>\n                </Grid>\n                :null\n            }\n        </div>\n    )\n}\n\nconst StockOut = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    // const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    // const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [departments, setDepartments] = React.useState([])\n    const [invoiceCodes, setInvoiceCodes] = React.useState([])\n    const [rolls, setRolls] = React.useState([])\n    const [tableValues, setTableValues] = React.useState([])\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n    \n    const notify = message => props.enqueueSnackbar(message, { \n      variant: 'info',\n    })\n\n    const fetchRolls = () => {\n      setLoading(true)\n      try {\n        let url = api_endpoint_warehouse+`/fetch/getRollsForInvoiceIDOperation?operation=Out&invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\n        console.log('url',url)\n        fetch(url,{\n            method: 'get',\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log('--->',res)\n            if(res.Rolls){\n              setRolls(res.Rolls)\n            }\n            setLoading(false)\n          })\n          .catch(err => {\n            setLoading(false)\n            console.log('err in fetching', err)\n            // setTableValues([])\n          })\n      } catch (err) {\n          setLoading(false)\n          console.log('try catch error: ', err)\n          // setTableValues([])\n      }\n    }\n    const handleRollIntention = async (array) => {\n\n\n      if(!state.department){\n        notify('Select a department first')\n        return\n      }\n\n      setLoading(true)\n      console.log('array: ',array,', rolls: ',rolls,state)\n      let keysArray = Object.keys(array)\n      let error = false\n      let arr = []\n      for(let i=0; i<keysArray.length;i++){\n        console.log(rolls[parseInt(keysArray[i])].ItemID)\n        arr.push(rolls[parseInt(keysArray[i])].ItemID)\n      }\n      console.log(arr)\n        try {\n          let url = api_endpoint_warehouse+`/update/makeStockInOutForRolls`;\n          console.log('url',url)\n          fetch(url,{\n              method: 'put',\n              headers:{\n                'Content-Type':'application/json'\n              },\n              body:JSON.stringify({warehouseStatus:'stockedOut',routeID:state.department.RouteID,itemIDArray:arr})\n          })\n          .then(res => res.json())\n          .then(res => {\n            setLoading(false)\n            if(res.ErrorNumber===0){\n              notify('Successfull')\n            }else{\n              notify('Something went wrong')\n            }\n              console.log('roll intetntion insertion response -----> ',res)\n            })\n            .catch(err => {\n              notify('Something went wrong')\n              console.log('err in fetching', err)\n              setLoading(false)\n            })\n        } catch (err) {\n            notify('Something went wrong')\n            console.log('try catch error: ', err)\n            setLoading(false)\n        }\n\n    }\n\n    // const insertRollIntention = (tag_id) => {\n      \n    //   try {\n    //     let url = api_endpoint+`/Jordan/Warehouse/Issuance/insertRollIntention.php?tag_id=${tag_id}`;\n    //     console.log('url',url)\n    //     fetch(url,{\n    //         method: 'post',\n    //     })\n    //     .then(res => res.json())\n    //     .then(res => {\n    //         console.log('roll intetntion insertion response -----> ',res)\n    //       })\n    //       .catch(err => {\n    //         console.log('err in fetching', err)\n    //       })\n    //   } catch (err) {\n    //       console.log('try catch error: ', err)\n    //   }\n\n    // }\n\n    const fetchInvoiceCodes = () => {\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getInvoicesForOperation?operation=Out')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if(res.Invoices){\n                      setInvoiceCodes(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    // setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            // setTableValues([])\n        }\n    }\n\n    const fetchDepartments = () => {\n      try {\n        fetch(api_endpoint_warehouse + '/fetch/getRoutesForStockingOut')\n            .then(res => res.json())\n            .then(res => {\n                console.log(res)\n                if (res.Routes) {\n                    setDepartments(res.Routes)\n                }\n            })\n            .catch(err => {\n                console.log('err in fetching', err)\n                //setTableValues([])\n            })\n    } catch (err) {\n        console.log('try catch error: ', err)\n        //setTableValues([])\n    }\n    }\n\n    React.useEffect(() => {\n      fetchInvoiceCodes()\n      fetchDepartments()\n    }, [])\n\n    return (\n        <div>\n            <Grid container style={{justifyContent:'center',display:'flex'}}>\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\n                    <Autocomplete\n                      options={invoiceCodes}\n                      getOptionLabel={option=>option.InvoiceCode}\n                      style={{ width: '100%' }}\n                      onChange={(e, v) => setState({ ...state, invoice: v })}\n                      renderInput={params => (\n                          <TextField {...params} label=\"Invoice Codes\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\n                    {\n                      loading===true?\n                      <CircularProgress color={'#fff'}/>\n                      :'Fetch'\n                    }\n                  </Button>\n                </Grid>\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\n                    <Autocomplete\n                      options={departments}\n                      getOptionLabel={option => option.Location}\n                      style={{ width: '100%' }}\n                      onChange={(e, v) => setState({ ...state, department: v })}\n                      renderInput={params => (\n                          <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                </Grid>\n            </Grid>\n            {\n              rolls.length===0?\n              <div style={{padding:50,justifyContent:'center',display:'flex',color:'grey'}}>\n                Nothing to display.\n              </div>\n              :\n              <MyTable columns={[\n                {\n                  Header: 'RFID',\n                  accessor: 'TagID',\n              },\n              {\n                  Header: 'Supplier',\n                  accessor: 'Supplier',\n              },\n              {\n                  Header: 'Buyer',\n                  accessor: 'Buyer',\n              },\n              {\n                  Header: 'Style',\n                  accessor: 'StyleCode',\n              },\n              {\n                  Header: 'Color',\n                  accessor: 'ColorCode',\n              },\n              {\n                  Header: 'Length',\n                  accessor: 'RollLength',\n              },\n              {\n                  Header: 'Net Weight',\n                  accessor: 'NetWeight',\n              },\n              {\n                  Header: 'Gross Weight',\n                  accessor: 'GrossWeight',\n              },  \n              ]} data={rolls} handleUpload={handleRollIntention} />\n\n            }\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            \n        </div>\n    )\n}\n\nexport default withSnackbar(StockOut)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport StockIn from '../StockIn'\nimport StockOut from '../StockOut'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst PackingList = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Manual Stocking</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Stock in\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <StockIn />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <StockOut />\n                        {/* <ViewPackingList/> */}\n                        {/* <MarkersTable /> */}\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default PackingList","import React from 'react'\nimport { TextField, Grid, InputAdornment, Select, MenuItem, CircularProgress, Backdrop } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n//import './index.css'\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter, useRowSelect } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}) {\n    //const count = preGlobalFilteredRows.length\n\n    return (\n        <span>\n            <TextField\n                name='searchValue'\n                variant=\"outlined\"\n                label=\"Search Rolls\"\n                value={globalFilter || ''}\n                onChange={e => setGlobalFilter(e.target.value || undefined)}\n                fullWidth\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">\n                        <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                    </InputAdornment>\n                }}\n            />\n        </span>\n    )\n}\n\nconst IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = React.useRef()\n        const resolvedRef = ref || defaultRef\n\n        React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n        }, [resolvedRef, indeterminate])\n\n        return (\n            <>\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n        )\n    }\n)\n\nfunction MyTable({ columns, data,options }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        selectedFlatRows,\n        state: { selectedRowIds },\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n    } = useTable({\n        columns,\n        data,\n    }, useGlobalFilter, usePagination, useRowSelect,\n        hooks => {\n            hooks.visibleColumns.push(columns => [\n                // Let's make a column for selection\n                {\n                    id: 'selection',\n                    // The header can use the table's getToggleAllRowsSelectedProps method\n                    // to render a checkbox\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\n                        <div>\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n                        </div>\n                    ),\n                    // The cell can use the individual row's getToggleRowSelectedProps method\n                    // to the render a checkbox\n                    Cell: ({ row }) => (\n                        <div>\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                        </div>\n                    ),\n                },\n                ...columns,\n            ])\n        })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{overflowX:'scroll'}}>\n            {/* <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n              <div style={{width:300}}>\n                  <GlobalFilter\n                      preGlobalFilteredRows={preGlobalFilteredRows}\n                      globalFilter={globalFilter}\n                      setGlobalFilter={setGlobalFilter}\n                  />\n              </div>\n            </div> */}\n            <table {...getTableProps()} style={{ width: '100%' }}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                            <th>Select</th>\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row)\n                        // console.log('row: ',row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {/* <td>{i+1}</td> */}\n                                {row.cells.map(cell => {\n                                    return <td style={{ textAlign: 'center',fontSize:14 }} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                                <td style={{ textAlign: 'center',width:150 }}>\n                                <Select\n                                    // value={age}\n                                    style={{width:'100%'}}\n                                >\n                                    {\n                                        options.map(o => <MenuItem value={o.value}>{o.label}</MenuItem>)\n                                    }\n                                </Select>\n                                </td>\n                                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {/* {\n                Object.keys(selectedRowIds).length > 0?\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\n                    </Grid>\n                </Grid>\n                :null\n            } */}\n        </div>\n    )\n}\n\nconst Assign = props => {\n\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [invoiceNumbers, setInvoiceNumbers] = React.useState([])\n    const [colors, setColors] = React.useState([])\n    const [styles, setStyles] = React.useState([])\n    const [lots, setLots] = React.useState([])\n    const [tableValues, setTableValues] = React.useState([])\n    const [options, setOptions] = React.useState([{value:'abc',label:'ABC'},{value:'def',label:'DEF'},{value:'ghi',label:'GHI'}])\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    const notify = message => props.enqueueSnackbar(message, {\n        variant: 'info',\n    })\n\n    const fetchData = () => {\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getInvoices')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.Invoices) {\n                        setInvoiceNumbers(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n        }\n    }\n    const fetchSelectList = () => {\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getInvoices')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    // if (res.Invoices) {\n                    //     setInvoiceNumbers(res.Invoices)\n                    // }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n        }\n    }\n    const fetchPackingList = () => {\n        try {\n            fetch(api_endpoint_warehouse + `/fetch/getAllRollsStateForInvoiceID?invoiceID=${state.invoice.InvoiceID}`)\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.PackingList) {\n                        filterResults(res.PackingList)\n                    } else {\n                        notify('Something went wrong!')\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n        }\n    }\n\n    const filterResults = async (packinglist) => {\n        let colors = []\n        let styles = []\n        let lots = []\n        setTableValues(packinglist)\n        await Promise.all(packinglist.map(p => {\n            colors.push(p.ColorCode)\n            styles.push(p.StyleCode)\n            lots.push(p.LotCode)\n        }))\n        colors = [...new Set(colors)]\n        lots = [...new Set(lots)]\n        styles = [...new Set(styles)]\n        setColors(colors)\n        setStyles(styles)\n        setLots(lots)\n    }\n\n    React.useEffect(() => {\n        fetchData()\n    }, [])\n\n\n    React.useEffect(() => {\n        if (state.invoice) {\n            fetchPackingList()\n        }\n    }, [state.invoice])\n\n    // React.useEffect(() => {\n    //   filterLot()\n    // }, [state.style])\n\n    React.useEffect(() => {\n        console.log('state:', state)\n    }, [state.color])\n\n    return (\n        <div>\n            <Grid container style={{ justifyContent: 'center', display: 'flex' }}>\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                    <Autocomplete\n                        options={invoiceNumbers}\n                        getOptionLabel={option => option.InvoiceCode}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => {\n                            if (v) {\n                                setState({ ...state, invoice: v })\n                            }\n                        }}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Invoice Code\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                    <Autocomplete\n                        options={styles}\n                        getOptionLabel={option => option}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, style: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style Code\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                    <Autocomplete\n                        options={lots}\n                        getOptionLabel={option => option}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, lot: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Lot Code\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                    <Autocomplete\n                        options={colors}\n                        getOptionLabel={option => option}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, color: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color Code\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                {/* <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\n                    {\n                      loading===true?\n                      <CircularProgress color={'#fff'}/>\n                      :'Fetch'\n                    }\n                  </Button>\n                </Grid>\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                      options={departments}\n                      getOptionLabel={option => option.FromLocation}\n                      style={{ width: '100%' }}\n                      onChange={(e, v) => setState({ ...state, department: v })}\n                      renderInput={params => (\n                          <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                </Grid> */}\n            </Grid>\n            {\n                tableValues.length === 0 ?\n                    <div style={{ padding: 50, justifyContent: 'center', display: 'flex', color: 'grey' }}>\n                        Nothing to display.\n              </div>\n                    :\n                    <MyTable columns={[\n                        {\n                            Header: 'Buyer',\n                            accessor: 'Buyer',\n                        },\n                        {\n                            Header: 'Color',\n                            accessor: 'ColorCode',\n                        },\n                        {\n                            Header: 'Length',\n                            accessor: 'CurrentLength',\n                        },\n                        // {\n                        //     Header: 'Customer',\n                        //     accessor: 'Customer',\n                        // },\n                        {\n                            Header: 'Fabric Type',\n                            accessor: 'FabricType',\n                        },\n                        // {\n                        //     Header: 'From Location',\n                        //     accessor: 'FromLocation',\n                        // },\n                        {\n                            Header: 'Invoice',\n                            accessor: 'InvoiceCode',\n                        },\n                        // {\n                        //     Header: 'Item ID',\n                        //     accessor: 'ItemID',\n                        // },\n                        {\n                            Header: 'Lot',\n                            accessor: 'LotCode',\n                        },\n                        {\n                            Header: 'Roll',\n                            accessor: 'RollCode',\n                        },\n                        // {\n                        //     Header: 'Route',\n                        //     accessor: 'RouteID',\n                        // },\n                        // {\n                        //     Header: 'Season',\n                        //     accessor: 'Season',\n                        // },\n                        // {\n                        //     Header: 'State ID',\n                        //     accessor: 'StateID',\n                        // },\n                        {\n                            Header: 'Style',\n                            accessor: 'StyleCode',\n                        },\n                        {\n                            Header: 'Supplier',\n                            accessor: 'Supplier',\n                        },\n                        // {\n                        //     Header: 'Warehouse Status',\n                        //     accessor: 'WarehouseStatus',\n                        // },\n\n                    ]} data={tableValues} options={options} />\n\n            }\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n\n        </div>\n    )\n}\n\nexport default withSnackbar(Assign)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AssignCard from '../AssignCard'\nimport StockOut from '../StockOut'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst CardAssigment = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Card Assignment</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Assign\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        {/* <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AssignCard />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        {/* <StockOut /> */}\n                        {/* <ViewPackingList/> */}\n                        {/* <MarkersTable /> */}\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CardAssigment","import React from 'react'\r\n//import styled from 'styled-components'\r\nimport { useTable, usePagination } from 'react-table'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n//import makeData from './makeData'\r\n\r\n// const Styles = styled.div`\r\n//   padding: 1rem;\r\n//   table {\r\n//     border-spacing: 0;\r\n//     border: 1px solid black;\r\n//     tr {\r\n//       :last-child {\r\n//         td {\r\n//           border-bottom: 0;\r\n//         }\r\n//       }\r\n//     }\r\n//     th,\r\n//     td {\r\n//       margin: 0;\r\n//       padding: 0.5rem;\r\n//       border-bottom: 1px solid black;\r\n//       border-right: 1px solid black;\r\n//       :last-child {\r\n//         border-right: 0;\r\n//       }\r\n//       input {\r\n//         font-size: 1rem;\r\n//         padding: 0;\r\n//         margin: 0;\r\n//         border: 0;\r\n//       }\r\n//     }\r\n//   }\r\n//   .pagination {\r\n//     padding: 0.5rem;\r\n//   }\r\n// `\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  cell: { value: initialValue },\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n      console.log(index,id,value)\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} style={{width:'100%',backgroundColor: 'transparent',border: 'none'}} />\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\n// Be sure to pass our updateMyData and the skipPageReset option\r\nfunction Table({ columns, data, updateMyData, skipPageReset,setTableValues }) {\r\n  // For this example, we're using pagination to illustrate how to stop\r\n  // the current page from resetting when our data changes\r\n  // Otherwise, nothing is different here.\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      // use the skipPageReset option to disable page resetting temporarily\r\n      autoResetPage: !skipPageReset,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n    },\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <table style={{width:'100%'}} {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n                <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            // console.log(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                    setTableValues(draft => draft.filter(d => d.id !== row.original.id))\r\n                }}/></td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div style={{display:'flex',justifyContent:'space-between',marginBottom:20}}>\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              Previous Page\r\n          </button>\r\n          <div>\r\n              Page{' '}\r\n              <em>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </em>\r\n          </div>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n              Next Page\r\n          </button>\r\n      </div>\r\n      {/* <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div> */}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App(props) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n        {\r\n            Header: 'Invoice Number',\r\n            accessor: 'InvoiceCode',\r\n        },\r\n        {\r\n            Header: 'Supplier',\r\n            accessor: 'Supplier',\r\n        },\r\n        {\r\n            Header: 'Buyer',\r\n            accessor: 'Buyer',\r\n        },\r\n        {\r\n            Header: 'Style',\r\n            accessor: 'StyleCode',\r\n        },\r\n        {\r\n            Header: 'Color',\r\n            accessor: 'ColorCode',\r\n        },\r\n        {\r\n            Header: 'Lot',\r\n            accessor: 'LotCode',\r\n        },\r\n        {\r\n            Header: 'Length',\r\n            accessor: 'RollLength',\r\n        },\r\n        {\r\n            Header: 'Net Weight',\r\n            accessor: 'NetWeight',\r\n        },\r\n        {\r\n            Header: 'Gross Weight',\r\n            accessor: 'GrossWeight',\r\n        },\r\n        {\r\n            Header: 'Roll No',\r\n            accessor: 'RollCode',\r\n        },\r\n        {\r\n            Header: 'Season Code',\r\n            accessor: 'Season',\r\n        },\r\n        {\r\n            Header: 'Fabric Type',\r\n            accessor: 'FabricType',\r\n        }\r\n    ],\r\n    []\r\n  )\r\n\r\n  const [data, setData] = React.useState([])\r\n  const [originalData] = React.useState(props.tableValues)\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  React.useEffect(()=>{\r\n    if(props.tableValues){\r\n        setData(props.tableValues)\r\n    }\r\n  },[props.tableValues])\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n\r\n  // When our cell renderer calls updateMyData, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  const updateMyData = async (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    // console.log('in uploadmydata',rowIndex,columnId,value)\r\n    setSkipPageReset(true)\r\n    let arr = await Promise.all(data.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...data[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      }))\r\n    setData(arr)\r\n    props.setTableValues(arr)\r\n  }\r\n\r\n  // console.log('data_____________________________________________________________________________',data)\r\n  // After data chagnes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    setSkipPageReset(false)\r\n  }, [data])\r\n\r\n  // Let's add a data resetter/randomizer to help\r\n  // illustrate that flow...\r\n  const resetData = () => setData(originalData)\r\n\r\n  return (\r\n   <>\r\n      {/* <button onClick={resetData}>Reset Data</button> */}\r\n      <Table\r\n        columns={columns}\r\n        data={data}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n        setTableValues={props.setTableValues}\r\n      />\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport { Grid, TextField, Button, Menu, MenuItem, Typography, RadioGroup, Radio, FormControlLabel, CircularProgress } from '@material-ui/core'\nimport { api_endpoint,api_endpoint_warehouse } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport Table from '../Table'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport readXlsxFile from 'read-excel-file'\n//import {EditableSelect} from 'react-editable-select';\n\nconst useStyles = makeStyles({\n    addIcon:{position:'absolute',cursor:'pointer',right:20,zIndex:999,top:20,color:'#707070'}\n})\nconst units = ['kgs','yds']\n//const styles = \n\n\nconst AddPackingList = props => {\n    \n    const classes = useStyles()\n    const [value, setValue] = React.useState('kg');\n    const [distance, setDistance] = React.useState('yd');\n    const options = [{id:3,name:\"Hamza\"},{id:4,name:\"Iqbal\"}]\n    let selectedOption = {id:3,name:\"Hamza\"}\n\n    const handleChangeWeightUnit = event => {\n        setValue(event.target.value);\n    };\n    const handleChangeLengthUnit = event => {\n        setDistance(event.target.value);\n    };\n\n    const [unit,setUnit] = React.useState('kgs')\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const [state,setState] = React.useState({})\n    const [uploadVisible,setUploadVisible] = React.useState(false)\n    const [filesState,setFilesState] = React.useState([])\n    const [noOfRolls,setNoOfRolls] = React.useState(null)\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [excelLoading,setExcelLoading] = React.useState(false)\n    //const [sizes,setSizes] = React.useState([])\n    const [buyers,setBuyers] = React.useState([])\n    const [lots,setLots] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n\n\n    const toggleUploadVisible = () => {\n        setUploadVisible(!uploadVisible)\n    }\n    //const [deparments,setDepartments] = React.useState([])\n\n    // React.useEffect(()=>{\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n    //     console.log('state',state)\n    //     if(state.style){\n    //         fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n    //         .then(res => res.json()\n    //         .then(res => {\n    //             console.log('res colors',res)\n    //             setColors(res.Colors)\n    //         }))\n    //         .catch(err => {\n    //             console.log('err in fetch',err)\n    //         })\n\n    //     }\n    // },[state.style])\n\n    // React.useEffect(()=>{\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n    //     if(state.size){\n    //         setModalVisible(true)\n    //     }\n        \n    // },[state.size])\n\n    const handleAppend = async () => {\n        console.log('handleAppend',state)\n        let newArr = []\n        for(let i=0; i<noOfRolls;i++){\n            newArr.push({id:uuid(),...state})\n        }\n        setModalVisible(false)\n        setTableValues(s => [...s,...newArr])\n        setState({})\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        fetch(api_endpoint+'/Jordan/SPTS/order/getColors.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res sized',res)\n            setColors(res.Colors)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n    },[])\n\n    const handleFileUpload = (e) => {\n        setExcelLoading(true)\n        // console.log('e ',e)\n        // console.log('e.target.files ',e.target.files)\n        //setFilesState()\n        try{\n\n            readXlsxFile(e.target.files[0]).then(async (rows) => {\n                let arr = []\n                // console.log('rows: ',rows)\n                for(let i=1; i<rows.length; i++){\n                    let obj = {\n                        InvoiceCode:rows[i][0],\n                        Supplier:rows[i][1],\n                        Buyer:rows[i][2],\n                        StyleCode:rows[i][3],\n                        ColorCode:rows[i][4],\n                        LotCode:rows[i][5],\n                        RollLength:rows[i][6],\n                        NetWeight:rows[i][7],\n                        GrossWeight:rows[i][8],\n                        RollCode:rows[i][9],\n                        Season:rows[i][10],\n                        FabricType:rows[i][11],\n                        // invoice_no:rows[i][0],\n                        // supplier:rows[i][1],\n                        // buyer:rows[i][2],\n                        // style_code:rows[i][3],\n                        // color:rows[i][4],\n                        // lot:rows[i][5],\n                        // length:rows[i][6],\n                        // net_weight:rows[i][7],\n                        // gross_weight:rows[i][8],\n                        // roll_no:rows[i][9],\n                        // season_code:rows[i][10],\n                        // fabric_type:rows[i][11],\n                        id:uuid()\n                    }\n                    arr.push(obj)\n                }\n                console.log('arr',arr)\n                setTableValues(arr)\n                setExcelLoading(false)\n                // `rows` is an array of rows\n                // each row being an array of cells.\n              })\n        }catch(err){\n            console.log('errr',err)\n            setExcelLoading(false)\n        }\n\n    }\n\n    const handleAdd = async() => {\n        \n        console.log('state: ',state)\n        \n        setLoading(true)\n        let temp = tableValues\n        // console.log('value',value,tableValues)\n        \n        // if(value==='lb'){\n        //     // console.log('hehre')\n        //     temp = await Promise.all(temp.map(t => ({...t,net_weight:t.net_weight*0.4535,gross_weight:t.gross_weight*0.4535})))\n        //     // setTableValues(temp)\n        //     // console.log(2)\n        // }\n        \n        // if(distance==='yd'){\n        //     temp = await Promise.all(temp.map(t => ({...t,length:t.length*0.9144})))\n        //     // setTableValues(temp)\n        //     // console.log(4)\n        // }\n        setTableValues(temp)\n        var ajaxTime= new Date().getTime();\n        try{\n            let url = api_endpoint_warehouse+`/insert/uploadPackingList`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n                headers:{\n                    \"Content-Type\":\"application/json\"\n                },\n                body:JSON.stringify({PackingList:temp})\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res-------------------------------------------------------------------------------------: ',res)\n                if(res.ErrorNumber===0){\n                    // setTableValues([])\n                    // var totalTime = new Date().getTime()-ajaxTime;\n                    props.enqueueSnackbar('Successfully Added Packing List!', { \n                        variant: 'success',\n                    })\n                }else{\n                    props.enqueueSnackbar(\"Error while uploading packing list. Kindly verify packing list.\", { \n                        variant: 'error',\n                    })\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Packing List!', { \n                    variant: 'error',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Packing List!', { \n                variant: 'error',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 300 }}>\n                    <div style={{textAlign:'center'}}><Typography variant=\"h6\" style={{margin:15}}>Add Following Details</Typography></div>\n                    <Grid container>\n\n                        \n                        {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <EditableSelect\n                                options={options}\n                                value={selectedOption}\n                                getOptionValue={(option) => option.id}\n                                getOptionLabel={(option) => option.name}\n                                createOption={(text) => { return {id: 1, name: text} }}\n                                onChange={(ev, option) => setState({...state,option})}\n                            />\n                        </Grid> */}\n                        \n                        {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField value={state.rollNumber} onChange={e => setState({...state,rollNumber:e.target.value})} name=\"rollNumber\" variant=\"outlined\" fullWidth label=\"Roll Number\"/>\n                        </Grid> */}\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                            <TextField value={noOfRolls} type=\"number\" onChange={e => setNoOfRolls(e.target.value)} name=\"noOfRolls\" variant=\"outlined\" fullWidth label=\"Number of Rolls\"/>\n                        </Grid>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                            <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{color:'#fff',height:50}}>\n                                Generate\n                            </Button>\n                        </Grid>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                            <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{color:'#fff',height:50}}>\n                                cancel\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    \n                    {/* <div style={{display:'flex',justifyContent:'space-between'}}>\n                        \n                        \n                    </div> */}\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.InvoiceCode} onChange={e => setState({...state,InvoiceCode:e.target.value})} name=\"InvoiceCode\" variant=\"outlined\" fullWidth label=\"Invoice Number\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.Supplier} onChange={e => setState({...state,Supplier:e.target.value})} name=\"Supplier\" variant=\"outlined\" fullWidth label=\"Supplier\"/>\n                    {/* <Autocomplete\n                        options={[{supplier:\"1\"},{supplier:\"2\"},{supplier:\"3\"}]}\n                        getOptionLabel={option => option.supplier}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => {if(v){setState({...state,supplier:v.supplier})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Supplier\" variant=\"outlined\" fullWidth />\n                        )}\n                    /> */}\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.Buyer} onChange={e => setState({...state,Buyer:e.target.value})} name=\"Buyer\" variant=\"outlined\" fullWidth label=\"Buyer\"/>\n                    {/* <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={buyers}\n                        getOptionLabel={option => option.buyer_id}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,buyer:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Buyer\" variant=\"outlined\" fullWidth />\n                        )}\n                    /> */}\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => {if(v){setState({...state,style_code:v.style_code})}else{setState({...state,style_code:v})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) =>  {if(v){setState({...state,color:v.color})}else{setState({...state,color:v})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.lot} onChange={e => setState({...state,lot:e.target.value})} name=\"lot\" variant=\"outlined\" fullWidth label=\"Lot\"/>\n                </Grid>\n                \n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.length} type=\"number\" onChange={e => setState({...state,length:e.target.value})} name=\"length\" variant=\"outlined\" fullWidth label={`Length (${distance})`}/>\n                </Grid>\n                \n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.net_weight} type=\"number\" onChange={e => setState({...state,net_weight:e.target.value})} name=\"net_weight\" variant=\"outlined\" fullWidth label={`Net Weight (${value})`} />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.gross_weight} type=\"number\" onChange={e => setState({...state,gross_weight:e.target.value})} name=\"gross_weight\" variant=\"outlined\" fullWidth label={`Gross Weight (${value})`} />\n                </Grid>\n                \n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.fabric_type} onChange={e => setState({...state,fabric_type:e.target.value})} name=\"fabric_type\" variant=\"outlined\" fullWidth label=\"Fabric Type\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.roll_no} onChange={e => setState({...state,roll_no:e.target.value})} name=\"roll_no\" variant=\"outlined\" fullWidth label=\"Roll No\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                <TextField value={state.season_code} onChange={e => setState({...state,season_code:e.target.value})} name=\"season_code\" variant=\"outlined\" fullWidth label=\"Season Code\"/>\n                </Grid>\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5,alignItems:'center'}}>\n                    <RadioGroup aria-label=\"Unit\" name=\"gender1\" value={value} onChange={handleChangeWeightUnit} >\n                        Select Unit For Weight: &nbsp;&nbsp;&nbsp;\n                        <FormControlLabel value=\"kg\" control={<Radio />} label=\"Kilograms\" />\n                        <FormControlLabel value=\"lb\" control={<Radio />} label=\"Pounds\" />\n                    </RadioGroup>\n                </Grid>\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5,alignItems:'center'}}>\n                    <RadioGroup aria-label=\"Unit\" name=\"length\" value={distance} onChange={handleChangeLengthUnit} >\n                        Select Unit For Length: &nbsp;&nbsp;&nbsp;\n                        <FormControlLabel value=\"m\" control={<Radio />} label=\"Meters\" />\n                        <FormControlLabel value=\"yd\" control={<Radio />} label=\"Yards\" />\n                    </RadioGroup>\n                </Grid>\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5}}>\n                    <Button variant=\"contained\" color='secondary' style={{height:\"100%\"}} onClick={()=>setModalVisible(true)} fullWidth>Generate List</Button>\n                </Grid>\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\n                </Grid> */}\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.po_description} onChange={e => setState({...state,po_description:e.target.value})} name=\"poDescription\" variant=\"outlined\" fullWidth label=\"PO Description\"/>\n                </Grid> */}\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Typography onClick={toggleUploadVisible} variant=\"subtitle1\" color='primary' style={{fontWeight:'700',cursor:'pointer'}}>Upload Spreadsheet Instead</Typography>\n                    {\n                        uploadVisible===true?\n                        <input id=\"upload\" type=\"file\" onChange={handleFileUpload} />\n                        :null\n                    }\n                    {\n                        excelLoading===true?\n                        <CircularProgress color='primary' size={15}/>\n                        :null\n                    }\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <Table setTableValues={setTableValues} tableValues={tableValues}/>\n                        :null\n                    }\n                </Grid>\n                {/* <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Invoice Number</th>\n                                <th>Supplier</th>\n                                <th>Buyer</th>\n                                <th>Style</th>\n                                <th>Color</th>\n                                <th>Lot</th> \n                                <th>Roll Number</th>\n                                <th>Quantity</th>\n                                <th>Net Weight</th>\n                                <th>Gross Weight</th>\n                                <th>Fabric Type</th>\n                                <th style={{ width: '40px' }}></th>\n                               \n                            </tr>\n                            {console.log('tableValues',tableValues)}\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.invoiceNumber}</td>\n                                            <td>{v.supplier}</td>\n                                            <td>{v.buyer}</td>\n                                            <td>{v.style?v.style.style_code:null}</td>\n                                            <td>{v.color?v.color.color:null}</td>\n                                            <td>{v.lot}</td>\n                                            <td>{v.rollNumber}</td>\n                                            <td>{v.quantity}</td>\n                                            <td>{v.nw}</td>\n                                            <td>{v.gw}</td>\n                                            <td>{v.fabricType}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            \n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid> */}\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={()=>{setUnit('kgs');handleClose();}}>Kilograms</MenuItem>\n                    <MenuItem onClick={()=>{setUnit('yds');handleClose();}}>Yards</MenuItem>\n                </Menu>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >\n                        {\n                            loading === true?\n                            <CircularProgress color='#fff'/>\n                            :\n                            `Upload Packing List`\n                        }\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddPackingList)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Order\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n        initialState: { pageSize: 50 }\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            {/* <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div> */}\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              {/* <th></th> */}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{fontSize:12}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst PackingListTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [invoiceNumbers,setInvoiceNumbers] = React.useState([])\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState([])\n    const [editState, setEditState] = React.useState({})\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    // React.useEffect(() => {\n    //     console.log('modalValues', modalValues)\n    //     setEditState(modalValues)\n    // }, [modalValues])\n\n    const handleFetch = () => {\n\n        console.log('state: ',state)\n        console.log('tableValues: ',tableValues)\n        setTableValues(null)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint_warehouse+`/fetch/getPackingListDetailsForInvoiceID?invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'get',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.PackingList){\n                    setTableValues(res.PackingList)\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Fetch Packing List!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Fetch Packing List!', { \n                variant: 'info',\n            })\n        }\n\n    }\n\n    const handleDelete = (record) => {\n\n    //     try {\n    //         setDeleteLoader(true)\n    //         setOpenBackdrop(true)\n    //         fetch(api_endpoint + `/Jordan/SPTS/order/closeOrder.php?order_id=${record.order_id}`)\n    //             .then(res => res.json())\n    //             .then(res => {\n    //                 setDeleteLoader(false)\n    //                 setOpenBackdrop(false)\n    //                 console.log('delete response: ', res)\n    //                 if (res.Error_No === 0) {\n    //                     props.enqueueSnackbar('Successfully deleted order!', {\n    //                         variant: 'info',\n    //                     })\n    //                     fetchOrders()\n    //                 }\n    //                 //setTableValues(res.Orders)\n    //             })\n    //             .catch(err => {\n    //                 console.log('err in fetching', err)\n    //                 setDeleteLoader(false)\n    //                 setOpenBackdrop(false)\n    //                 //setTableValues([])\n    //             })\n    //     } catch (err) {\n    //         console.log('try catch error: ', err)\n    //         setDeleteLoader(false)\n    //         setOpenBackdrop(false)\n    //         //setTableValues([])\n    //     }\n    }\n\n    const fetchInvoiceNumbers = () => {\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getInvoices')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if(res.Invoices){\n                        setInvoiceNumbers(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            //setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchInvoiceNumbers()\n    }, [])\n    // React.useEffect(() => {\n    //     fetchPackingListForInvoice()\n    // }, [state.invoice])\n\n    return (\n        <>\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    asdf\n                    {/* {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    } */}\n                </div>\n            </Dialog>\n\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                        <Autocomplete\n                            //id=\"combo-box-demo\"\n                            options={invoiceNumbers}\n                            getOptionLabel={option => option.InvoiceCode}\n                            style={{ width: '100%' }}\n                            onChange={(e,v) => setState({...state,invoice:v})}\n                            renderInput={params => (\n                                <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\n                            )}\n                        />\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xs={3} style={{ padding: 5 }}>\n                        <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{color:'#fff',height:'100%'}} >\n                            {\n                                `Fetch`\n                            }\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n\n                    {\n                        tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        tableValues.length === 0 ?\n                        null\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Supplier',\n                                accessor: 'Supplier',\n                            },\n                            {\n                                Header: 'Buyer',\n                                accessor: 'Buyer',\n                            },\n                            {\n                                Header: 'Style',\n                                accessor: 'StyleCode',\n                            },\n                            {\n                                Header: 'Color',\n                                accessor: 'ColorCode',\n                            },\n                            {\n                                Header: 'Lot',\n                                accessor: 'LotCode',\n                            },\n                            {\n                                Header: 'Invoice',\n                                accessor: 'InvoiceCode',\n                            },\n                            {\n                                Header: 'Roll No',\n                                accessor: 'RollCode',\n                            },\n                            {\n                                Header: 'Fabric',\n                                accessor: 'FabricType',\n                            },\n                            {\n                                Header: 'Length',\n                                accessor: 'RollLength',\n                            },\n                            {\n                                Header: 'Net Weight',\n                                accessor: 'NetWeight',\n                            },\n                            {\n                                Header: 'Gross Weight',\n                                accessor: 'GrossWeight',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} \n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\n                        />\n                    }\n                </Grid>\n                <Backdrop open={openBackdrop}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n        </>\n    )\n}\n\nexport default withSnackbar(PackingListTable)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Order\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n        initialState: { pageSize: 50 }\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            {/* <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div> */}\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              {/* <th></th> */}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{fontSize:12}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst PackingListTable = props => {\n\n    const [fetched, setFetched] = React.useState(false)\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [invoiceNumbers,setInvoiceNumbers] = React.useState([])\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState([])\n    const [editState, setEditState] = React.useState({})\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    // React.useEffect(() => {\n    //     console.log('modalValues', modalValues)\n    //     setEditState(modalValues)\n    // }, [modalValues])\n\n    const handleFetch = () => {\n\n        console.log('state: ',state)\n        console.log('tableValues: ',tableValues)\n        setTableValues(null)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint_warehouse+`/fetch/getPackingListDetailsForInvoiceID?invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'get',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.PackingList){\n                    setTableValues(res.PackingList)\n                    setFetched(true)\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Fetch Packing List!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Fetch Packing List!', { \n                variant: 'info',\n            })\n        }\n\n    }\n\n    const handleDelete = (record) => {\n\n        if(state.invoice){\n\n            setLoading(true)\n            try{\n                let url = api_endpoint_warehouse+`/delete/deletePackingListForInvoiceID`;\n                console.log('url',url)\n                fetch(url,{\n                    method: 'put',\n                    headers:{\n                        'Content-Type':'application/json'\n                    },\n                    body:state.invoice.InvoiceID\n                })\n                .then(res => res.json())\n                .then(res => {\n                    setLoading(false)\n                    console.log('res: ',res)\n                })\n                .catch(err => {\n                    console.log('error while fetching',err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Failed to Delete Packing List!', { \n                        variant: 'info',\n                    })\n                })\n            }catch(err){\n                console.log('err in try catch',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Delete Packing List!', { \n                    variant: 'info',\n                })\n            }\n        }\n    }\n\n    const fetchInvoiceNumbers = () => {\n        try {\n            fetch(api_endpoint_warehouse + '/fetch/getDeletableInvoices')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if(res.Invoices){\n                        setInvoiceNumbers(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            //setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchInvoiceNumbers()\n    }, [])\n    // React.useEffect(() => {\n    //     fetchPackingListForInvoice()\n    // }, [state.invoice])\n\n    return (\n        <>\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    asdf\n                    {/* {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    } */}\n                </div>\n            </Dialog>\n\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                        <Autocomplete\n                            //id=\"combo-box-demo\"\n                            options={invoiceNumbers}\n                            getOptionLabel={option => option.InvoiceCode}\n                            style={{ width: '100%' }}\n                            onChange={(e,v) => setState({...state,invoice:v})}\n                            renderInput={params => (\n                                <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\n                            )}\n                        />\n                    </Grid>\n                    <Grid item lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\n                        <Button variant=\"contained\" fullWidth color='primary' onClick={handleFetch} style={{color:'#fff',height:'100%'}} >\n                            {\n                                `Fetch`\n                            }\n                        </Button>\n                    </Grid>\n                    {/* {\n                        state.invoice&&fetched===true?\n                        <Grid item lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\n                            <Button variant=\"contained\" fullWidth color='primary' onClick={handleDelete} style={{color:'#fff',height:'100%'}} >\n                                {\n                                    loading===true?\n                                    <CircularProgress size={16} style={{color:'#fff'}}/>\n                                    :\n                                    `Delete`\n                                }\n                            </Button>\n                        </Grid>\n                        :null\n                    } */}\n                </Grid>\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n\n                    {\n                        tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        tableValues.length === 0 ?\n                        null\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Supplier',\n                                accessor: 'Supplier',\n                            },\n                            {\n                                Header: 'Buyer',\n                                accessor: 'Buyer',\n                            },\n                            {\n                                Header: 'Style',\n                                accessor: 'StyleCode',\n                            },\n                            {\n                                Header: 'Color',\n                                accessor: 'ColorCode',\n                            },\n                            {\n                                Header: 'Lot',\n                                accessor: 'LotCode',\n                            },\n                            {\n                                Header: 'Invoice',\n                                accessor: 'InvoiceCode',\n                            },\n                            {\n                                Header: 'Roll No',\n                                accessor: 'RollCode',\n                            },\n                            {\n                                Header: 'Fabric',\n                                accessor: 'FabricType',\n                            },\n                            {\n                                Header: 'Length',\n                                accessor: 'RollLength',\n                            },\n                            {\n                                Header: 'Net Weight',\n                                accessor: 'NetWeight',\n                            },\n                            {\n                                Header: 'Gross Weight',\n                                accessor: 'GrossWeight',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} \n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\n                        />\n                    }\n                </Grid>\n                <Backdrop open={openBackdrop}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n        </>\n    )\n}\n\nexport default withSnackbar(PackingListTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddPackingList from '../AddPackingList'\nimport ViewPackingList from '../PackingListTable'\nimport DeletePackingList from '../PackingListTable/deletePackingList'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst PackingList = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Packing List</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Packing List\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Packing List\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        <Tab label=\"Delete Packing List\" {...a11yProps(2)} style={{color:'#fff',borderBottom:value===2?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddPackingList />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewPackingList/>\n                        {/* <MarkersTable /> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={2} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <DeletePackingList/>\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default PackingList","import React from 'react'\r\nimport { Grid, TextField, Button,Backdrop,CircularProgress, Typography } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport Select, { components } from 'react-select'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Tooltip from '@atlaskit/tooltip';\r\n\r\n\r\nconst options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' }\r\n  ]\r\n\r\nconst PlanSimulate = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [textFields,setTextFields] = React.useState({\r\n        targetMinutes:480,\r\n        plannedEfficiency:100\r\n    })\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [count, setCount] = React.useState(null)\r\n    const [somethingChanged, setSomethingChanged] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    //const [sizes,setSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [operations,setOperations] = React.useState([])\r\n    const [machineTypes,setMachineTypes] = React.useState([])\r\n    //const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    \r\n    const [value, setValue] = React.useState('target');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        recalculate(tableValues)\r\n    },[value])\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            // console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res operations',res)\r\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\r\n            setOperations(ops)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res machine Types',res)\r\n            setMachineTypes(res.machine_types)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n\r\n        \r\n    },[])\r\n\r\n    \r\n    const handleUpdateTable = async () => {\r\n        // console.log('modalValues',modalValues)\r\n        // console.log('tableVlaue',tableValues)\r\n        let tempTable = await Promise.all(tableValues.map(v => {\r\n            if(v.style_id===modalValues.style_id){\r\n                return modalValues\r\n            }else{\r\n                return v\r\n            }\r\n        }))\r\n        console.log('newTable',tempTable)\r\n        setTableValues(tempTable)\r\n        setSomethingChanged(true)\r\n        setModalVisible(false)\r\n\r\n        //let \r\n\r\n    }\r\n\r\n    // const handleUpdate = async () => {\r\n    //     console.log('tableValues',tableValues)\r\n    //     setLoading(true)\r\n    //     let table = await Promise.all(tableValues.map(t => ({...t,Style_id:t.style_id,target:t.order_target,time_for_target:t.allocated_time_for_target})))\r\n    //     try{\r\n    //         let url = api_endpoint+`/Jordan/SPTS/style/updateStyleBulletin.php`;\r\n    //         console.log('url',url)\r\n    //         fetch(url,{\r\n    //             method: 'post',\r\n    //             body: JSON.stringify({styleBulletin:table})\r\n    //         })\r\n    //         .then(res => res.json())\r\n    //         .then(res => {\r\n    //             setLoading(false)\r\n    //             console.log('res: ',res)\r\n    //             setTableValues([])\r\n    //             setSomethingChanged(false)\r\n    //             props.enqueueSnackbar('Updated Style Bulletin Successfully!', { \r\n    //                 variant: 'info',\r\n    //             })\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log('error while fetching',err)\r\n    //             setLoading(false)\r\n    //             props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n    //                 variant: 'info',\r\n    //             })\r\n    //         })\r\n    //     }catch(err){\r\n    //         console.log('err in try catch',err)\r\n    //         setLoading(false)\r\n    //         props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n    //             variant: 'info',\r\n    //         })\r\n    //     }\r\n\r\n    // }\r\n\r\n    const fetchAndUpdateWorkers = async (res) => {\r\n        let plans = await Promise.all(res.Style_Bulletin.map(async s => {\r\n            // API to fetch Plans\r\n            let url = api_endpoint+`/Jordan/SPTS/planning/getPlanForOperation.php?operation_id=${s.operation_id}`;\r\n            console.log('url',url)\r\n            let plansFromFetch = await fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(async r => {\r\n                console.log('res--> ',r)\r\n                if(r.Plan){\r\n                    // console.log(r.Plan)\r\n                    let formattedPlans = await Promise.all(r.Plan.map(p => ({...p,label:p.worker_name+', ppm: '+p.ppm+', Op Sam: '+(1/parseFloat(p.ppm)).toFixed(2),value:p.worker_id})))\r\n                    return {...s,workersForThisOperation:formattedPlans,selectedWorkers:[]}\r\n                }else{\r\n                    return {...s,workersForThisOperation:[],selectedWorkers:[]}\r\n                }\r\n            })\r\n            return plansFromFetch\r\n            // console.log(s)\r\n        }))\r\n\r\n        setCount(plans.length)\r\n        setLoading(false)\r\n        recalculate(plans)\r\n    }\r\n\r\n    \r\n\r\n    const handleFetch = () => {\r\n        setCount(null)\r\n\r\n        console.log('state: ',state)\r\n        console.log('tableValues: ',tableValues)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/style/getStyleBulletinForStyleCode.php?style_code=${state.style}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(async res => {\r\n                \r\n                console.log('res: ',res)\r\n\r\n                if(res.Style_Bulletin){\r\n                   fetchAndUpdateWorkers(res)\r\n                }else{\r\n                    setLoading(false)\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSelect = async (values,row) => {\r\n        // console.log('what: ',what)\r\n        let newTableValues = await Promise.all(tableValues.map(tV => {\r\n            if(tV.operation_id===row.operation_id){\r\n                return ({...tV,selectedWorkers:values})\r\n            }else{\r\n                return tV\r\n            }\r\n        }))\r\n        recalculate(newTableValues)\r\n    }\r\n\r\n    const recalculate = async (tableValues) => {\r\n        let newTableValues = await Promise.all(tableValues.map(async tV => {\r\n            // console.log(tV)\r\n            let production = 0 \r\n            let minutes = 0 \r\n            await Promise.all(tV.selectedWorkers.map(sW => {\r\n                production = production + sW.ppm\r\n            }))\r\n            if(value==='minutes'){\r\n                minutes = textFields.targetMinutes\r\n                production = ((production * parseFloat(textFields.targetMinutes))).toFixed(2)\r\n            }else{\r\n                console.log('production -> ',production)\r\n                minutes = production === 0? 0: ((1/production)* parseFloat(textFields.targetMinutes)).toFixed(2)\r\n                production = textFields.targetMinutes\r\n            }\r\n            console.log('-----------------------------------------------> ',production)\r\n            return ({...tV,production,minutes})\r\n        }))\r\n        setTableValues(newTableValues)\r\n    }\r\n\r\n    const handleTextFields = (e,attr) => {\r\n        setTextFields({...textFields,[attr]:e.target.value})\r\n        recalculate(tableValues)\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10}}>\r\n                        Update The Following Information For Style\r\n                    </div>\r\n                    {\r\n                        modalValues?\r\n                        <Grid container style={{padding:10}}>\r\n                            {\r\n                                console.log('modalValues ====> ',modalValues)\r\n                            }\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={operations}\r\n                                getOptionLabel={option => option.operation}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={()=>operations.filter(o => o.operation_code===modalValues.operation_code)[0]}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,operation_id:v.operation_id,operation_code:v.operation_code,operation_description:v.operation_description})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={machineTypes}\r\n                                getOptionLabel={option => option.machine_type}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={{machine_type:modalValues.machine_type}}\r\n                                //value={modalValues.machine_type}\r\n                                //defaultValue={() => machineTypes.filter(t => t.)}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,machine_type:v.machine_type})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" value={modalValues.operation_sequence} onChange={e=>setModalValues({...modalValues,operation_sequence:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" value={modalValues.order_target} onChange={e=>setModalValues({...modalValues,order_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" value={modalValues.allocated_time_for_target} onChange={e=>setModalValues({...modalValues,allocated_time_for_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" value={modalValues.no_of_operators} onChange={e=>setModalValues({...modalValues,no_of_operators:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" value={modalValues.no_of_helpers} onChange={e=>setModalValues({...modalValues,no_of_helpers:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                    }\r\n                    <div style={{display:'flex',justifyContent:'center'}}>\r\n                        <Button color='primary' fullWidth onClick={handleUpdateTable} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            {\r\n                                loading === true?\r\n                                <CircularProgress color={'#fff'}/>\r\n                                :\r\n                                `Update`\r\n                            }\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => {if(v){setState({...state,style:v.style_code})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                    <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{height:55,color:'#fff'}} fullWidth>\r\n                        fetch\r\n                    </Button>\r\n                    \r\n                    {/* <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,color:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> */}\r\n                </Grid>\r\n                {\r\n                    count !== null?\r\n                    <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:15,marginTop:15}}>\r\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\r\n                                No Of Operations: {count}\r\n                            </Typography>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                }\r\n                <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15,textAlign:'end'}}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange} style={{alignItems:'center',flexDirection:'row'}}>\r\n                                <FormLabel component=\"legend\" style={{marginRight:15}}>Select:</FormLabel>\r\n                                <FormControlLabel value=\"target\" control={<Radio />} label=\"Target\" />\r\n                                <FormControlLabel value=\"minutes\" control={<Radio />} label=\"Minutes\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15}}>\r\n                        <TextField fullWidth label={\"Available \"+value} variant=\"outlined\" type=\"number\" value={textFields.targetMinutes} onChange={e=>handleTextFields(e,'targetMinutes')} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15}}>\r\n                        <TextField fullWidth label=\"Planned Efficiency\" variant=\"outlined\" type=\"number\" value={textFields.plannedEfficiency} onChange={e=>handleTextFields(e,'plannedEfficiency')} />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        loading===true?\r\n                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th style={{width:500}}>Workers</th>\r\n                                <th>Code</th>\r\n                                <th>Desc</th>\r\n                                <th>Seq</th>\r\n                                <th>Production</th>\r\n                                <th>Minutes</th>\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>\r\n                                                <Select \r\n                                                    isMulti\r\n                                                    styles={{ option: (base) => ({ ...base, border: `1px solid black`, height: '100%' }) }}\r\n                                                    onChange={values => handleSelect(values,v)} \r\n                                                    options={v?v.workersForThisOperation?v.workersForThisOperation:[]:[]}\r\n                                                    components={{Option}} \r\n                                                />\r\n                                            </td>\r\n                                            <td>{v.operation_code}</td>\r\n                                            <td>{v.operation_description}</td>\r\n                                            <td>{v.operation_sequence}</td>\r\n                                            <td>{v.production}</td>\r\n                                            <td>{v.minutes}</td>\r\n                                           \r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                            <Backdrop open={openBackdrop}>\r\n                                <CircularProgress color=\"inherit\" />\r\n                            </Backdrop>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Option = props => {\r\n    console.log('props ---> ',props)\r\n    return(<Tooltip content={'something'}>\r\n         <components.Option {...props}/>\r\n    </Tooltip>)\r\n}\r\n\r\nexport default withSnackbar(PlanSimulate)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddStyleBulletin from '../AddStyleBulletin'\nimport PlanSimulate from '../PlanSimulateTab'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst StyleBulletin = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Plan Simulate</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Simulate\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        {/* <Tab label=\"View Style Bulletin\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <PlanSimulate />\n                    </TabPanel>\n                    {/* <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewStyleBulletin />\n                    </TabPanel> */}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default StyleBulletin","import React from 'react'\nimport Header from '../../../components/ProductionTrackingHeader'\nimport Workers from '../../../components/Workers'\nimport Orders from '../../../components/Orders'\nimport Operations from '../../../components/Operations'\nimport Markers from '../../../components/Marker'\nimport RollIssuance from '../../../components/RollIssuance'\nimport CutJob from '../../../components/CutJob'\nimport CutReport from '../../../components/CutReport'\nimport StyleBulletin from '../../../components/StyleBulletin'\nimport IE from '../../../components/IECharts'\nimport PO from '../../../components/PO'\nimport AssignPOtoBundle from '../../../components/AssignPOtoBundle'\nimport ManualStocking from '../../../components/ManualStocking'\nimport CardAssignment from '../../../components/CardAssignment'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport ChartIcon from '@material-ui/icons/BarChart'\nimport { Typography } from '@material-ui/core'\nimport PackingList from '../../../components/PackingList'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/HomeWork';\nimport DeviceIcon from '@material-ui/icons/DeviceHub';\nimport SettingsIcon from '@material-ui/icons/Settings';\n// import AppBar from '@material-ui/core/AppBar';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\n//import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PlanSimulate from '../../../components/PlanSimulate'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor:'#212121'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nconst ProductionTracking = props => {\n    const classes = useStyles();\n\n    const [sptsValue,setSptsValue] = React.useState('') \n\n    return(<div>\n        {/* <Header setSptsValue={setSptsValue} /> */}\n        <div style={{paddingLeft:240,backgroundColor:'#fff'}}>\n\n        <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        {/* <div className={classes.toolbar} /> */}\n            <div style={{display:'flex',justifyContent:'center',backgroundColor:'#212121',paddingTop:20,paddingBottom:20}}>\n                <img src={require('../../../assets/WiMetrix.png')} alt=\"Logo\" style={{width:190}}/>\n            </div>\n            <Divider />\n            {/* <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                Reports&nbsp;\n            </Typography>\n            <ChartIcon color='primary'/>\n        </div> */}\n        {/* <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('ieReport')} button key={'ieReport'} style={{backgroundColor:sptsValue === 'ieReport'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'IE Reports'} />\n            </ListItem>\n        </List> */}\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                Warehouse&nbsp;\n            </Typography>\n            <HomeIcon color='primary'/>\n        </div>\n        <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('packingList')} button key={'packingList'} style={{backgroundColor:sptsValue === 'packingList'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Packing List'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('manualStocking')} button key={'manualStocking'} style={{backgroundColor:sptsValue === 'manualStocking'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Manual Stocking'} />\n            </ListItem>\n            {/* <ListItem onClick={()=>setSptsValue('cardAssignment')} button key={'cardAssignment'} style={{backgroundColor:sptsValue === 'cardAssignment'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Card Assignment'} />\n            </ListItem> */}\n            {/* <ListItem onClick={()=>setSptsValue('rollIssuance')} button key={'rollIssuance'} style={{backgroundColor:sptsValue === 'rollIssuance'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Roll Issuance'} />\n            </ListItem> */}\n        </List>\n        <Divider />\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                Cutting&nbsp;\n            </Typography>\n            <DeviceIcon color='primary'/>\n        </div>\n        <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('marker')} button key={'marker'} style={{backgroundColor:sptsValue === 'marker'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Marker'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('po')} button key={'po'} style={{backgroundColor:sptsValue === 'po'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'PO'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('cutJob')} button key={'cutJob'} style={{backgroundColor:sptsValue === 'cutJob'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Cut Job'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('cutReport')} button key={'cutReport'} style={{backgroundColor:sptsValue === 'cutReport'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Cut Report'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('assignPO')} button key={'assignPO'} style={{backgroundColor:sptsValue === 'assignPO'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Assign PO to Bundle'} />\n            </ListItem>\n        </List>\n        <Divider />\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                SPTS&nbsp;\n            </Typography>\n            <SettingsIcon color='primary'/>\n        </div>\n        <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('workers')} button key={'workers'} style={{backgroundColor:sptsValue === 'workers'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Workers'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('orders')} button key={'orders'} style={{backgroundColor:sptsValue === 'orders'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Orders'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('operations')} button key={'operations'} style={{backgroundColor:sptsValue === 'operations'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Operations'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('styleBulletin')} button key={'styleBulletin'} style={{backgroundColor:sptsValue === 'styleBulletin'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Style Bulletin'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('planSimulate')} button key={'planSimulate'} style={{backgroundColor:sptsValue === 'planSimulate'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Plan Simulate'} />\n            </ListItem>\n        </List>\n      </Drawer>\n      <div style={{padding:'30px 30px 10px',display:'flex',justifyContent:'space-between',alignItems:'flex-end'}}>\n      <Typography color='primary' style={{fontWeight:'500'}} variant=\"h4\">Rainbow</Typography>\n      <Link to='/'>\n        <Typography color='primary' style={{fontWeight:'500'}} variant=\"subtitle\">Logout</Typography>  \n      </Link>\n      </div>\n      <div style={{margin:'0px 30px 10px',borderBottom:'1px solid lightgrey'}}>\n\n      </div>\n \n        {\n            sptsValue === 'workers'?\n            <Workers />\n            :\n            sptsValue === 'operations'?\n            <Operations />\n            :\n            sptsValue === 'orders'?\n            <Orders />\n            :\n            sptsValue === 'marker'?\n            <Markers />\n            :\n            sptsValue === 'cutJob'?\n            <CutJob />\n            :\n            sptsValue === 'cutReport'?\n            <CutReport />\n            :\n            sptsValue === 'styleBulletin'?\n            <StyleBulletin />\n            :\n            sptsValue === 'assignPO'?\n            <AssignPOtoBundle />\n            :\n            sptsValue === 'po'?\n            <PO />\n            :\n            sptsValue === 'packingList'?\n            <PackingList />\n            :\n            sptsValue === 'manualStocking'?\n            <ManualStocking />\n            :\n            sptsValue === 'rollIssuance'?\n            <RollIssuance />\n            :\n            sptsValue === 'ieReport'?\n            <IE />\n            :\n            sptsValue === 'cardAssignment'?\n            <CardAssignment />\n            :\n            sptsValue === 'planSimulate'?\n            <PlanSimulate />\n            :\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:400}}>\n                <div>\n                    <div style={{textAlign:'center',marginBottom:20}}><InfoIcon color='primary' style={{fontSize:70}} /></div>\n                    <div>\n                        <Typography variant=\"h6\" color='secondary'>\n                            Select An Option\n                        </Typography> \n                    </div>\n                </div>\n            </div>\n        }\n        </div>\n    </div>)\n}\n\nexport default ProductionTracking"],"sourceRoot":""}