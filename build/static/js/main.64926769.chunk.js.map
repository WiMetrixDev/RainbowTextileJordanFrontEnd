{"version":3,"sources":["assets/WiMetrix.png","logo.svg","containers/pages/Signin/Signin.js","redux/auth/actions.js","redux/auth/reducer.js","redux/reducers.js","redux/store.js","util/AsyncComponent.js","containers/pages/Signup/Signup.js","router.js","App.js","serviceWorker.js","index.js","assets/528.jpg"],"names":["module","exports","Signin","props","React","useState","username","password","state","setState","handleChange","e","target","name","value","style","backgroundColor","height","display","gridTemplateColumns","flexDirection","justifyContent","alignItems","color","backgroundImage","Image","fontSize","padding","container","variant","textAlign","fontWeight","marginTop","item","lg","md","sm","xs","onChange","label","fullWidth","type","onClick","history","push","paddingTop","paddingBottom","src","require","alt","width","actions","TOGGLE_LOADER","toggleLoader","payload","BASIC_FETCH","basicFetch","initState","loading","Auth","action","console","log","Object","assign","createHistory","middlewares","routerMiddleware","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","reducers","router","connectRouter","applyMiddleware","asyncComponent","importComponent","component","then","cmp","default","C","this","Component","Signup","to","PrivateRoute","isLoggedIn","rest","render","pathname","from","location","connect","idToken","exact","path","theme","createMuiTheme","palette","primary","main","secondary","App","ThemeProvider","maxSnack","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.64926769.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WiMetrix.2ecbfe65.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\nimport { Grid, TextField, Button, Typography } from '@material-ui/core'\r\nimport Image from '../../../assets/528.jpg'\r\n//import axios from 'axios';\r\n\r\nconst Signin = props => {\r\n\r\n    const [state,setState] = React.useState({username:'',password:''})\r\n\r\n    // React.useEffect(()=>{\r\n    //     axios.get('/api/basic/list')\r\n    //     .then(res => console.log('res.data.Basic: ',res.data.Basic))\r\n    // },[])\r\n    const handleChange = (e) => {\r\n        setState({...state,[e.target.name]:e.target.value})\r\n    }\r\n\r\n    return (\r\n        <div style={{backgroundColor:'#f6f6f6',height:'100vh',display:'grid',gridTemplateColumns:'40% 60%'}}>\r\n            <div style={{ display:'flex',flexDirection:'column',justifyContent:'center',alignItems:'center',backgroundColor:'black',color:'#fff',backgroundImage:`linear-gradient(to bottom, rgba(13, 81, 5, 0.9), rgba(37, 37, 37, 0.9)),\r\nurl(${Image})` }}>\r\n                <h2 style={{fontSize:'40px'}}>Rainbow Textiles</h2>\r\n                {/* <div style={{display:'flex',justifyContent:'center',paddingTop:0,paddingBottom:20}}>\r\n                    <img src={require('../../../assets/rtl.jpg')} alt=\"Logo\" style={{width:310}}/>\r\n                </div> */}\r\n                <h4>Sign In To Continue</h4>\r\n            </div>\r\n            <div style={{ padding: '0px 20px',display:'flex',flexDirection:'column',justifyContent:'center' }}>\r\n                <Grid container style={{ display:'flex',justifyContent:'center'}}>\r\n                    <Typography variant=\"h3\" color='secondary' style={{textAlign:'center',fontWeight:'700'}}>Welcome to Smart Factory Management</Typography>\r\n                </Grid>\r\n                {/* <Grid container style={{ display:'flex',justifyContent:'center'}}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Sign In</Typography>\r\n                    </Grid>\r\n                </Grid> */}\r\n                \r\n                <Grid container style={{ display:'flex',justifyContent:'center',marginTop:50}}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <TextField name=\"username\" onChange={handleChange} value={state.username} label=\"Username\" variant=\"outlined\" fullWidth />\r\n                    </Grid>\r\n                    </Grid>\r\n                <Grid container style={{ display:'flex',justifyContent:'center',marginTop:20 }}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <TextField name=\"password\" type=\"password\" onChange={handleChange} value={state.password} label=\"Password\" variant=\"outlined\" fullWidth />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{ display:'flex',justifyContent:'center',marginTop:20 }}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6}>\r\n                        <Button variant=\"contained\" fullWidth style={{height:'50px',color:'#fff'}} color=\"primary\" onClick={()=> props.history.push('/home')}>\r\n                            Sign In\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <div style={{display:'flex',justifyContent:'center',paddingTop:40,paddingBottom:20}}>\r\n                    <Typography variant='subtitle2' color='secondary'>Powered By</Typography>\r\n                </div>\r\n                <div style={{display:'flex',justifyContent:'center',paddingTop:0,paddingBottom:20}}>\r\n                    <img src={require('../../../assets/WiMetrix.png')} alt=\"Logo\" style={{width:210}}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signin","const actions = {\r\n    TOGGLE_LOADER: 'TOGGLE_LOADER',\r\n    toggleLoader: (payload) => ({\r\n        type: actions.TOGGLE_LOADER,\r\n        payload\r\n    }),\r\n    BASIC_FETCH: 'BASIC_FETCH',\r\n    basicFetch: (payload) => ({\r\n        type: actions.BASIC_FETCH,\r\n        payload\r\n    })\r\n};\r\n\r\nexport default actions;","import actions from \"./actions\";\r\n\r\nconst initState = {\r\n    loading: false\r\n}\r\n\r\nexport default function authReducer(state = initState, action) {\r\n    switch (action.type) {\r\n        case actions.TOGGLE_LOADER:\r\n            console.log(\"toggle logger...\",action.payload);\r\n            return Object.assign({}, state, {\r\n                loading: action.payload\r\n            });\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import Auth from './auth/reducer';\r\n//import App from './app/reducer';\r\n\r\nexport default {\r\n  Auth,\r\n//  App,\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport createHistory from 'history/createBrowserHistory';\r\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\r\n//import thunk from 'redux-thunk';\r\n//import createSagaMiddleware from 'redux-saga';\r\nimport reducers from '../redux/reducers';\r\n//import rootSaga from '../redux/sagas';\r\n\r\n\r\nconst history = createHistory();\r\n//const sagaMiddleware = createSagaMiddleware();\r\nconst routeMiddleware = routerMiddleware(history);\r\nconst middlewares = [routeMiddleware];\r\n\r\nconst composeEnhancers =\r\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\r\n      })\r\n    : compose;\r\n\r\n\r\n\r\nconst store = createStore(\r\n  combineReducers({\r\n    ...reducers,\r\n    router: connectRouter(history),\r\n  }),\r\n  composeEnhancers(applyMiddleware(...middlewares))\r\n);\r\n//sagaMiddleware.run(rootSaga);\r\nexport { store, history };\r\n","import React, { Component } from 'react';\r\n\r\nconst asyncComponent = importComponent =>\r\n  class extends Component {\r\n    state = {\r\n      component: null\r\n    };\r\n\r\n    componentDidMount() {\r\n      importComponent().then(cmp => {\r\n        this.setState({ component: cmp.default });\r\n      });\r\n    }\r\n\r\n    render() {\r\n      const C = this.state.component;\r\n      // console.log('importComponent in asyncComponenet',importComponent)\r\n      return C ? <C {...this.props} /> : null;\r\n    }\r\n  };\r\n\r\nexport default asyncComponent;","import React from 'react'\r\nimport { Link } from \"react-router-dom\"\r\n//import axios from 'axios';\r\n\r\nconst Signup = () => {\r\n\r\n\r\n    // React.useEffect(()=>{\r\n    //     axios.get('/api/basic/list')\r\n    //     .then(res => console.log('res.data.Basic: ',res.data.Basic))\r\n    // },[])\r\n\r\n    return (\r\n        <>\r\n            <div style={{ padding: '0px 20px' }}>\r\n                <h2>Sign Up</h2>\r\n                <p>Welcome to sign up page. Click <Link to=\"/\">here</Link> to go back!</p>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Signup","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { ConnectedRouter } from 'connected-react-router';\r\nimport { connect } from 'react-redux';\r\nimport asyncComponent from './util/AsyncComponent'\r\nimport Signup from './containers/pages/Signup/Signup'\r\nimport Signin from './containers/pages/Signin/Signin'\r\n// import App from './containers/App/App';\r\n// import AppClinic from './containers/AppClinic/App';\r\n// import AppAdmin from './containers/AppAdmin/App';\r\n// import asyncComponent from './util/AsyncComponent';\r\n// import Auth0 from './helpers/auth0';\r\n// import { BrowserRouter } from 'react-router-dom'\r\n\r\nconst PrivateRoute = ({ component: Component, isLoggedIn, ...rest }) => (\r\n  <Route\r\n    {...rest}\r\n    render={props =>\r\n      isLoggedIn ? (\r\n        <Component {...props} />\r\n      ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: '/',\r\n              state: { from: props.location },\r\n            }}\r\n          />\r\n        )\r\n    }\r\n  />\r\n);\r\nconst PublicRoutes = ({ history, isLoggedIn }) => {\r\n  return (\r\n    <ConnectedRouter history={history}>\r\n      <div>\r\n        <Route\r\n          exact\r\n          path={'/'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/pages/Signin/Signin')\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/home'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/pages/ProductionTracking')\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/production-tracking'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/pages/ProductionTracking')\r\n          )}\r\n        />\r\n        \r\n        {/* <Route\r\n          exact\r\n          path={'/404'}\r\n          component={asyncComponent(() => import('./containers/Page/404'))}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/500'}\r\n          component={asyncComponent(() => import('./containers/Page/500'))}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/admin'}\r\n          component={asyncComponent(() => import('./containers/Page/signinAdmin'))}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/doctors/signin'}\r\n          component={asyncComponent(() => import('./containers/Page/signin'))}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/clinic/signin'}\r\n          component={asyncComponent(() => import('./containers/Page/signinClinic'))}\r\n        />\r\n  \r\n        <Route\r\n          exact\r\n          path={'/doctors/signup'}\r\n          component={asyncComponent(() => import('./containers/Page/signup'))}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/clinics/signup'}\r\n          component={asyncComponent(() => import('./containers/Page/SignupClinic'))}\r\n        />\r\n\r\n        <Route\r\n          exact\r\n          path={'/user/verify/:token'}\r\n          component={asyncComponent(() => import('./containers/Page/verify'))}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/forgotpassword'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/Page/forgotPassword')\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/privacypolicy'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/Footer/PrivacyPolicy')\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/termsandconditions'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/Footer/TermsAndConditions')\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/team'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/Footer/TheTeam')\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/about'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/Footer/About')\r\n          )}\r\n        />\r\n        <Route\r\n          exact\r\n          path={'/resetpassword/:token'}\r\n          component={asyncComponent(() =>\r\n            import('./containers/Page/resetPassword')\r\n          )}\r\n        /> */}\r\n\r\n        {/* <Route\r\n          path=\"/auth0loginCallback\"\r\n          render={props => {\r\n            Auth0.handleAuthentication(props);\r\n          }}\r\n        /> */}\r\n        <PrivateRoute\r\n          path=\"/signup\"\r\n          component={Signup}\r\n          isLoggedIn={true}\r\n        />\r\n      </div>\r\n    </ConnectedRouter>\r\n  );\r\n};\r\n\r\nexport default connect(state => ({\r\n  isLoggedIn: state.Auth.idToken !== null,\r\n}))(PublicRoutes);\r\n","import React from 'react';\r\nimport logo from './logo.svg';\r\nimport { BrowserRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { store, history } from './redux/store'\r\nimport Routes from './router'\r\nimport './App.css';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      // Purple and green play nicely together.\r\n      main: '#418832',\r\n    },\r\n    secondary: {\r\n      // This is green.A700 as hex.\r\n      main: '#555A5C',\r\n    },\r\n  },\r\n});\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <SnackbarProvider maxSnack={3}>\r\n        <BrowserRouter>\r\n          <Provider store={store}>\r\n            <Routes history={history} />\r\n          </Provider>\r\n        </BrowserRouter>\r\n      </SnackbarProvider>\r\n\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/528.0c2cf02d.jpg\";"],"sourceRoot":""}