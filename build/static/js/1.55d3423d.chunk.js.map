{"version":3,"sources":["util/config.js","components/ProductionTrackingHeader/index.js","components/AddWorkers/index.js","components/Workers/SetTarget.js","components/Workers/ViewTarget.js","components/WorkersTable/index.js","components/Workers/index.js","components/AddOrders/index.js","components/OrdersTable/index.js","components/Orders/index.js","components/AddOperation/index.js","components/OperationsTable/index.js","components/Operations/index.js","components/AddMarkers/index.js","components/MarkersTable/index.js","components/Marker/index.js","components/AddRollIssuance/index.js","components/RollIssuance/index.js","components/AddCutJob/index.js","components/ExecuteCutJob/index.js","components/CutJob/index.js","components/CutReportTable/index.js","components/CutReportMappingTable/index.js","components/CutReport/index.js","components/AddStyleBulletin/index.js","components/ViewStyleBulletin/index.js","components/StyleBulletin/index.js","components/LineWiseTotalProduction/index.js","components/IECharts/index.js","components/AddPO/index.js","components/EditPO/index.js","components/POTable/index.js","components/EditPODetail/index.js","components/PO/index.js","components/AssignPO/index.js","components/AssignPOtoBundle/index.js","components/StockIn/index.js","components/StockOut/index.js","components/ManualStocking/index.js","components/AssignCard/index.js","components/CardAssignment/index.js","components/Table.js","components/AddPackingList/index.js","components/PackingListTable/index.js","components/PackingListTable/deletePackingList.js","components/PackingList/index.js","components/PlanSimulateTab/index.js","components/PlanSimulate/index.js","containers/pages/ProductionTracking/index.js"],"names":["module","exports","basic_url","random_string","api_endpoint","api_endpoint_warehouse","useStyles","makeStyles","theme","root","flexGrow","display","menuButton","marginRight","spacing","title","withRouter","props","classes","React","useState","className","AppBar","position","style","backgroundColor","color","CssBaseline","Toolbar","justifyContent","src","require","alt","width","Typography","variant","alignItems","cursor","onClick","history","push","withSnackbar","designations","setDesignations","deparments","setDepartments","state","setState","setLoading","useEffect","fetch","then","res","json","console","log","Departments","catch","err","Designations","Grid","container","item","lg","md","sm","xs","padding","TextField","value","workerId","onChange","e","target","name","fullWidth","label","workerName","Autocomplete","options","getOptionLabel","option","department_code","v","department","renderInput","params","designation_code","designation","Button","height","url","designation_id","department_id","method","Error_No","enqueueSnackbar","Error_Description","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","undefined","InputProps","endAdornment","InputAdornment","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","type","MyTable","columns","data","handleUpload","useTable","initialState","pageSize","useGlobalFilter","usePagination","useRowSelect","hooks","visibleColumns","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","previousPage","pageIndex","canPreviousPage","nextPage","page","canNextPage","pageOptions","selectedRowIds","selectedFlatRows","setPageSize","marginTop","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","textAlign","getCellProps","Object","keys","length","disabled","Component","SetTarget","lines","setLines","workers","setWorkers","time","componentRef","useReactToPrint","content","lineFilter","Lines","line","Workers","fetchWorkersForStiching","fetchWorkers","flexDirection","marginLeft","showSecond","format","use12Hours","inputReadOnly","accessor","vals","datetime","moment","keysArray","arr","parseInt","worker_id","body","JSON","stringify","date","ComponentToPrint","this","Date","setDate","defaultValue","InputLabelProps","shrink","trigger","setModalValues","setModalVisible","gotoPage","original","modalVisible","modalValues","tableValues","setTableValues","editState","setEditState","Dialog","open","marginBottom","worker_code","worker_name","designator_id","designator_code","CircularProgress","TabPanel","children","index","other","component","role","hidden","aria-labelledby","Box","p","a11yProps","palette","background","paper","useTheme","setValue","borderTopLeftRadius","borderTopRightRadius","Tabs","event","newValue","indicatorColor","textColor","aria-label","Tab","borderBottom","dir","direction","borderBottomLeftRadius","borderBottomRightRadius","ViewTarget","buyer","handleDelete","setOpenBackdrop","openBackdrop","setDeleteLoader","fetchOrders","Orders","buyer_code","style_code","order_id","order_description","otn","record","Backdrop","operationCode","operationDescription","operationSMV","min","pieceRate","fetchOperations","Operations","operation_code","operation_description","operation_smv","piece_rate","operation_id","AddOperation","sizes","setSizes","styles","setStyles","colors","setColors","Colors","size","Styles","Sizes","values","quantity","s","uuid","size_id","size_code","margin","no_of_plies","marker_description","draft","filter","d","loading","marker_id","Markers","fetchMarkers","Marker","fontSize","invoiceNumbers","setInvoiceNumbers","departments","args","a","RouteID","rolls","ItemID","RollLength","obj","itemIDArray","intentionRouteID","Responses","Invoices","Routes","fetchInvoiceNumbers","onBackdropClick","top","right","mV","item_id","InvoiceCode","invoice","InvoiceID","Rolls","ToLocation","RollIssuance","partNames","setPartNames","markers","setMarkers","fetchPartNames","marker","Part_Names","cut_description","no_of_layers","part_name","cutJobs","setCutJobs","fetchCutJobs","CutJobs","cutJob","cut_job_id","cut_job_description","no_of_bundles","CutJob","count","setCount","Cut_Report","paddingTop","fontWeight","alert","CutReport","spreadSheetButtonVisible","setSpreadSheetButtonVisible","modalVisible2","setModalVisible2","responses","setResponses","operations","setOperations","machineTypes","setMachineTypes","Promise","all","o","operation","ops","machine_types","operation_sequence","machine_type","machineType","sequence","timeForTarget","noOfOperators","noOfHelpers","no_of_operators","no_of_helpers","time_for_target","fulLWidth","files","readXlsxFile","styleBulletin","somethingChanged","setSomethingChanged","handleUpdateTable","style_id","tempTable","handleUpdate","t","Style_id","order_target","allocated_time_for_target","table","handleFetch","Style_Bulletin","Number","StyleBulletin","MyResponsiveBar","attr","attrAxis","orientation","x","y","IECharts","Paper","LineWiseTotalProduction","po_description","selectivesizes","setSelectiveSizes","pos","setPOS","po","poDetail","poid","POID","po_id","delete","update","add","newsize","sizeid","SIZEID","PO","psize","handleUpdatePOCode","code","po_code","pocode","sizecode","trim","replace","handleAdd","overflowY","cuts","setCuts","setPOs","bundles","setBundles","checked","setChecked","fetchStyles","fetchPOs","fetchColorsForStyleCodes","Cuts","fetchCutForOrder","cut","cut_code","Bundles","fetchBundleForCut","bundle","b","bundle_id","bundlesToSend","remarks","toString","FormControlLabel","control","Checkbox","inputProps","multiple","disableCloseOnSelect","bundle_code","multiline","AssignBundle","invoiceCodes","setInvoiceCodes","setRolls","notify","message","handleRollIntention","array","warehouseStatus","routeID","ErrorNumber","fetchInvoiceCodes","fetchDepartments","Location","PackingList","overflowX","Select","MenuItem","lots","setLots","fetchPackingList","filterResults","packinglist","ColorCode","StyleCode","LotCode","Set","fetchData","xl","lot","CardAssigment","AssignCard","defaultColumn","initialValue","updateMyData","onBlur","border","Table","skipPageReset","autoResetPage","pageCount","App","useMemo","setData","setSkipPageReset","rowIndex","columnId","addIcon","zIndex","distance","setDistance","setUnit","anchorEl","setAnchorEl","handleClose","uploadVisible","setUploadVisible","noOfRolls","setNoOfRolls","excelLoading","setExcelLoading","handleAppend","newArr","temp","getTime","Supplier","Buyer","net_weight","gross_weight","fabric_type","roll_no","season_code","RadioGroup","Radio","NetWeight","GrossWeight","RollCode","Season","FabricType","Menu","keepMounted","Boolean","onClose","setFetched","Option","Tooltip","targetMinutes","plannedEfficiency","textFields","setTextFields","recalculate","fetchAndUpdateWorkers","r","Plan","ppm","parseFloat","toFixed","formattedPlans","workersForThisOperation","selectedWorkers","plansFromFetch","plans","handleSelect","tV","newTableValues","production","minutes","sW","handleTextFields","FormControl","FormLabel","isMulti","base","components","appBar","drawer","flexShrink","drawerPaper","toolbar","mixins","ProductionTracking","sptsValue","setSptsValue","paddingLeft","Drawer","paddingBottom","Divider","List","ListItem","button","key","ListItemText","primary","to","AssignPOtoBundle","ManualStocking","CardAssignment"],"mappings":"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","file":"static/js/1.55d3423d.chunk.js","sourcesContent":["module.exports = {\r\n    basic_url: \"https://api.myjson.com/bins/1etsk2\",\r\n    random_string: \"Random String\",\r\n    // api_endpoint:'http://192.168.88.237',\r\n    api_endpoint: \"http://192.168.1.4:4334\", //Jordan\r\n    //  api_endpoint: \"http://192.168.88.220:8800\", //ANAS\r\n    //api_endpoint: \"http://192.168.88.172:4334\", //Server\r\n\r\n    api_endpoint_warehouse: \"http://192.168.1.4:8081/api\",\r\n    //api_endpoint_warehouse: \"http://192.168.88.220:8081/api\",\r\n};\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import Button from '@material-ui/core/Button';\r\n//import IconButton from '@material-ui/core/IconButton';\r\nimport HomeIcon from '@material-ui/icons/HomeWork';\r\nimport DeviceIcon from '@material-ui/icons/DeviceHub';\r\nimport SignoutIcon from '@material-ui/icons/LastPage';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport { withRouter } from 'react-router-dom'\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display:'flex'\r\n    //zIndex:2000\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nconst ButtonAppBar = props => {\r\n  const classes = useStyles();\r\n  const [anchorElSPTS, setAnchorElSPTS] = React.useState(null);\r\n  const [anchorElWarehouse, setAnchorElWarehouse] = React.useState(null);\r\n  const [anchorElCut, setAnchorElCut] = React.useState(null);\r\n\r\n  const handleClick = (event,arg) => {\r\n    console.log('asdaf',event,arg)\r\n    if(arg === 'spts'){\r\n      setAnchorElSPTS(event.currentTarget);\r\n    }else if(arg === 'cutting'){\r\n      setAnchorElCut(event.currentTarget);\r\n    }else if(arg === 'warehouse'){\r\n      setAnchorElWarehouse(event.currentTarget);\r\n    }\r\n  };\r\n\r\n  const handleCloseSPTS = () => {\r\n    setAnchorElSPTS(null);\r\n  };\r\n  const handleCloseCut = () => {\r\n    setAnchorElCut(null);\r\n  };\r\n  const handleCloseWarehouse = () => {\r\n    setAnchorElWarehouse(null);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{backgroundColor:'#fff',color:'#418832'}}>\r\n        <CssBaseline />\r\n        <Toolbar style={{display:'flex',justifyContent:'space-between'}}>\r\n            <div>\r\n                <img src={require('../../assets/WiMetrix.png')} alt=\"Logo\" style={{width:120}}/>\r\n            </div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n              <Typography color='secondary' variant=\"h5\">Rainbow</Typography>\r\n            {/* <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'warehouse')}>\r\n                    <HomeIcon />&nbsp;\r\n                    <Typography variant=\"subtitle1\">Warehouse</Typography>\r\n                </div>\r\n                <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'cutting')}>\r\n                    <DeviceIcon/>&nbsp;\r\n                    <Typography variant=\"subtitle1\">Cutting</Typography>\r\n                </div>\r\n                <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'spts')}>\r\n                    <SettingsIcon/>&nbsp;\r\n                    <Typography variant=\"subtitle1\">SPTS</Typography>\r\n                </div> */}\r\n                {/* <Menu\r\n                    id=\"simple-menu-spts\"\r\n                    anchorEl={anchorElSPTS}\r\n                    //keepMounted\r\n                    open={Boolean(anchorElSPTS)}\r\n                    onClose={handleCloseSPTS}\r\n                >\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('workers')\r\n                        handleCloseSPTS()\r\n                    }}>Workers</MenuItem>\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('orders')\r\n                        handleCloseSPTS()\r\n                    }}>Orders</MenuItem>\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('operations')\r\n                        handleCloseSPTS()\r\n                    }}>Operations</MenuItem>\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('styleBulletin')\r\n                        handleCloseSPTS()\r\n                    }}>Style Bulletin</MenuItem>\r\n                </Menu>\r\n                <Menu\r\n                    id=\"simple-menu-cut\"\r\n                    anchorEl={anchorElCut}\r\n                    //keepMounted\r\n                    open={Boolean(anchorElCut)}\r\n                    onClose={handleCloseCut}\r\n                >\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('marker')\r\n                        handleCloseCut()\r\n                    }}>Marker</MenuItem>\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('po')\r\n                        handleCloseCut()\r\n                    }}>PO</MenuItem>\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('cutJob')\r\n                        handleCloseCut()\r\n                    }}>Cut Job</MenuItem>\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('cutReport')\r\n                        handleCloseSPTS()\r\n                    }}>Cut Report</MenuItem>\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('assignPO')\r\n                        handleCloseCut()\r\n                    }}>Assign PO to Bundle</MenuItem>\r\n                </Menu>\r\n                <Menu\r\n                    id=\"simple-menu-cut\"\r\n                    anchorEl={anchorElWarehouse}\r\n                    //keepMounted\r\n                    open={Boolean(anchorElWarehouse)}\r\n                    onClose={handleCloseWarehouse}\r\n                >\r\n                    <MenuItem onClick={()=>{\r\n                        props.setSptsValue('packingList')\r\n                        handleCloseWarehouse()\r\n                    }}>Packing List</MenuItem>\r\n                </Menu> */}\r\n            </div>\r\n            <div style={{display:'flex',alignItems:'center',cursor:'pointer'}} onClick={()=>props.history.push('/')}>\r\n                <Typography variant=\"subtitle1\" style={{cursor:'pointer'}}>Logout</Typography>\r\n                <SignoutIcon />\r\n            </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(ButtonAppBar)","import React from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n//import axios from 'axios'\r\nimport { withSnackbar } from 'notistack';\r\n\r\nconst AddWorkers = props => {\r\n\r\n    const [designations,setDesignations] = React.useState([])\r\n    const [deparments,setDepartments] = React.useState([])\r\n    const [state,setState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    const handleAdd = () => {\r\n        // console.log({ \r\n        //     worker_code: state.workerId, \r\n        //     worker_name: state.workerName, \r\n        //     designator_id:state.designation.designation_id,\r\n        //     designator_code:state.designation.designation_code,\r\n        //     department_id:state.department.department_id,\r\n        //     department_code:state.department.department_code\r\n        // })\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/worker/insertWorker.php?worker_code=${state.workerId}&worker_name=${state.workerName}&designator_id=${state.designation.designation_id}&designator_code=${state.designation.designation_code}&department_id=${state.department.department_id}&department_code=${state.department.department_code}`;\r\n            console.log('url: ',url)\r\n            // alert(url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully added Worker!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n                //console.log('generate qrcode response',res)\r\n                //setQrCode(res.code)\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                props.enqueueSnackbar('Error While Adding Worker!', { \r\n                    variant: 'info',\r\n                })\r\n                setLoading(false)\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            props.enqueueSnackbar('Error While Adding Worker!', { \r\n                variant: 'info',\r\n            })\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n\r\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDepartments.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res departments',res)\r\n            setDepartments(res.Departments)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res designations',res)\r\n            setDesignations(res.Designations)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n    },[])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.workerId} onChange={e => setState({...state,workerId:e.target.value})} name=\"workerId\" variant=\"outlined\" fullWidth label=\"Worker ID\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.workerName} onChange={e => setState({...state,workerName:e.target.value})} name=\"workerName\" variant=\"outlined\" fullWidth label=\"Worker Name\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={deparments}\r\n                        getOptionLabel={option => option.department_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,department:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Department\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                    {/* <TextField name=\"department\" variant=\"outlined\" fullWidth label=\"Department\"/> */}\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={designations}\r\n                        getOptionLabel={option => option.designation_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,designation:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Designation\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                    {/* <TextField name=\"designation\" variant=\"outlined\" fullWidth label=\"Designation\"/> */}\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >Add Worker</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddWorkers)","import React, { useRef } from \"react\";\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    InputAdornment,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { api_endpoint } from \"../../util/config\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n    useTable,\r\n    usePagination,\r\n    useGlobalFilter,\r\n    useRowSelect,\r\n} from \"react-table\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TimePicker from \"rc-time-picker\";\r\nimport \"rc-time-picker/assets/index.css\";\r\nimport moment from \"moment\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    //const count = preGlobalFilteredRows.length\r\n\r\n    return (\r\n        <span>\r\n            <TextField\r\n                name=\"searchValue\"\r\n                variant=\"outlined\"\r\n                label=\"Search Workers\"\r\n                value={globalFilter || \"\"}\r\n                onChange={(e) => setGlobalFilter(e.target.value || undefined)}\r\n                fullWidth\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <SearchIcon\r\n                                color=\"primary\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                            />\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        </span>\r\n    );\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef();\r\n        const resolvedRef = ref || defaultRef;\r\n\r\n        React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate;\r\n        }, [resolvedRef, indeterminate]);\r\n\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n        );\r\n    }\r\n);\r\n\r\nfunction MyTable({ columns, data, handleUpload }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        selectedFlatRows,\r\n        state: { selectedRowIds },\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageSize: 50 },\r\n        },\r\n        useGlobalFilter,\r\n        usePagination,\r\n        useRowSelect,\r\n        (hooks) => {\r\n            hooks.visibleColumns.push((columns) => [\r\n                // Let's make a column for selection\r\n                {\r\n                    id: \"selection\",\r\n                    // The header can use the table's getToggleAllRowsSelectedProps method\r\n                    // to render a checkbox\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox\r\n                                {...getToggleAllRowsSelectedProps()}\r\n                            />\r\n                        </div>\r\n                    ),\r\n                    // The cell can use the individual row's getToggleRowSelectedProps method\r\n                    // to the render a checkbox\r\n                    Cell: ({ row }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox\r\n                                {...row.getToggleRowSelectedProps()}\r\n                            />\r\n                        </div>\r\n                    ),\r\n                },\r\n                ...columns,\r\n            ]);\r\n        }\r\n    );\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginTop: 20,\r\n                }}\r\n            >\r\n                <div style={{ width: 300 }}>\r\n                    <GlobalFilter\r\n                        preGlobalFilteredRows={preGlobalFilteredRows}\r\n                        globalFilter={globalFilter}\r\n                        setGlobalFilter={setGlobalFilter}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <table {...getTableProps()} style={{ width: \"100%\" }}>\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render(\"Header\")}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row);\r\n                        // console.log('row: ',row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {/* <td>{i+1}</td> */}\r\n                                {row.cells.map((cell) => {\r\n                                    return (\r\n                                        <td\r\n                                            style={{ textAlign: \"center\" }}\r\n                                            {...cell.getCellProps()}\r\n                                        >\r\n                                            {cell.render(\"Cell\")}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <p>Selected Workers: {Object.keys(selectedRowIds).length}</p>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n                <button\r\n                    onClick={() => previousPage()}\r\n                    disabled={!canPreviousPage}\r\n                >\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{\" \"}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n            {Object.keys(selectedRowIds).length > 0 ? (\r\n                <Grid\r\n                    container\r\n                    style={{ display: \"flex\", justifyContent: \"center\" }}\r\n                >\r\n                    <Grid\r\n                        item\r\n                        lg={12}\r\n                        md={12}\r\n                        sm={12}\r\n                        xs={12}\r\n                        style={{ marginTop: 20 }}\r\n                    >\r\n                        <Button\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            onClick={() => handleUpload(selectedRowIds)}\r\n                            style={{ color: \"#fff\", height: 55 }}\r\n                        >\r\n                            Set Target\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            ) : null}\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <th>column 1</th>\r\n                    <th>column 2</th>\r\n                    <th>column 3</th>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>data 1</td>\r\n                        <td>data 2</td>\r\n                        <td>data 3</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nconst SetTarget = React.forwardRef((props, ref) => {\r\n    // const [designations,setDesignations] = React.useState([])\r\n    const [deparments, setDepartments] = React.useState([]);\r\n    const [lines, setLines] = React.useState([]);\r\n    const [workers, setWorkers] = React.useState([]);\r\n    const [state, setState] = React.useState({});\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [time, onChange] = React.useState(null);\r\n    const componentRef = useRef();\r\n    const handlePrint = useReactToPrint({\r\n        content: () => componentRef.current,\r\n    });\r\n\r\n    const handleUpload = (vals) => {\r\n        if (!time) {\r\n            props.enqueueSnackbar(\"Select target time first!\", {\r\n                variant: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let datetime = moment(time, \"HH:mm\").format(\"YYYY-MM-DD HH:mm\");\r\n        let keysArray = Object.keys(vals);\r\n        let arr = [];\r\n        for (let i = 0; i < keysArray.length; i++) {\r\n            console.log(workers[parseInt(keysArray[i])].worker_id);\r\n            arr.push(workers[parseInt(keysArray[i])].worker_id);\r\n        }\r\n        console.log(arr);\r\n        console.log(\r\n            \"rows: \",\r\n            arr,\r\n            \", time: \",\r\n            datetime,\r\n            \", department: \",\r\n            state.department.department_code\r\n        );\r\n        try {\r\n            let url =\r\n                api_endpoint +\r\n                `/Jordan/AttendanceSystem/updateTargetForWorkers.php`;\r\n            console.log(\"url: \", url);\r\n            // alert(url)\r\n            fetch(url, {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    workers: arr,\r\n                    target: datetime,\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(\"res: \", res);\r\n                    if (res.Error_No === 0) {\r\n                        props.enqueueSnackbar(\r\n                            \"Successfully updated Target Time!\",\r\n                            {\r\n                                variant: \"info\",\r\n                            }\r\n                        );\r\n                    } else {\r\n                        if (typeof res.Error_Description === \"object\") {\r\n                            console.log(\"objecttypeee\");\r\n                            props.enqueueSnackbar(\r\n                                \"Error while saving target time!\",\r\n                                {\r\n                                    variant: \"info\",\r\n                                }\r\n                            );\r\n                        } else {\r\n                            props.enqueueSnackbar(res.Error_Description, {\r\n                                variant: \"info\",\r\n                            });\r\n                        }\r\n                    }\r\n                    //console.log('generate qrcode response',res)\r\n                    //setQrCode(res.code)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"error while fetching\", err);\r\n                    props.enqueueSnackbar(\"Error while saving target time!\", {\r\n                        variant: \"info\",\r\n                    });\r\n                    setLoading(false);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in try catch\", err);\r\n            props.enqueueSnackbar(\"Error while saving target time!\", {\r\n                variant: \"info\",\r\n            });\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchWorkers = () => {\r\n        setWorkers([]);\r\n        try {\r\n            fetch(\r\n                api_endpoint +\r\n                    \"/Jordan/SPTS/worker/getWorkersForDepartment.php?department_id=\" +\r\n                    state.department.department_id,\r\n                {\r\n                    method: \"post\",\r\n                }\r\n            )\r\n                .then((res) =>\r\n                    res.json().then((res) => {\r\n                        console.log(\"res departments\", res);\r\n                        if (res.Workers) {\r\n                            setWorkers(res.Workers);\r\n                        } else {\r\n                            setWorkers([]);\r\n                            props.enqueueSnackbar(\"No worker found!\", {\r\n                                variant: \"info\",\r\n                            });\r\n                            console.log(workers);\r\n                        }\r\n                    })\r\n                )\r\n                .catch((err) => {\r\n                    console.log(\"err in fetch\", err);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in fetch\", err);\r\n        }\r\n    };\r\n    const fetchWorkersForStiching = () => {\r\n        setWorkers([]);\r\n        try {\r\n            fetch(\r\n                api_endpoint +\r\n                    \"/Jordan/SPTS/worker/getWorkersForStitching.php?department_id=\" +\r\n                    state.department.department_id +\r\n                    \"&&line_id=\" +\r\n                    state.line[\"line id\"],\r\n                {\r\n                    method: \"post\",\r\n                }\r\n            )\r\n                .then((res) =>\r\n                    res.json().then((res) => {\r\n                        console.log(\"res departments\", res);\r\n                        if (res.Workers) {\r\n                            setWorkers(res.Workers);\r\n                        } else {\r\n                            setWorkers([]);\r\n                            props.enqueueSnackbar(\"No worker found!\", {\r\n                                variant: \"info\",\r\n                            });\r\n                            console.log(workers);\r\n                        }\r\n                    })\r\n                )\r\n                .catch((err) => {\r\n                    console.log(\"err in fetch\", err);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in fetch\", err);\r\n        }\r\n    };\r\n    React.useEffect(() => {\r\n        if (state.department) {\r\n            if (state.department.department_id === 11) {\r\n                console.log(\"stiching\");\r\n                setState({ ...state, lineFilter: true });\r\n            } else {\r\n                setState({ ...state, lineFilter: false });\r\n            }\r\n        } else {\r\n            setWorkers([]);\r\n            setState({ ...state, lineFilter: false });\r\n        }\r\n    }, [state.department]);\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            fetch(api_endpoint + \"/Jordan/SPTS/worker/getDepartments.php\")\r\n                .then((res) =>\r\n                    res.json().then((res) => {\r\n                        console.log(\"res departments\", res);\r\n                        setDepartments(res.Departments);\r\n                    })\r\n                )\r\n                .catch((err) => {\r\n                    console.log(\"err in fetch\", err);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in fetch\", err);\r\n        }\r\n\r\n        try {\r\n            fetch(api_endpoint + \"/Jordan/SQMS/getAllLines.php\", {\r\n                method: \"post\",\r\n            })\r\n                .then((res) =>\r\n                    res.json().then((res) => {\r\n                        console.log(\"res Lines\", res);\r\n                        if (res.Lines) {\r\n                            setLines(res.Lines);\r\n                        } else {\r\n                            props.enqueueSnackbar(\"No Lines found!\", {\r\n                                variant: \"info\",\r\n                            });\r\n                        }\r\n                    })\r\n                )\r\n                .catch((err) => {\r\n                    console.log(\"err in fetch\", err);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in fetch\", err);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={deparments}\r\n                        getOptionLabel={(option) => option.department_code}\r\n                        style={{ width: \"100%\" }}\r\n                        onChange={(e, v) =>\r\n                            setState({ ...state, department: v })\r\n                        }\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"Department\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            />\r\n                        )}\r\n                    />\r\n                    {/* <TextField name=\"department\" variant=\"outlined\" fullWidth label=\"Department\"/> */}\r\n                </Grid>\r\n                {state.lineFilter == true ? (\r\n                    <Grid\r\n                        item\r\n                        lg={3}\r\n                        md={3}\r\n                        sm={6}\r\n                        xs={12}\r\n                        style={{ padding: 5 }}\r\n                    >\r\n                        <Autocomplete\r\n                            //id=\"combo-box-demo\"\r\n                            options={lines}\r\n                            getOptionLabel={(option) => option[\"line code\"]}\r\n                            style={{ width: \"100%\" }}\r\n                            onChange={(e, v) => setState({ ...state, line: v })}\r\n                            renderInput={(params) => (\r\n                                <TextField\r\n                                    {...params}\r\n                                    label=\"Lines\"\r\n                                    variant=\"outlined\"\r\n                                    fullWidth\r\n                                />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                ) : null}\r\n                {state.department ? (\r\n                    <>\r\n                        <Grid\r\n                            item\r\n                            lg={3}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                            style={{ padding: 5 }}\r\n                        >\r\n                            <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                style={{ color: \"#fff\", height: 55 }}\r\n                                onClick={() => {\r\n                                    if (state.lineFilter && state.line) {\r\n                                        fetchWorkersForStiching();\r\n                                    } else {\r\n                                        fetchWorkers();\r\n                                    }\r\n                                }}\r\n                                fullWidth\r\n                            >\r\n                                fetch workers\r\n                            </Button>\r\n                        </Grid>\r\n                    </>\r\n                ) : null}\r\n                {workers.length > 0 ? (\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            marginLeft: 10,\r\n                        }}\r\n                    >\r\n                        <Typography variant=\"subtitle1\">Target Time</Typography>\r\n                        <TimePicker\r\n                            showSecond={false}\r\n                            // defaultValue={moment().hour(0).minute(0)}\r\n                            onChange={(value) => onChange(value)}\r\n                            format={\"h:mm a\"}\r\n                            use12Hours\r\n                            inputReadOnly\r\n                        />\r\n                    </div>\r\n                ) : null}\r\n            </Grid>\r\n\r\n            {workers.length > 0 ? (\r\n                <div>\r\n                    {/* <ComponentToPrint  ref={componentRef} props={workers} /> */}\r\n                    {/* <button onClick={handlePrint}>Print this out!</button> */}\r\n                    <MyTable\r\n                        ref={componentRef}\r\n                        columns={[\r\n                            {\r\n                                Header: \"Worker Code\",\r\n                                accessor: \"worker_code\",\r\n                            },\r\n                            {\r\n                                Header: \"Worker Name\",\r\n                                accessor: \"worker_name\",\r\n                            },\r\n                        ]}\r\n                        data={workers}\r\n                        handleUpload={handleUpload}\r\n                    />\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default withSnackbar(SetTarget);\r\n","import React, { useRef } from \"react\";\r\nimport {\r\n    Grid,\r\n    TextField,\r\n    Button,\r\n    InputAdornment,\r\n    Typography,\r\n} from \"@material-ui/core\";\r\nimport { api_endpoint } from \"../../util/config\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport {\r\n    useTable,\r\n    usePagination,\r\n    useGlobalFilter,\r\n    useRowSelect,\r\n} from \"react-table\";\r\nimport { withSnackbar } from \"notistack\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport TimePicker from \"rc-time-picker\";\r\nimport \"rc-time-picker/assets/index.css\";\r\nimport moment from \"moment\";\r\nimport { useReactToPrint } from \"react-to-print\";\r\nimport ReactToPrint from \"react-to-print\";\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    //const count = preGlobalFilteredRows.length\r\n\r\n    return (\r\n        <span>\r\n            <TextField\r\n                name=\"searchValue\"\r\n                variant=\"outlined\"\r\n                label=\"Search Workers\"\r\n                value={globalFilter || \"\"}\r\n                onChange={(e) => setGlobalFilter(e.target.value || undefined)}\r\n                fullWidth\r\n                InputProps={{\r\n                    endAdornment: (\r\n                        <InputAdornment position=\"end\">\r\n                            <SearchIcon\r\n                                color=\"primary\"\r\n                                style={{ cursor: \"pointer\" }}\r\n                            />\r\n                        </InputAdornment>\r\n                    ),\r\n                }}\r\n            />\r\n        </span>\r\n    );\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef();\r\n        const resolvedRef = ref || defaultRef;\r\n\r\n        React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate;\r\n        }, [resolvedRef, indeterminate]);\r\n\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n        );\r\n    }\r\n);\r\n\r\nfunction MyTable({ columns, data, handleUpload, department, date }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        selectedFlatRows,\r\n        state: { selectedRowIds },\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize,\r\n    } = useTable(\r\n        {\r\n            columns,\r\n            data,\r\n            initialState: { pageSize: 50 },\r\n        },\r\n        useGlobalFilter,\r\n        usePagination,\r\n        useRowSelect\r\n        // (hooks) => {\r\n        //     hooks.visibleColumns.push((columns) => [\r\n        //         // Let's make a column for selection\r\n        //         {\r\n        //             // The header can use the table's getToggleAllRowsSelectedProps method\r\n        //             // to render a checkbox\r\n        //             // Header: ({ getToggleAllRowsSelectedProps }) => (\r\n        //             //     // <div>\r\n        //             //     //     <IndeterminateCheckbox\r\n        //             //     //         {...getToggleAllRowsSelectedProps()}\r\n        //             //     //     />\r\n        //             //     // </div>\r\n        //             // ),\r\n        //             // The cell can use the individual row's getToggleRowSelectedProps method\r\n        //             // to the render a checkbox\r\n        //             // Cell: ({ row }) => (\r\n        //             //     // <div>\r\n        //             //     //     <IndeterminateCheckbox\r\n        //             //     //         {...row.getToggleRowSelectedProps()}\r\n        //             //     //     />\r\n        //             //     // </div>\r\n        //             // ),\r\n        //         },\r\n        //         ...columns,\r\n        //     ]);\r\n        // }\r\n    );\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    marginTop: 20,\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        justifyContent: \"space-between\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Typography>RAINBOW LLC JORDAN</Typography>\r\n                </div>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20,\r\n                }}\r\n            >\r\n                <Typography>\r\n                    DEPARTMENT: {department.department_code}\r\n                </Typography>\r\n                <Typography>Date: {date}</Typography>\r\n                <Typography>OVER TIME SHEET</Typography>\r\n            </div>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20,\r\n                }}\r\n            >\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Typography>_____________</Typography>\r\n                    <Typography>SUPERVISOR</Typography>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Typography>_______________</Typography>\r\n                    <Typography>P.M SIGNATURE</Typography>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Typography>___________</Typography>\r\n                    <Typography>INCHARGE</Typography>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Typography>________________</Typography>\r\n                    <Typography>ADMINISTRATOR</Typography>\r\n                </div>\r\n\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        flexDirection: \"column\",\r\n                        marginTop: 20,\r\n                    }}\r\n                >\r\n                    <Typography>_________________</Typography>\r\n                    <Typography>GENERAL MANAGER</Typography>\r\n                </div>\r\n            </div>\r\n            <table\r\n                {...getTableProps()}\r\n                style={{ width: \"100%\", marginTop: 80 }}\r\n            >\r\n                <thead>\r\n                    {headerGroups.map((headerGroup) => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map((column) => (\r\n                                <th {...column.getHeaderProps()}>\r\n                                    {column.render(\"Header\")}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row);\r\n                        // console.log('row: ',row)\r\n                        return (\r\n                            <tr>\r\n                                {/* <td>{i+1}</td> */}\r\n                                {row.cells.map((cell) => {\r\n                                    return (\r\n                                        <td\r\n                                            style={{ textAlign: \"center\" }}\r\n                                            {...cell.getCellProps()}\r\n                                        >\r\n                                            {cell.render(\"Cell\")}\r\n                                        </td>\r\n                                    );\r\n                                })}\r\n                                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            {/* <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    marginTop: 20,\r\n                }}\r\n            >\r\n                <Typography>SUPERVISOR</Typography>\r\n                <Typography>INCHARGE</Typography>\r\n                <Typography>P.M SIGNATURE</Typography>\r\n                <Typography>ADMINISTRATOR</Typography>\r\n            </div> */}\r\n        </div>\r\n    );\r\n}\r\n\r\nclass ComponentToPrint extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { props: props };\r\n        console.log(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* <Grid container lg={12} md={12} sm={12} xs={12}>\r\n                    <table>\r\n                        <thead>\r\n                            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                                <tr>\r\n                                    {this.state.props.columns.map((column) => (\r\n                                        <th>{column.Header}</th>\r\n                                    ))}\r\n                                </tr>\r\n                            </Grid>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.props.data.map((worker) => (\r\n                                <Grid container lg={8} md={8} sm={8} xs={8}>\r\n                                    <tr>\r\n                                        {this.state.props.columns.map(\r\n                                            (column) => (\r\n                                                <td>\r\n                                                    {worker[column.accessor]}\r\n                                                </td>\r\n                                            )\r\n                                        )}\r\n                                    </tr>\r\n                                </Grid>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </Grid> */}\r\n\r\n                <MyTable\r\n                    columns={this.state.props.columns}\r\n                    data={this.state.props.data}\r\n                    handleUpload={this.state.props.handleUpload}\r\n                    date={this.state.props.date}\r\n                    department={this.state.props.department}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst SetTarget = React.forwardRef((props, ref) => {\r\n    // const [designations,setDesignations] = React.useState([])\r\n    var d = new Date();\r\n\r\n    const [deparments, setDepartments] = React.useState([]);\r\n    const [workers, setWorkers] = React.useState([]);\r\n    const [state, setState] = React.useState({});\r\n    const [loading, setLoading] = React.useState(false);\r\n    const [time, onChange] = React.useState(null);\r\n    const [date, setDate] = React.useState(moment().format(\"YYYY-MM-DD\"));\r\n    console.log(JSON.stringify(date));\r\n    const componentRef = useRef();\r\n\r\n    const handleUpload = (vals) => {\r\n        if (!time) {\r\n            props.enqueueSnackbar(\"Select target time first!\", {\r\n                variant: \"warning\",\r\n            });\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        let datetime = moment(time, \"HH:mm\").format(\"YYYY-MM-DD HH:mm\");\r\n        let keysArray = Object.keys(vals);\r\n        let arr = [];\r\n        for (let i = 0; i < keysArray.length; i++) {\r\n            console.log(workers[parseInt(keysArray[i])].worker_id);\r\n            arr.push(workers[parseInt(keysArray[i])].worker_id);\r\n        }\r\n        console.log(arr);\r\n        console.log(\r\n            \"rows: \",\r\n            arr,\r\n            \", time: \",\r\n            datetime,\r\n            \", department: \",\r\n            state.department.department_code\r\n        );\r\n        try {\r\n            let url =\r\n                api_endpoint +\r\n                `/Jordan/AttendanceSystem/updateTargetForWorkers.php`;\r\n            console.log(\"url: \", url);\r\n            // alert(url)\r\n            fetch(url, {\r\n                method: \"post\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    workers: arr,\r\n                    target: datetime,\r\n                }),\r\n            })\r\n                .then((res) => res.json())\r\n                .then((res) => {\r\n                    setLoading(false);\r\n                    console.log(\"res: \", res);\r\n                    if (res.Error_No === 0) {\r\n                        props.enqueueSnackbar(\r\n                            \"Successfully updated Target Time!\",\r\n                            {\r\n                                variant: \"info\",\r\n                            }\r\n                        );\r\n                    } else {\r\n                        if (typeof res.Error_Description === \"object\") {\r\n                            console.log(\"objecttypeee\");\r\n                            props.enqueueSnackbar(\r\n                                \"Error while saving target time!\",\r\n                                {\r\n                                    variant: \"info\",\r\n                                }\r\n                            );\r\n                        } else {\r\n                            props.enqueueSnackbar(res.Error_Description, {\r\n                                variant: \"info\",\r\n                            });\r\n                        }\r\n                    }\r\n                    //console.log('generate qrcode response',res)\r\n                    //setQrCode(res.code)\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"error while fetching\", err);\r\n                    props.enqueueSnackbar(\"Error while saving target time!\", {\r\n                        variant: \"info\",\r\n                    });\r\n                    setLoading(false);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in try catch\", err);\r\n            props.enqueueSnackbar(\"Error while saving target time!\", {\r\n                variant: \"info\",\r\n            });\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    const fetchWorkers = () => {\r\n        setWorkers([]);\r\n        try {\r\n            fetch(\r\n                api_endpoint +\r\n                    \"/Jordan/SPTS/worker/getTargetsWorkersForDepartment.php?department_id=\" +\r\n                    state.department.department_id +\r\n                    \"&&attendance_date=\" +\r\n                    date,\r\n                {\r\n                    method: \"post\",\r\n                }\r\n            )\r\n                .then((res) =>\r\n                    res.json().then((res) => {\r\n                        console.log(\"res departments\", res);\r\n                        if (res.Workers) {\r\n                            setWorkers(res.Workers);\r\n                        } else {\r\n                            props.enqueueSnackbar(\"No worker found!\", {\r\n                                variant: \"info\",\r\n                            });\r\n                        }\r\n                    })\r\n                )\r\n                .catch((err) => {\r\n                    console.log(\"err in fetch\", err);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in fetch\", err);\r\n        }\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            fetch(api_endpoint + \"/Jordan/SPTS/worker/getDepartments.php\")\r\n                .then((res) =>\r\n                    res.json().then((res) => {\r\n                        console.log(\"res departments\", res);\r\n                        setDepartments(res.Departments);\r\n                    })\r\n                )\r\n                .catch((err) => {\r\n                    console.log(\"err in fetch\", err);\r\n                });\r\n        } catch (err) {\r\n            console.log(\"err in fetch\", err);\r\n        }\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Grid\r\n                container\r\n                style={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                <Grid item lg={3} md={3} sm={6} xs={6} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={deparments}\r\n                        getOptionLabel={(option) => option.department_code}\r\n                        style={{ width: \"100%\" }}\r\n                        onChange={(e, v) =>\r\n                            setState({ ...state, department: v })\r\n                        }\r\n                        renderInput={(params) => (\r\n                            <TextField\r\n                                {...params}\r\n                                label=\"Department\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                            />\r\n                        )}\r\n                    />\r\n                    {/* <TextField name=\"department\" variant=\"outlined\" fullWidth label=\"Department\"/> */}\r\n                </Grid>\r\n                {state.department ? (\r\n                    <div\r\n                        style={{\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            marginLeft: 10,\r\n                        }}\r\n                    >\r\n                        <TextField\r\n                            id=\"date\"\r\n                            label=\"Date\"\r\n                            type=\"date\"\r\n                            defaultValue={date}\r\n                            onChange={(e) => {\r\n                                setDate(e.target.value);\r\n                            }}\r\n                            variant=\"outlined\"\r\n                            InputLabelProps={{\r\n                                shrink: true,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                ) : null}\r\n                {state.department ? (\r\n                    <>\r\n                        <Grid\r\n                            item\r\n                            lg={3}\r\n                            md={3}\r\n                            sm={6}\r\n                            xs={12}\r\n                            style={{ padding: 5 }}\r\n                        >\r\n                            <Button\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                style={{ color: \"#fff\", height: 55 }}\r\n                                onClick={fetchWorkers}\r\n                                fullWidth\r\n                            >\r\n                                fetch workers\r\n                            </Button>\r\n                        </Grid>\r\n                        {workers.length > 0 ? (\r\n                            <Grid\r\n                                item\r\n                                lg={3}\r\n                                md={3}\r\n                                sm={6}\r\n                                xs={12}\r\n                                style={{ padding: 5 }}\r\n                            >\r\n                                <ReactToPrint\r\n                                    trigger={() => (\r\n                                        <Button\r\n                                            color=\"primary\"\r\n                                            variant=\"contained\"\r\n                                            style={{\r\n                                                color: \"#fff\",\r\n                                                height: 55,\r\n                                            }}\r\n                                            onClick={fetchWorkers}\r\n                                            fullWidth\r\n                                        >\r\n                                            Print\r\n                                        </Button>\r\n                                    )}\r\n                                    content={() => componentRef.current}\r\n                                />\r\n                            </Grid>\r\n                        ) : null}\r\n                    </>\r\n                ) : null}\r\n            </Grid>\r\n\r\n            {workers.length > 0 ? (\r\n                <div>\r\n                    <div></div>\r\n                    <ComponentToPrint\r\n                        style={{ display: \"none\" }}\r\n                        ref={componentRef}\r\n                        columns={[\r\n                            {\r\n                                Header: \"Worker Code\",\r\n                                accessor: \"worker_code\",\r\n                            },\r\n                            {\r\n                                Header: \"Worker Name\",\r\n                                accessor: \"worker_name\",\r\n                            },\r\n                            {\r\n                                Header: \"In Time\",\r\n                                accessor: \"in_time\",\r\n                            },\r\n                            {\r\n                                Header: \"Out Time\",\r\n                                accessor: \"out_time\",\r\n                            },\r\n                            {\r\n                                Header: \"Overtime\",\r\n                                accessor: \"target\",\r\n                            },\r\n\r\n                            {\r\n                                Header: \"Worker Signature\",\r\n                                accessor: \"signature\",\r\n                            },\r\n                        ]}\r\n                        data={workers}\r\n                        date={date}\r\n                        handleUpload={handleUpload}\r\n                        department={state.department}\r\n                    />\r\n                    {/* <ComponentToPrint  ref={componentRef} props={workers} /> */}\r\n                    {/* <MyTable\r\n                        ref={componentRef}\r\n                        columns={[\r\n                            {\r\n                                Header: \"Worker Code\",\r\n                                accessor: \"worker_code\",\r\n                            },\r\n                            {\r\n                                Header: \"Worker Name\",\r\n                                accessor: \"worker_name\",\r\n                            },\r\n                        ]}\r\n                        data={workers}\r\n                        handleUpload={handleUpload}\r\n                    /> */}\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n});\r\n\r\nexport default withSnackbar(SetTarget);\r\n","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Worker\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination)\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                                                setModalVisible(true)\r\n                                                setModalValues(row.original)\r\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\r\n                {/* <td style={{textAlign:'center'}}>\r\n                    <InfoIcon color=\"primary\" style={{cursor:'pointer'}} onClick={()=>{\r\n                    setModalVisible(true)\r\n                    console.log('row',row)\r\n                    setModalValues(row.original)\r\n                }}/></td> */}\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            {/* <table {...getTableProps()} style={{width:'100%'}}>\r\n                \r\n                <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n                <tbody  {...getTableBodyProps()}>\r\n                {rows.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                        {row.cells.map(cell => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}\r\n\r\n                </tbody>\r\n            </table> */}\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                {/* <div>Go to page:</div>\r\n                <input\r\n                    type=\"number\"\r\n                    defaultValue={pageIndex + 1 || 1}\r\n                    onChange={e => {\r\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                        gotoPage(page)\r\n                    }}\r\n                /> */}\r\n                {/* <select\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                    }}\r\n                >\r\n                    {pageSizeOptions.map(pageSize => (\r\n             <option key={pageSize} value={pageSize}>\r\n               Show {pageSize}\r\n             </option>\r\n           ))}\r\n                </select> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst WorkersTable = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    const [designations,setDesignations] = React.useState([])\r\n    const [deparments,setDepartments] = React.useState([])\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    const [editState,setEditState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    React.useEffect(()=>{\r\n        console.log('modalValues',modalValues)\r\n        setEditState(modalValues)\r\n    },[modalValues])\r\n\r\n    const handleUpdate = () => {\r\n        console.log('editState',editState)\r\n        \r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/worker/updateWorker.php?worker_id=${editState.worker_id}&worker_code=${editState.worker_code}&worker_name=${editState.worker_name}&department_id=${editState.department_id}&department_code=${editState.department_code}&designator_id=${editState.designator_id}&designator_code=${editState.designator_code}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Updated Worker!', { \r\n                        variant: 'info',\r\n                    })\r\n                    fetchWorkers()\r\n                    setModalVisible(false)\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Updating Worker!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Updating Worker!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const fetchWorkers = () => {\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/SPTS/worker/getWorkers.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setTableValues(res.Workers)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchWorkers()\r\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDepartments.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res departments',res)\r\n            setDepartments(res.Departments)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res designations',res)\r\n            setDesignations(res.Designations)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid lg={6} md={6} sm={6} xs={6}>\r\n                    <TextField\r\n                        name='searchValue'\r\n                        variant=\"outlined\"\r\n                        label=\"Search Worker\"\r\n                        value={searchText}\r\n                        onChange={e => setSearchText(e.target.value)}\r\n                        fullWidth\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\">\r\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                            </InputAdornment>\r\n                        }}\r\n                    // endAdornment={\r\n                    //     <InputAdornment position=\"end\">\r\n                    //       <SearchIcon/>\r\n                    //     </InputAdornment>\r\n                    //   }\r\n                    />\r\n                </Grid>\r\n            </div> */}\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Worker</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField value={editState.worker_code} onChange={e => setEditState({...editState,worker_code:e.target.value})} name=\"workerId\" variant=\"outlined\" fullWidth label=\"Worker ID\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField value={editState.worker_name} onChange={e => setEditState({...editState,worker_name:e.target.value})} name=\"workerName\" variant=\"outlined\" fullWidth label=\"Worker Name\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Autocomplete\r\n                                            //id=\"combo-box-demo\"\r\n                                            options={deparments}\r\n                                            getOptionLabel={option => option.department_code}\r\n                                            style={{ width: '100%' }}\r\n                                            disabled={true}\r\n                                            //onChange={(e,v) => setState({...state,department:v})}\r\n                                            //defaultValue={departments.filter}\r\n                                            renderInput={params => (\r\n                                                <TextField {...params} label=\"Department\" variant=\"outlined\" fullWidth />\r\n                                            )}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Autocomplete\r\n                                        //id=\"combo-box-demo\"\r\n                                            options={designations}\r\n                                            getOptionLabel={option => option.designation_code}\r\n                                            style={{ width: '100%' }}\r\n                                            disabled={true}\r\n                                            //onChange={(e,v) => setState({...state,designation:v})}\r\n                                            renderInput={params => (\r\n                                                <TextField {...params} label=\"Designation\" variant=\"outlined\" fullWidth />\r\n                                            )}\r\n                                        />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        <MyTable columns={[\r\n                            {\r\n                                Header: 'Worker ID',\r\n                                accessor: 'worker_id',\r\n                            },\r\n                            {\r\n                                Header: 'Code',\r\n                                accessor: 'worker_code',\r\n                            },\r\n                            {\r\n                                Header: 'Name',\r\n                                accessor: 'worker_name',\r\n                            },\r\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\r\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\r\n                        //     <tr>\r\n                        //         <th>Worker ID</th>\r\n                        //         <th>Worker Code</th>\r\n                        //         <th>Name</th>\r\n                        //         <th style={{ width: '70px' }}></th>\r\n                        //     </tr>\r\n                        //     <tbody>\r\n                        //         {\r\n                        //             tableValues.map(v => (\r\n                        //                 <tr>\r\n                        //                     <td>{v.worker_id}</td>\r\n                        //                     <td>{v.worker_code}</td>\r\n                        //                     <td>{v.worker_name}</td>\r\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                        //                         setModalVisible(true)\r\n                        //                         setModalValues(v)\r\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\r\n                        //                 </tr>\r\n                        //             ))\r\n                        //         }\r\n                                \r\n                        //     </tbody>\r\n                        // </table>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(WorkersTable)","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport AddWorkers from \"../AddWorkers\";\r\nimport SetTarget from \"../Workers/SetTarget\";\r\nimport ViewTarget from \"../Workers/ViewTarget\";\r\nimport WorkersTable from \"../WorkersTable\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        \"aria-controls\": `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\nconst Workers = (props) => {\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: \"center\" }}>\r\n                <Typography variant=\"h6\">Workers</Typography>\r\n            </div>\r\n            <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n                <div style={{ width: \"100%\" }}>\r\n                    <AppBar\r\n                        position=\"static\"\r\n                        color=\"secondary\"\r\n                        style={{\r\n                            marginTop: 15,\r\n                            borderTopLeftRadius: 10,\r\n                            borderTopRightRadius: 10,\r\n                        }}\r\n                    >\r\n                        <Tabs\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            indicatorColor=\"#fff\"\r\n                            textColor=\"primary\"\r\n                            variant=\"fullWidth\"\r\n                            aria-label=\"full width tabs example\"\r\n                        >\r\n                            <Tab\r\n                                label=\"Add Workers\"\r\n                                {...a11yProps(0)}\r\n                                style={{\r\n                                    color: \"#fff\",\r\n                                    borderBottom:\r\n                                        value === 0 ? \"3px solid white\" : \"\",\r\n                                }}\r\n                            />\r\n                            <Tab\r\n                                label=\"Set Target\"\r\n                                {...a11yProps(1)}\r\n                                style={{\r\n                                    color: \"#fff\",\r\n                                    borderBottom:\r\n                                        value === 1 ? \"3px solid white\" : \"\",\r\n                                }}\r\n                            />\r\n                            <Tab\r\n                                label=\"View Workers\"\r\n                                {...a11yProps(2)}\r\n                                style={{\r\n                                    color: \"#fff\",\r\n                                    borderBottom:\r\n                                        value === 2 ? \"3px solid white\" : \"\",\r\n                                }}\r\n                            />\r\n                            <Tab\r\n                                label=\"View Target\"\r\n                                {...a11yProps(3)}\r\n                                style={{\r\n                                    color: \"#fff\",\r\n                                    borderBottom:\r\n                                        value === 3 ? \"3px solid white\" : \"\",\r\n                                }}\r\n                            />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel\r\n                        value={value}\r\n                        index={0}\r\n                        dir={theme.direction}\r\n                        style={{\r\n                            backgroundColor: \"#f6f6f6\",\r\n                            borderBottomLeftRadius: 10,\r\n                            borderBottomRightRadius: 10,\r\n                        }}\r\n                    >\r\n                        <AddWorkers />\r\n                    </TabPanel>\r\n                    <TabPanel\r\n                        value={value}\r\n                        index={1}\r\n                        dir={theme.direction}\r\n                        style={{\r\n                            backgroundColor: \"#f6f6f6\",\r\n                            borderBottomLeftRadius: 10,\r\n                            borderBottomRightRadius: 10,\r\n                        }}\r\n                    >\r\n                        <SetTarget />\r\n                    </TabPanel>\r\n                    <TabPanel\r\n                        value={value}\r\n                        index={2}\r\n                        dir={theme.direction}\r\n                        style={{\r\n                            backgroundColor: \"#f6f6f6\",\r\n                            borderBottomLeftRadius: 10,\r\n                            borderBottomRightRadius: 10,\r\n                        }}\r\n                    >\r\n                        <WorkersTable />\r\n                    </TabPanel>\r\n                    <TabPanel\r\n                        value={value}\r\n                        index={3}\r\n                        dir={theme.direction}\r\n                        style={{\r\n                            backgroundColor: \"#f6f6f6\",\r\n                            borderBottomLeftRadius: 10,\r\n                            borderBottomRightRadius: 10,\r\n                        }}\r\n                    >\r\n                        <ViewTarget />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Workers;\r\n","import React from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\n//import Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nconst AddOrders = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    const handleAdd = () => {\r\n        // console.log({ \r\n        //     worker_code: state.workerId, \r\n        //     worker_name: state.workerName, \r\n        //     designator_id:state.designation.designation_id,\r\n        //     designator_code:state.designation.designation_code,\r\n        //     department_id:state.department.department_id,\r\n        //     department_code:state.department.department_code\r\n        // })\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/order/insertOrder.php?buyer=${state.buyer}&style_code=${state.style}&color=${state.color}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Added Order!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding Order!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding Order!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.buyer} onChange={e => setState({...state,buyer:e.target.value})} name=\"buyer\" variant=\"outlined\" fullWidth label=\"Buyer\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.style} onChange={e => setState({...state,style:e.target.value})} name=\"style\" variant=\"outlined\" fullWidth label=\"Style\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.color} onChange={e => setState({...state,color:e.target.value})} name=\"color\" variant=\"outlined\" fullWidth label=\"Color\"/>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >Add Order</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddOrders)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Order\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination)\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td>\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst OrdersTable = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [deleteLoader, setDeleteLoader] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    const [editState, setEditState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n        console.log('modalValues', modalValues)\r\n        setEditState(modalValues)\r\n    }, [modalValues])\r\n\r\n    const handleUpdate = () => {\r\n        console.log('editState', editState)\r\n        //operation_id operation_code operation_description operation_smv\r\n        try {\r\n            let url = api_endpoint + `/Jordan/SPTS/order/updateOrder.php?order_id=${editState.order_id}&order_description=${editState.order_description}&otn=${editState.otn}&buyer=${editState.buyer_code}&style_code=${editState.style_code}&color=${editState.color}`;\r\n            console.log('url', url)\r\n            fetch(url, {\r\n                method: 'post',\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    setLoading(false)\r\n                    console.log('res: ', res)\r\n                    if (res.Error_No === 0) {\r\n                        props.enqueueSnackbar('Successfully Updated Order!', {\r\n                            variant: 'info',\r\n                        })\r\n                        fetchOrders()\r\n                        setModalVisible(false)\r\n                    } else {\r\n                        if (typeof res.Error_Description === 'object') {\r\n                            console.log('objecttypeee')\r\n                            props.enqueueSnackbar('Validation Errors!', {\r\n                                variant: 'info',\r\n                            })\r\n                        } else {\r\n                            props.enqueueSnackbar(res.Error_Description, {\r\n                                variant: 'info',\r\n                            })\r\n                        }\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching', err)\r\n                    setLoading(false)\r\n                    props.enqueueSnackbar('Error While Updating Order!', {\r\n                        variant: 'info',\r\n                    })\r\n                })\r\n        } catch (err) {\r\n            console.log('err in try catch', err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Updating Order!', {\r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleDelete = (record) => {\r\n\r\n        try {\r\n            setDeleteLoader(true)\r\n            setOpenBackdrop(true)\r\n            fetch(api_endpoint + `/Jordan/SPTS/order/closeOrder.php?order_id=${record.order_id}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    setDeleteLoader(false)\r\n                    setOpenBackdrop(false)\r\n                    console.log('delete response: ', res)\r\n                    if (res.Error_No === 0) {\r\n                        props.enqueueSnackbar('Successfully deleted order!', {\r\n                            variant: 'info',\r\n                        })\r\n                        fetchOrders()\r\n                    }\r\n                    //setTableValues(res.Orders)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setDeleteLoader(false)\r\n                    setOpenBackdrop(false)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setDeleteLoader(false)\r\n            setOpenBackdrop(false)\r\n            //setTableValues([])\r\n        }\r\n    }\r\n\r\n    const fetchOrders = () => {\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/SPTS/order/getOrders.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setTableValues(res.Orders)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchOrders()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        <MyTable columns={[\r\n                            {\r\n                                Header: 'Style',\r\n                                accessor: 'style_code',\r\n                            },\r\n                            {\r\n                                Header: 'Buyer',\r\n                                accessor: 'buyer_code',\r\n                            },\r\n                            {\r\n                                Header: 'Color',\r\n                                accessor: 'color',\r\n                            },\r\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop} />\r\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\r\n                        //     <tr>\r\n                        //         <th>Color</th>\r\n                        //         <th>Style</th>\r\n                        //         <th>Buyer</th>\r\n                        //         <th style={{ width: '70px' }}></th>\r\n                        //     </tr>\r\n                        //     <tbody>\r\n                        //         {\r\n                        //             tableValues.map(v => (\r\n                        //                 <tr>\r\n                        //                     <td>{v.color}</td>\r\n                        //                     <td>{v.style_code}</td>\r\n                        //                     <td>{v.buyer_code}</td>\r\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                        //                         setModalVisible(true)\r\n                        //                         setModalValues(v)\r\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                        //                         handleDelete(v); setOpenBackdrop(true); console.log('delete row: ', v);\r\n                        //                     }} style={{ cursor: 'pointer' }} /></td>\r\n                        //                 </tr>\r\n                        //             ))\r\n                        //         }\r\n\r\n                        //     </tbody>\r\n                            \r\n                        // </table>\r\n                }\r\n                <Backdrop open={openBackdrop}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(OrdersTable)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddOrders from '../AddOrders'\r\nimport OrdersTable from '../OrdersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst Orders = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Orders</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add Order\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"View Orders\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddOrders />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <OrdersTable />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Orders","import React from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\n//import Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\n\r\nconst AddOperations = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    const handleAdd = () => {\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/operation/insertOperation.php?operation_code=${state.operationCode}&operation_description=${state.operationDescription}&operation_smv=${state.operationSMV}&piece_rate=${state.pieceRate}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Added Operation!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding Operation!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding Operation!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.operationCode} onChange={e => setState({...state,operationCode:e.target.value})} name=\"operationCode\" variant=\"outlined\" fullWidth label=\"Operation Code\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.operationDescription} onChange={e => setState({...state,operationDescription:e.target.value})} name=\"operationDescription\" variant=\"outlined\" fullWidth label=\"Operation Description\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.operationSMV} type=\"number\" min={0} onChange={e => setState({...state,operationSMV:e.target.value})} name=\"operationSMV\" variant=\"outlined\" fullWidth label=\"Operation SMV\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.pieceRate} type=\"number\" min={0} onChange={e => setState({...state,pieceRate:e.target.value})} name=\"pieceRate\" variant=\"outlined\" fullWidth label=\"Piece Rate\"/>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >Add Operation</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddOperations)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Operation\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst OperationsTable = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    const [editState,setEditState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    React.useEffect(()=>{\r\n        console.log('modalValues',modalValues)\r\n        setEditState(modalValues)\r\n    },[modalValues])\r\n\r\n    const handleUpdate = () => {\r\n        console.log('editState',editState)\r\n        //operation_id operation_code operation_description operation_smv\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/operation/updateOperation.php?operation_id=${editState.operation_id}&operation_code=${editState.operation_code}&operation_description=${editState.operation_description}&operation_smv=${editState.operation_smv}&piece_rate=${editState.piece_rate}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Updated Operation!', { \r\n                        variant: 'info',\r\n                    })\r\n                    fetchOperations()\r\n                    setModalVisible(false)\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Updating Operation!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Updating Operation!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const fetchOperations = () => {\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/SPTS/operation/getOperations.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setTableValues(res.Operations)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchOperations()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid lg={6} md={6} sm={6} xs={6}>\r\n                    <TextField\r\n                        name='searchValue'\r\n                        variant=\"outlined\"\r\n                        label=\"Search Operation\"\r\n                        value={searchText}\r\n                        onChange={e => setSearchText(e.target.value)}\r\n                        fullWidth\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\">\r\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                            </InputAdornment>\r\n                        }}\r\n                    // endAdornment={\r\n                    //     <InputAdornment position=\"end\">\r\n                    //       <SearchIcon/>\r\n                    //     </InputAdornment>\r\n                    //   }\r\n                    />\r\n                </Grid>\r\n            </div> */}\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Operation</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"operationCode\" value={editState.operation_code} onChange={e => setEditState({...editState,operation_code:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation Code\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"operationDescription\" value={editState.operation_description} onChange={e => setEditState({...editState,operation_description:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation Description\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"operationSMV\" type=\"number\" value={editState.operation_smv} onChange={e => setEditState({...editState,operation_smv:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation SMV\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"pieceRate\" type=\"number\" value={editState.piece_rate} onChange={e => setEditState({...editState,piece_rate:e.target.value})} variant=\"outlined\" fullWidth label=\"Piece Rate\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        <MyTable columns={[\r\n                            {\r\n                                Header: 'Operation ID',\r\n                                accessor: 'operation_id',\r\n                            },\r\n                            {\r\n                                Header: 'Operation Code',\r\n                                accessor: 'operation_code',\r\n                            },\r\n                            {\r\n                                Header: 'Description',\r\n                                accessor: 'operation_description',\r\n                            },\r\n                            {\r\n                                Header: 'SMV',\r\n                                accessor: 'operation_smv',\r\n                            },\r\n                            {\r\n                                Header: 'Piece Rate',\r\n                                accessor: 'piece_rate',\r\n                            },\r\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\r\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\r\n                        //     <tr>\r\n                        //         <th>Operation Code</th>\r\n                        //         <th>operation Description</th>\r\n                        //         <th>Operation SMV</th>\r\n                        //         <th>Piece Rate</th>\r\n                        //         <th style={{ width: '70px' }}></th>\r\n                        //     </tr>\r\n                        //     <tbody>\r\n                        //         {\r\n                        //             tableValues.map(v => (\r\n                        //                 <tr>\r\n                        //                     <td>{v.operation_code}</td>\r\n                        //                     <td>{v.operation_description}</td>\r\n                        //                     <td>{v.operation_smv}</td>\r\n                        //                     <td>{v.piece_rate}</td>\r\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                        //                         setModalVisible(true)\r\n                        //                         setModalValues(v)\r\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\r\n                        //                 </tr>\r\n                        //             ))\r\n                        //         }\r\n                                \r\n                        //     </tbody>\r\n                        // </table>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(OperationsTable)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddOperation from '../AddOperation'\r\nimport OperationsTable from '../OperationsTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst Operations = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Operations</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add Operation\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"View Operations\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddOperation />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <OperationsTable />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Operations","import React from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst AddMarkers = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    const [sizes,setSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    const [deparments,setDepartments] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n        console.log('state',state)\r\n        if(state.style){\r\n            fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\r\n            .then(res => res.json()\r\n            .then(res => {\r\n                console.log('res colors',res)\r\n                setColors(res.Colors)\r\n            }))\r\n            .catch(err => {\r\n                console.log('err in fetch',err)\r\n            })\r\n\r\n        }\r\n    },[state.style])\r\n\r\n    React.useEffect(()=>{\r\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n        if(state.size){\r\n            setModalVisible(true)\r\n        }\r\n        \r\n    },[state.size])\r\n\r\n    const handleAppend = () => {\r\n        console.log('handleAppend',state.style,state.quantity)\r\n        setModalVisible(false)\r\n        setTableValues(s => [...s,{id:uuid(),size_id:state.size.size_id,size_code:state.size.size_code,quantity:state.quantity}])\r\n        setState({...state,size_id:null,size_code:null,quantity:null})\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        fetch(api_endpoint+'/Jordan/Cutting/Marker/getSizes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res sized',res)\r\n            setSizes(res.Sizes)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n        // fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\r\n        // .then(res => res.json()\r\n        // .then(res => {\r\n        //     console.log('res designations',res)\r\n        //     setDesignations(res.Designations)\r\n        // }))\r\n        // .catch(err => {\r\n        //     console.log('err in fetch',err)\r\n        // })\r\n\r\n    },[])\r\n\r\n    const handleAdd = () => {\r\n        // console.log({ \r\n        //     worker_code: state.workerId, \r\n        //     worker_name: state.workerName, \r\n        //     designator_id:state.designation.designation_id,\r\n        //     designator_code:state.designation.designation_code,\r\n        //     department_id:state.department.department_id,\r\n        //     department_code:state.department.department_code\r\n        // })\r\n        console.log('state: ',state)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${JSON.stringify(tableValues)}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Added Marker!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding Marker!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding Marker!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10}}>\r\n                        Enter Quantity\r\n                    </div>\r\n                    <div style={{padding:10}}>\r\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\r\n                    </div>\r\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\r\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\r\n                            Save Quantity\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,color:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={sizes}\r\n                        getOptionLabel={option => option.size_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,size:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th>Size</th>\r\n                                <th>Quantity</th>\r\n                                <th style={{ width: '40px' }}></th>\r\n                                {/* <th style={{ width: '70px' }}></th> */}\r\n                            </tr>\r\n                            {console.log('tableValues',tableValues)}\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>{v.size_code}</td>\r\n                                            <td>{v.quantity}</td>\r\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\r\n                                            }}/></td>\r\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                                                setModalVisible(true)\r\n                                                setModalValues(v)\r\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >Add Marker</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddMarkers)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Marker\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination)\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              <th style={{width:'40px'}}></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td style={{textAlign:'center'}}><InfoIcon color=\"primary\" style={{cursor:'pointer'}} onClick={()=>{\r\n                    setModalVisible(true)\r\n                    console.log('row',row)\r\n                    setModalValues(row.original)\r\n                }}/></td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            {/* <table {...getTableProps()} style={{width:'100%'}}>\r\n                \r\n                <thead>\r\n        {headerGroups.map(headerGroup => (\r\n          <tr {...headerGroup.getHeaderGroupProps()}>\r\n            {headerGroup.headers.map(column => (\r\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </thead>\r\n                <tbody  {...getTableBodyProps()}>\r\n                {rows.map((row, i) => {\r\n                    prepareRow(row)\r\n                    return (\r\n                        <tr {...row.getRowProps()}>\r\n                        {row.cells.map(cell => {\r\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                        })}\r\n                        </tr>\r\n                    )\r\n                    })}\r\n\r\n                </tbody>\r\n            </table> */}\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n                {/* <div>Go to page:</div>\r\n                <input\r\n                    type=\"number\"\r\n                    defaultValue={pageIndex + 1 || 1}\r\n                    onChange={e => {\r\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n                        gotoPage(page)\r\n                    }}\r\n                /> */}\r\n                {/* <select\r\n                    value={pageSize}\r\n                    onChange={e => {\r\n                        setPageSize(Number(e.target.value))\r\n                    }}\r\n                >\r\n                    {pageSizeOptions.map(pageSize => (\r\n             <option key={pageSize} value={pageSize}>\r\n               Show {pageSize}\r\n             </option>\r\n           ))}\r\n                </select> */}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst MarkersTable = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    // const [designations,setDesignations] = React.useState([])\r\n    const [sizes, setSizes] = React.useState([])\r\n    // const [deparments,setDepartments] = React.useState([])\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    const [editState, setEditState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    // React.useEffect(()=>{\r\n    //     console.log('modalValues',modalValues)\r\n    //     setEditState(modalValues)\r\n    // },[modalValues])\r\n    React.useEffect(() => {\r\n        console.log('modalValues', modalValues)\r\n        setLoading(true)\r\n        setEditState(modalValues)\r\n        if (modalValues) {\r\n\r\n            try {\r\n                let url = api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${modalValues.marker_id}`;\r\n                console.log('url', url)\r\n                fetch(url, {\r\n                    method: 'post',\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        console.log('res: ', res)\r\n                        setSizes(res.Sizes)\r\n                        setLoading(false)\r\n                        // if(res.Error_No===0){\r\n                        //     props.enqueueSnackbar('Successfully Updated Worker!', { \r\n                        //         variant: 'info',\r\n                        //     })\r\n                        //     //fetchWorkers()\r\n                        //     setModalVisible(false)\r\n                        // }else{\r\n                        //     if(typeof res.Error_Description==='object'){\r\n                        //         console.log('objecttypeee')\r\n                        //         props.enqueueSnackbar('Validation Errors!', { \r\n                        //             variant: 'info',\r\n                        //         })\r\n                        //     }else{\r\n                        //         props.enqueueSnackbar(res.Error_Description, { \r\n                        //             variant: 'info',\r\n                        //         })\r\n                        //     }\r\n                        // }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('error while fetching', err)\r\n                        setLoading(false)\r\n                        props.enqueueSnackbar('Error While Getting Styles!', {\r\n                            variant: 'info',\r\n                        })\r\n                    })\r\n            } catch (err) {\r\n                console.log('err in try catch', err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Fetching Styles!', {\r\n                    variant: 'info',\r\n                })\r\n            }\r\n        }\r\n    }, [modalValues])\r\n\r\n\r\n    const fetchMarkers = () => {\r\n\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/Cutting/Marker/getMarkers.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setTableValues(res.Markers)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n\r\n        fetchMarkers()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid lg={6} md={6} sm={6} xs={6}>\r\n                    <TextField\r\n                        name='searchValue'\r\n                        variant=\"outlined\"\r\n                        label=\"Search Worker\"\r\n                        value={searchText}\r\n                        onChange={e => setSearchText(e.target.value)}\r\n                        fullWidth\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\">\r\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                            </InputAdornment>\r\n                        }}\r\n                    // endAdornment={\r\n                    //     <InputAdornment position=\"end\">\r\n                    //       <SearchIcon/>\r\n                    //     </InputAdornment>\r\n                    //   }\r\n                    />\r\n                </Grid>\r\n            </div> */}\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        modalVisible ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\r\n                                {\r\n                                    loading === true ?\r\n                                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\r\n                                            <CircularProgress color='primary' />\r\n                                        </div>\r\n                                        :\r\n                                        <div container style={{ textAlign: 'center' }}>\r\n                                            {\r\n                                                sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\r\n                                            }\r\n                                        </div>\r\n                                }\r\n                                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        <MyTable columns={[\r\n                            {\r\n                                Header: 'Marker',\r\n                                accessor: 'marker_description',\r\n                            }\r\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(MarkersTable)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddMarkers from '../AddMarkers'\r\nimport MarkersTable from '../MarkersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst Marker = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Marker</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add Markers\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"View Markers\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddMarkers />\r\n                        {/* <div>asdf</div> */}\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        {/* <div>ghgk</div> */}\r\n                        <MarkersTable />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Marker","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\n//import './index.css'\r\nimport { api_endpoint,api_endpoint_warehouse } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter, useRowSelect } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    //const count = preGlobalFilteredRows.length\r\n\r\n    return (\r\n        <span>\r\n            <TextField\r\n                name='searchValue'\r\n                variant=\"outlined\"\r\n                label=\"Search\"\r\n                value={globalFilter || ''}\r\n                onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n                fullWidth\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                    </InputAdornment>\r\n                }}\r\n            />\r\n        </span>\r\n    )\r\n}\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n\r\n        React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n        )\r\n    }\r\n)\r\nfunction MyTable({ columns, data, handleUpload }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter, selectedRowIds },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    }, useGlobalFilter, usePagination, useRowSelect,\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n                // Let's make a column for selection\r\n                {\r\n                    id: 'selection',\r\n                    // The header can use the table's getToggleAllRowsSelectedProps method\r\n                    // to render a checkbox\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                    // The cell can use the individual row's getToggleRowSelectedProps method\r\n                    // to the render a checkbox\r\n                    Cell: ({ row }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                },\r\n                ...columns,\r\n            ])\r\n        })\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div style={{ width: '90%' }}>\r\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}>\r\n                <div style={{ width: 400 }}>\r\n                    <GlobalFilter\r\n                        preGlobalFilteredRows={preGlobalFilteredRows}\r\n                        globalFilter={globalFilter}\r\n                        setGlobalFilter={setGlobalFilter}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <table {...getTableProps()} style={{ width: '100%' }}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                            {/* <th></th> */}\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {/* <td>{i+1}</td> */}\r\n                                {row.cells.map(cell => {\r\n                                    return <td style={{ fontSize: 12 }} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n            {\r\n                Object.keys(selectedRowIds).length > 0 ?\r\n                    <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop: 20 }}>\r\n                            <Button fullWidth variant=\"contained\" color='primary' onClick={() => handleUpload(selectedRowIds)} style={{ color: '#fff', height: 55 }} >UPLOAD</Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    : null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddRollIssuance = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [invoiceNumbers, setInvoiceNumbers] = React.useState([])\r\n    const [departments, setDepartments] = React.useState([])\r\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState([])\r\n    // const [editState, setEditState] = React.useState({})\r\n    const [state, setState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    // React.useEffect(() => {\r\n    //     console.log('modalValues', modalValues)\r\n    //     setEditState(modalValues)\r\n    // }, [modalValues])\r\n\r\n    const handleFetch = () => {\r\n\r\n        console.log('state: ', state)\r\n        console.log('tableValues: ', tableValues)\r\n        setTableValues(null)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try {\r\n            let url = api_endpoint_warehouse + `/fetch/getIssuanceRollsForInvoiceID?invoiceID=${state.invoice ? state.invoice.InvoiceID : ''}`;\r\n            console.log('url', url)\r\n            fetch(url, {\r\n                method: 'get',\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    setLoading(false)\r\n                    console.log('res: ', res)\r\n                    if (res.Rolls) {\r\n                        setTableValues(res.Rolls)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching', err)\r\n                    setLoading(false)\r\n                    props.enqueueSnackbar('Failed to Fetch Packing List!', {\r\n                        variant: 'info',\r\n                    })\r\n                })\r\n        } catch (err) {\r\n            console.log('err in try catch', err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Fetch Packing List!', {\r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleUpload = async (args) => {\r\n        if (state.department) {\r\n            console.log('args', args, Object.keys(args), state.department.RouteID)\r\n            let keysArray = Object.keys(args)\r\n            let rolls = []\r\n            setLoading(true)\r\n            for (let i = 0; i < keysArray.length; i++) {\r\n                rolls.push({\r\n                    ItemID: tableValues[parseInt(keysArray[i])].ItemID,\r\n                    RollLength: tableValues[parseInt(keysArray[i])].RollLength\r\n                })\r\n            }\r\n            console.log('rolls', rolls)\r\n            let obj = {\r\n                itemIDArray: rolls,\r\n                intentionRouteID: state.department.RouteID\r\n            }\r\n            console.log('obj ---> ', obj)\r\n            try {\r\n                let url = api_endpoint + `/Jordan/Warehouse/Issuance/insertDepartmentMovement.php`\r\n                //invoice_no=${state.invoice?state.invoice.invoice_code:''}\r\n                console.log('url', url)\r\n                fetch(url, {\r\n                    method: 'post',\r\n                    body: JSON.stringify(obj)\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(async res => {\r\n                        setLoading(false)\r\n                        console.log('response Roll Insertion: ', res)\r\n                        if (res.Error_No === 0) {\r\n                            props.enqueueSnackbar('Roll Intention Inserted successfully!', {\r\n                                variant: 'info',\r\n                            })\r\n                            let keys = []\r\n                            if (res.Responses && res.Responses.length > 0) {\r\n                                setModalValues(res.Responses)\r\n                                setModalVisible(true)\r\n                            }\r\n                            // await Promise.all(keysArray.map(kI => keys.push(tableValues[parseInt(kI)].item_id)))\r\n                            // console.log('keys => ',keys)\r\n                            // let tempTableValues = tableValues\r\n                            // for(let i=0;i<keys.length;i++){\r\n                            //     tempTableValues = tempTableValues.filter(tV => tV.item_id === keys[i])\r\n                            //     // tableValues[parseInt(keysArray[i])].item_id\r\n                            // }\r\n                            setTableValues([])\r\n\r\n                        } else {\r\n                            props.enqueueSnackbar('Failed to Insert roll!', {\r\n                                variant: 'info',\r\n                            })\r\n                        }\r\n                        // if(res.Packing_List){\r\n                        //     setTableValues(res.Packing_List)\r\n                        // }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('error while fetching', err)\r\n                        setLoading(false)\r\n                        props.enqueueSnackbar('Failed to Insert roll!', {\r\n                            variant: 'info',\r\n                        })\r\n                    })\r\n            } catch (err) {\r\n                console.log('err in try catch', err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Insert roll!', {\r\n                    variant: 'info',\r\n                })\r\n            }\r\n        } else {\r\n            props.enqueueSnackbar('Select Department First!', {\r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    const fetchInvoiceNumbers = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getIssuanceInvoices')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res.Invoices) {\r\n                        setInvoiceNumbers(res.Invoices)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            //setTableValues([])\r\n        }\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getRoutesForStockingOut')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res.Routes) {\r\n                        setDepartments(res.Routes)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            //setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchInvoiceNumbers()\r\n    }, [])\r\n    // React.useEffect(() => {\r\n    //     fetchPackingListForInvoice()\r\n    // }, [state.invoice])\r\n\r\n    return (\r\n        <>\r\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\r\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\r\n            <Dialog\r\n                open={modalVisible}\r\n                onBackdropClick={() => setModalVisible(false)}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        modalValues && modalValues.length > 0 ?\r\n                            <div style={{ width: '100%', textAlign: 'center', position: 'relative' }}>\r\n                                <CloseIcon color={'lightgrey'} size={25} style={{ position: 'absolute', top: 5, right: 5, cursor: 'pointer' }} onClick={() => setModalVisible(false)} />\r\n                                <Typography variant=\"h6\" color='primary' style={{ textAlign: 'center' }}>\r\n                                    Issuance Summary\r\n                            </Typography>\r\n                                <table style={{ width: '100%', marginTop: 15 }}>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th style={{ fontSize: 13 }}>Roll Rfid</th>\r\n                                            <th style={{ fontSize: 13 }}>Status</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            modalValues.map(mV => (\r\n                                                <tr>\r\n                                                    <td style={{ fontSize: 12 }}>{mV.item_id}</td>\r\n                                                    <td style={{ fontSize: 12 }}>{mV.Error_Description}</td>\r\n                                                </tr>\r\n                                            ))\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            : 'Nothing to Display'\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n\r\n            <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid item lg={4} md={4} sm={5} xs={5} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={invoiceNumbers}\r\n                        getOptionLabel={option => option.InvoiceCode}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => setState({ ...state, invoice: v })}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\r\n                    <Button fullWidth variant=\"contained\" color='primary' onClick={handleFetch} style={{ color: '#fff', height: '100%' }} >\r\n                        {\r\n                            loading === true ?\r\n                                <CircularProgress color={'#fff'} />\r\n                                :\r\n                                `Fetch`\r\n                        }\r\n                    </Button>\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={5} xs={5} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={departments}\r\n                        getOptionLabel={option => option.ToLocation}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => setState({ ...state, department: v })}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n                {\r\n                    // tableValues === null ?\r\n                    // <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                    //     <CircularProgress color='primary' />\r\n                    // </div>\r\n                    // :\r\n                    tableValues === null || tableValues.length === 0 ?\r\n                        null\r\n                        :\r\n                        <MyTable columns={[\r\n                            {\r\n                                Header: 'Rfid',\r\n                                accessor: 'TagID',\r\n                            },\r\n                            // {\r\n                            //     Header: 'ID',\r\n                            //     accessor: 'ItemID',\r\n                            // },\r\n                            {\r\n                                Header: 'Supplier',\r\n                                accessor: 'Supplier',\r\n                            },\r\n                            // {\r\n                            //     Header: 'Buyer',\r\n                            //     accessor: 'Buyer',\r\n                            // },\r\n                            {\r\n                                Header: 'Style',\r\n                                accessor: 'StyleCode',\r\n                            },\r\n                            {\r\n                                Header: 'Color',\r\n                                accessor: 'ColorCode',\r\n                            },\r\n                            {\r\n                                Header: 'Roll No',\r\n                                accessor: 'RollCode',\r\n                            },\r\n                            {\r\n                                Header: 'Fabric',\r\n                                accessor: 'FabricType',\r\n                            },\r\n                            {\r\n                                Header: 'Length',\r\n                                accessor: 'RollLength',\r\n                            },\r\n                            {\r\n                                Header: 'Net Weight',\r\n                                accessor: 'NetWeight',\r\n                            },\r\n                            {\r\n                                Header: 'Gross Weight',\r\n                                accessor: 'GrossWeight',\r\n                            },\r\n                        ]} data={tableValues} tableValues={tableValues} handleUpload={handleUpload}\r\n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\r\n                        />\r\n                }\r\n            </Grid>\r\n            <Backdrop open={openBackdrop}>\r\n                <CircularProgress color=\"inherit\" />\r\n            </Backdrop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddRollIssuance)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddRollIssuance from '../AddRollIssuance'\r\n// import MarkersTable from '../MarkersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst RollIssuance = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Roll Issuance</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add roll Issuance\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        {/* <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddRollIssuance/>\r\n                        {/* <div>asdf</div> */}\r\n                    </TabPanel>\r\n                    {/* <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <ViewPackingList/>\r\n                        <MarkersTable />\r\n                    </TabPanel> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default RollIssuance","import React from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst AddCutJob = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    const [sizes,setSizes] = React.useState([])\r\n    const [partNames,setPartNames] = React.useState([])\r\n    // const [styles,setStyles] = React.useState([])\r\n    // const [colors,setColors] = React.useState([])\r\n    // const [tableValues,setTableValues] = React.useState([])\r\n    const [markers,setMarkers] = React.useState([])\r\n\r\n    \r\n    React.useEffect(()=>{\r\n        fetchMarkers()\r\n        fetchPartNames()\r\n    },[])\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        if(state.marker){\r\n            //console.log('satte',state)\r\n            try {\r\n                fetch(api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${state.marker.marker_id}`)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        console.log(res)\r\n                        setSizes(res.Sizes)\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('err in fetching', err)\r\n                        setSizes([])\r\n                    })\r\n            } catch (err) {\r\n                console.log('try catch error: ', err)\r\n                setSizes([])\r\n            }\r\n        }\r\n\r\n    },[state.marker])\r\n\r\n    const fetchMarkers = () => {\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/Cutting/Marker/getMarkers.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setMarkers(res.Markers)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setMarkers([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setMarkers([])\r\n        }\r\n    }\r\n    const fetchPartNames = () => {\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/SPTS/cutReport/getPartNames.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if(res.Part_Names){\r\n                        setPartNames(res.Part_Names)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setMarkers([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setMarkers([])\r\n        }\r\n    }\r\n\r\n    const handleAdd = () => {\r\n\r\n        setLoading(true)\r\n        console.log('satet',state)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/Cutting/CutJob/insertCutJobForMarker.php?marker_id=${state.marker.marker_id}&no_of_layers=${state.no_of_layers}&cut_description=${state.cut_description}&part_name=${state.part_name}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Added Cut Job!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding Cut Job!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding Cut Job!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {/* <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10}}>\r\n                        Enter Quantity\r\n                    </div>\r\n                    <div style={{padding:10}}>\r\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\r\n                    </div>\r\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\r\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\r\n                            Save Quantity\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog> */}\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={markers}\r\n                        getOptionLabel={option => option.marker_description}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,marker:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Marker\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={sizes}\r\n                        getOptionLabel={option => option.size_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,size:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid> */}\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField name='cut_description' variant=\"outlined\" label=\"Cut Description\" values={state.cut_description} onChange={e=>setState({...state,cut_description:e.target.value})} fullWidth />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField name='no_of_layers' variant=\"outlined\" label=\"No Of Layers\" values={state.no_of_layers} onChange={e=>setState({...state,no_of_layers:e.target.value})} fullWidth />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={partNames}\r\n                        getOptionLabel={option => option.part_name}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => {if(v){setState({...state,part_name:v.part_name})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Part Name\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                    {/* <TextField name='part_name' variant=\"outlined\" label=\"Part Name\" values={state.part_name} onChange={e=>setState({...state,part_name:e.target.value})} fullWidth /> */}\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >Add Cut job</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddCutJob)","import React from 'react'\r\nimport { Grid, TextField, Button, Typography } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst ExecuteCutJob = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    // const [sizes,setSizes] = React.useState([])\r\n    // const [styles,setStyles] = React.useState([])\r\n    // const [colors,setColors] = React.useState([])\r\n    // const [tableValues,setTableValues] = React.useState([])\r\n    const [cutJobs,setCutJobs] = React.useState([])\r\n\r\n    \r\n    React.useEffect(()=>{\r\n        fetchCutJobs()\r\n    },[])\r\n\r\n    // React.useEffect(()=>{\r\n        \r\n    //     if(state.marker){\r\n    //         //console.log('satte',state)\r\n    //         try {\r\n    //             fetch(api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${state.marker.marker_id}`)\r\n    //                 .then(res => res.json())\r\n    //                 .then(res => {\r\n    //                     console.log(res)\r\n    //                     setSizes(res.Sizes)\r\n    //                 })\r\n    //                 .catch(err => {\r\n    //                     console.log('err in fetching', err)\r\n    //                     setSizes([])\r\n    //                 })\r\n    //         } catch (err) {\r\n    //             console.log('try catch error: ', err)\r\n    //             setSizes([])\r\n    //         }\r\n    //     }\r\n\r\n    // },[state.marker])\r\n\r\n    const fetchCutJobs = () => {\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/Cutting/CutJob/getCutJobs.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if(res.CutJobs){\r\n                        setCutJobs(res.CutJobs)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setCutJobs([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setCutJobs([])\r\n        }\r\n    }\r\n\r\n    const handleAdd = () => {\r\n\r\n        setLoading(true)\r\n        console.log('satet',state)\r\n        try{\r\n            \r\n            let url = api_endpoint+`/Jordan/Cutting/CutJob/executeCutJob.php?cut_job_id=${state.cutJob.cut_job_id}&no_of_bundles=${state.no_of_bundles}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Executed Cut Job!', { \r\n                        variant: 'info',\r\n                    })\r\n                    setModalVisible(true)\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Executing Cut Job!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Executing Cut Job!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{width:200,padding:20,display:'flex',justifyContent:'center'}}>\r\n                    <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Cut Job Executed Successfully!</Typography>\r\n                </div>\r\n                <div style={{width:200,padding:'0px 20px',display:'flex',justifyContent:'center'}}>\r\n                    Cut Job ID: {state.cutJob?state.cutJob.cut_job_id:null}\r\n                    </div>\r\n                <div style={{width:200,padding:20,display:'flex',justifyContent:'center'}}>\r\n                    <Button style={{marginTop:20}} variant=\"contained\" fullWidth onClick={()=>setModalVisible(false)}>Okay</Button>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={cutJobs}\r\n                        getOptionLabel={option => option.cut_job_description}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,cutJob:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Cut Job\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField name='no_of_bundles' variant=\"outlined\" label=\"No Of Bundles\" values={state.no_of_bundles} onChange={e=>setState({...state,no_of_bundles:e.target.value})} fullWidth />\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >Execute Cut Job</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(ExecuteCutJob)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddCutJob from '../AddCutJob'\r\nimport ExecuteCutJob from '../ExecuteCutJob'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst CutJob = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Cut Job</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add Cut Job\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"Execute Cut Job\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddCutJob />\r\n                        \r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <ExecuteCutJob />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CutJob","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search\"\r\n            style={{marginTop:30}}\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data,handleDelete }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td style={{ textAlign: 'center' }}>\r\n                    <DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={() => handleDelete(row.original)} />\r\n                </td>\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CutReportTable = props => {\r\n\r\n    // const [searchText, setSearchText] = React.useState('')\r\n    // const [designations,setDesignations] = React.useState([])\r\n    const [styles, setStyles] = React.useState([])\r\n    const [count, setCount] = React.useState(null)\r\n    const [colors, setColors] = React.useState([])\r\n    // const [deparments,setDepartments] = React.useState([])\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [state, setState] = React.useState({})\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    // const [editState,setEditState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    React.useEffect(() => {\r\n\r\n        if (state.style) {\r\n            try {\r\n                fetch(api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style.style_code}`)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        console.log(res)\r\n                        setColors(res.Colors)\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('err in fetching', err)\r\n                        setColors([])\r\n                    })\r\n            } catch (err) {\r\n                console.log('try catch error: ', err)\r\n                setColors([])\r\n            }\r\n        }\r\n\r\n\r\n    }, [state.style])\r\n\r\n\r\n    const handleFetch = () => {\r\n        setCount(null)\r\n        console.log('Stat', state)\r\n        setLoading(true)\r\n        let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutReportForOrder.php?order_id=${state.color.order_id}`;\r\n        console.log('url', url)\r\n        try {\r\n            fetch(url)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res.Cut_Report) {\r\n                        setTableValues(res.Cut_Report)\r\n                        setCount(res.Cut_Report.length)\r\n                        setLoading(false)\r\n                    } else {\r\n                        setTableValues([])\r\n                        setLoading(false)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setTableValues([])\r\n                    setLoading(false)\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setTableValues([])\r\n            setLoading(false)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        try {\r\n            //fetch(api_endpoint + '/Jordan/SPTS/style/getUploadedStyleCodes.php')\r\n            fetch(api_endpoint + '/Jordan/SPTS/order/getStyleCodes.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setStyles(res.Styles)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setStyles([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setStyles([])\r\n        }\r\n        //fetchMarkers()\r\n\r\n    }, [])\r\n\r\n    const handleDelete = (record) => {\r\n        console.log('record: ', record)\r\n        alert('In progress!')\r\n        // let url = api_endpoint + `/Jordan/SPTS/cutReport/deleteBundles.php?bundle_ids=${record.bundle_id}`;\r\n        // console.log('url',url)\r\n        // try {\r\n        //     fetch(url,{\r\n        //         method:'post'\r\n        //     })\r\n        //         .then(res => res.json())\r\n        //         .then(res => {\r\n        //             console.log(res)\r\n        //             if(res.Cut_Report){\r\n        //                 setTableValues(res.Cut_Report)\r\n        //                 setLoading(false)\r\n        //             }else{\r\n        //                 setTableValues([])\r\n        //                 setLoading(false)\r\n        //             }\r\n        //         })\r\n        //         .catch(err => {\r\n        //             console.log('err in fetching', err)\r\n        //             setTableValues([])\r\n        //             setLoading(false)\r\n        //         })\r\n        //     } catch (err) {\r\n        //         console.log('try catch error: ', err)\r\n        //         setTableValues([])\r\n        //         setLoading(false)\r\n        // }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                <Grid lg={5} md={5} sm={5} xs={5} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => setState({ ...state, style: v })}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid lg={5} md={5} sm={5} xs={5} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => setState({ ...state, color: v })}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\r\n                    <Button variant=\"contained\" color='primary' style={{ width: '100%', height: 55, color: '#fff' }} onClick={handleFetch}>\r\n                        {\r\n                            loading===true?\r\n                            <CircularProgress color={'#fff'}/>\r\n                            :`Fetch`\r\n                        }\r\n                    </Button>\r\n                </Grid>\r\n                {/* <Grid lg={6} md={6} sm={6} xs={6}>\r\n                    <TextField\r\n                        name='searchValue'\r\n                        variant=\"outlined\"\r\n                        label=\"Search Worker\"\r\n                        value={searchText}\r\n                        onChange={e => setSearchText(e.target.value)}\r\n                        fullWidth\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\">\r\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                            </InputAdornment>\r\n                        }}\r\n                    // endAdornment={\r\n                    //     <InputAdornment position=\"end\">\r\n                    //       <SearchIcon/>\r\n                    //     </InputAdornment>\r\n                    //   }\r\n                    />\r\n                </Grid> */}\r\n            </div>\r\n            {/* <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        modalVisible ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\r\n                                {\r\n                                    loading === true?\r\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\r\n                                        <CircularProgress color='primary'/>\r\n                                    </div>\r\n                                    :\r\n                                    <div container style={{textAlign:'center'}}>\r\n                                        {\r\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog> */}\r\n            {\r\n                tableValues === null ?\r\n                    null\r\n                    :\r\n                    <>\r\n                    {\r\n                        count !== null?\r\n                        <Grid lg={12} md={12} sm={12} xs={12} style={{paddingTop:15,marginTop:15}}>\r\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\r\n                                No Of Cuts: {count}\r\n                            </Typography>\r\n\r\n                        </Grid>\r\n                        :null\r\n                    }\r\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                        {\r\n                            loading === true ?\r\n                                <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                                    <CircularProgress color='primary' />\r\n                                </div>\r\n                                :\r\n                                 <MyTable columns={[\r\n                                        {\r\n                                            Header: 'Cut',\r\n                                            accessor: 'cut_code',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Bundle',\r\n                                            accessor: 'bundle_code',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Piece Size',\r\n                                            accessor: 'piece_size',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Color',\r\n                                            accessor: 'color',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Qty',\r\n                                            accessor: 'quantity',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Pay Order',\r\n                                            accessor: 'pay_order_code',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Seq Start',\r\n                                            accessor: 'seq_start',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Seq End',\r\n                                            accessor: 'seq_end',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Part Name',\r\n                                            accessor: 'part_name',\r\n                                        },\r\n                                        {\r\n                                            Header: 'Remarks',\r\n                                            accessor: 'remarks',\r\n                                        },\r\n                                    ]} data={tableValues} tableValues={tableValues} handleDelete={handleDelete} />\r\n\r\n                                // <table style={{ height: 400, overflowY: 'scroll' }}>\r\n                                //     <tr>\r\n                                //         {/* <th style={{ width: '40px' }}></th> */}\r\n                                //         <th>OTN</th>\r\n                                //         <th>Cut</th>\r\n                                //         <th>Bundle</th>\r\n                                //         <th>Piece Size</th>\r\n                                //         <th>Color</th>\r\n                                //         <th>Quantity</th>\r\n                                //         <th>Seq Start</th>\r\n                                //         <th>Seq End</th>\r\n                                //         <th>Part Name</th>\r\n                                //         <th style={{ width: '40px' }}></th>\r\n                                //         {/* <th style={{ width: '70px' }}></th> */}\r\n                                //     </tr>\r\n                                //     <tbody>\r\n                                //         {\r\n                                //             tableValues && tableValues.map((v, i) => (\r\n                                //                 <tr>\r\n                                //                     <td>{v.otn}</td>\r\n                                //                     <td>{v.cut_code}</td>\r\n                                //                     <td>{v.bundle_code}</td>\r\n                                //                     <td>{v.piece_size}</td>\r\n                                //                     <td>{v.color}</td>\r\n                                //                     <td>{v.quantity}</td>\r\n                                //                     <td>{v.seq_start}</td>\r\n                                //                     <td>{v.seq_end}</td>\r\n                                //                     <td>{v.part_name}</td>\r\n                                                    \r\n                                //                 </tr>\r\n                                //             ))\r\n                                //         }\r\n\r\n                                //     </tbody>\r\n                                // </table>\r\n                        }\r\n                    </div>\r\n                    </>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(CutReportTable)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search\"\r\n            style={{marginTop:30}}\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data}) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              {/* <th></th> */}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                {/* <td style={{ textAlign: 'center' }}>\r\n                    <DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={() => handleDelete(row.original)} />\r\n                </td> */}\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst CutReportMappingTable = props => {\r\n\r\n    // const [searchText, setSearchText] = React.useState('')\r\n    // const [designations,setDesignations] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [colors,setColors] = React.useState([])\r\n    // const [deparments,setDepartments] = React.useState([])\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [state, setState] = React.useState({})\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    // const [editState,setEditState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    React.useEffect(()=>{\r\n\r\n        if(state.style){\r\n            try {\r\n                fetch(api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style.style_code}`)\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        console.log(res)\r\n                        setColors(res.Colors)\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('err in fetching', err)\r\n                        setColors([])\r\n                    })\r\n            } catch (err) {\r\n                console.log('try catch error: ', err)\r\n                setColors([])\r\n            }\r\n        }\r\n\r\n\r\n    },[state.style])\r\n    \r\n    const handleFetch = () => {\r\n        console.log('Stat',state)\r\n        setLoading(true)\r\n        let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutReportMappingForOrder.php?order_id=${state.color.order_id}`;\r\n        console.log('url',url)\r\n        try {\r\n                    fetch(url)\r\n                        .then(res => res.json())\r\n                        .then(res => {\r\n                            console.log(res)\r\n                            if(res.Cut_Report){\r\n                                setTableValues(res.Cut_Report)\r\n                                setLoading(false)\r\n                            }else{\r\n                                setTableValues([])\r\n                                setLoading(false)\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            console.log('err in fetching', err)\r\n                            setTableValues([])\r\n                            setLoading(false)\r\n                        })\r\n                    } catch (err) {\r\n                        console.log('try catch error: ', err)\r\n                        setTableValues([])\r\n                        setLoading(false)\r\n                }\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/SPTS/order/getStyleCodes.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setStyles(res.Styles)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setStyles([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setStyles([])\r\n        }\r\n        \r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n            <Grid lg={5} md={5} sm={5} xs={5} style={{padding:5}}>\r\n                <Autocomplete\r\n                    //id=\"combo-box-demo\"\r\n                    options={styles}\r\n                    getOptionLabel={option => option.style_code}\r\n                    style={{ width: '100%' }}\r\n                    onChange={(e,v) => setState({...state,style:v})}\r\n                    renderInput={params => (\r\n                        <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                    )}\r\n                />\r\n            </Grid>\r\n            <Grid lg={5} md={5} sm={5} xs={5} style={{padding:5}}>\r\n                <Autocomplete\r\n                    //id=\"combo-box-demo\"\r\n                    options={colors}\r\n                    getOptionLabel={option => option.color}\r\n                    style={{ width: '100%' }}\r\n                    onChange={(e,v) => setState({...state,color:v})}\r\n                    renderInput={params => (\r\n                        <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                    )}\r\n                />\r\n            </Grid>\r\n            <Grid lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                <Button variant=\"contained\" color='primary' style={{width:'100%',height:55,color:'#fff'}} onClick={handleFetch}>\r\n                    {\r\n                        loading===true?\r\n                        <CircularProgress color={'#fff'}/>\r\n                        :`Fetch`\r\n                    }\r\n                </Button>\r\n            </Grid>\r\n                {/* <Grid lg={6} md={6} sm={6} xs={6}>\r\n                    <TextField\r\n                        name='searchValue'\r\n                        variant=\"outlined\"\r\n                        label=\"Search Worker\"\r\n                        value={searchText}\r\n                        onChange={e => setSearchText(e.target.value)}\r\n                        fullWidth\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\">\r\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                            </InputAdornment>\r\n                        }}\r\n                    // endAdornment={\r\n                    //     <InputAdornment position=\"end\">\r\n                    //       <SearchIcon/>\r\n                    //     </InputAdornment>\r\n                    //   }\r\n                    />\r\n                </Grid> */}\r\n            </div>\r\n            {/* <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        modalVisible ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\r\n                                {\r\n                                    loading === true?\r\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\r\n                                        <CircularProgress color='primary'/>\r\n                                    </div>\r\n                                    :\r\n                                    <div container style={{textAlign:'center'}}>\r\n                                        {\r\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog> */}\r\n            {\r\n                tableValues === null ?\r\n                null\r\n                :\r\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    {\r\n                        loading === true ?\r\n                            <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                                <CircularProgress color='primary' />\r\n                            </div>\r\n                            :\r\n                            <MyTable columns={[\r\n                                {\r\n                                    Header: 'Cut',\r\n                                    accessor: 'cut_code',\r\n                                },\r\n                                {\r\n                                    Header: 'Bundle',\r\n                                    accessor: 'bundle_code',\r\n                                },\r\n                                {\r\n                                    Header: 'Piece Size',\r\n                                    accessor: 'piece_size',\r\n                                },\r\n                                {\r\n                                    Header: 'Color',\r\n                                    accessor: 'color',\r\n                                },\r\n                                {\r\n                                    Header: 'Qty',\r\n                                    accessor: 'quantity',\r\n                                },\r\n                                {\r\n                                    Header: 'RFID',\r\n                                    accessor: 'rfid',\r\n                                },\r\n                                {\r\n                                    Header: 'Seq Start',\r\n                                    accessor: 'seq_start',\r\n                                },\r\n                                {\r\n                                    Header: 'Seq End',\r\n                                    accessor: 'seq_end',\r\n                                },\r\n                                {\r\n                                    Header: 'Part Name',\r\n                                    accessor: 'part_name',\r\n                                },\r\n                            ]} data={tableValues} tableValues={tableValues} />\r\n                            // <table style={{ height: 400, overflowY: 'scroll' }}>\r\n                            //     <tr>\r\n                            //         {/* <th style={{ width: '40px' }}></th> */}\r\n                            //         <th>OTN</th>\r\n                            //         <th>Cut</th>\r\n                            //         <th>Bundle</th>\r\n                            //         <th>RFID</th>\r\n                            //         <th>Piece Size</th>\r\n                            //         <th>Color</th>\r\n                            //         <th>Quantity</th>\r\n                            //         <th>Seq Start</th>\r\n                            //         <th>Seq End</th>\r\n                            //         <th>Part Name</th>\r\n                            //         {/* <th style={{ width: '70px' }}></th> */}\r\n                            //     </tr>\r\n                            //     <tbody>\r\n                            //         {\r\n                            //             tableValues && tableValues.map((v,i) => (\r\n                            //                 <tr>\r\n                            //                     <td>{v.otn}</td>\r\n                            //                     <td>{v.cut_code}</td>\r\n                            //                     <td>{v.bundle_code}</td>\r\n                            //                     <td>{v.rfid}</td>\r\n                            //                     <td>{v.piece_size}</td>\r\n                            //                     <td>{v.color}</td>\r\n                            //                     <td>{v.quantity}</td>\r\n                            //                     <td>{v.seq_start}</td>\r\n                            //                     <td>{v.seq_end}</td>\r\n                            //                     <td>{v.part_name}</td>\r\n                            //                     {/* <td style={{ textAlign: 'center' }}>\r\n                            //                     <InfoIcon color='primary' onClick={() => {\r\n                            //                         setModalVisible(true)\r\n                            //                         setModalValues(v)\r\n                            //                     }} style={{ cursor: 'pointer', marginRight: 15 }} />\r\n                            //                         <DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\r\n                            //                 </tr>\r\n                            //             ))\r\n                            //         }\r\n                                    \r\n                            //     </tbody>\r\n                            // </table>\r\n                    }\r\n                </div>\r\n\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(CutReportMappingTable)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport CutReportTable from '../CutReportTable'\r\nimport CutReportMappingTable from '../CutReportMappingTable'\r\n// import OrdersTable from '../OrdersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst CutReport = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Cut Report</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"View Cut Report\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"View Cut Report Mapping\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <CutReportTable />\r\n                        \r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <CutReportMappingTable />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CutReport","import React from 'react'\r\nimport { Grid, TextField, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport readXlsxFile from 'read-excel-file'\r\n\r\n\r\n\r\nconst AddStyleBulletin = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [spreadSheetButtonVisible, setSpreadSheetButtonVisible] = React.useState(false)\r\n    const [modalVisible2, setModalVisible2] = React.useState(false)\r\n    const [responses, setResponses] = React.useState([])\r\n    const [loading,setLoading] = React.useState(false)\r\n    //const [sizes,setSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [operations,setOperations] = React.useState([])\r\n    const [machineTypes,setMachineTypes] = React.useState([])\r\n    //const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    //const [deparments,setDepartments] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n        console.log('state',state)\r\n        // if(state.style){\r\n        //     fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\r\n        //     .then(res => res.json()\r\n        //     .then(res => {\r\n        //         console.log('res colors',res)\r\n        //         setColors(res.Colors)\r\n        //     }))\r\n        //     .catch(err => {\r\n        //         console.log('err in fetch',err)\r\n        //     })\r\n\r\n        // }\r\n    },[state.style])\r\n\r\n\r\n    const handleAppend = () => {\r\n        console.log('handleAppend',state)\r\n        setModalVisible(false)\r\n        setTableValues(s => [...s,{id:uuid(),operation_code:state.operation?state.operation.operation_code:'',operation_description:state.operation?state.operation.operation_description:'',operation_sequence:state.sequence,no_of_operators:state.noOfOperators,no_of_helpers:state.noOfHelpers,machine_type:state.machineType?state.machineType.machine_type:'',target:state.target,time_for_target:state.timeForTarget}])\r\n        //setState({...state,size_id:null,size_code:null,quantity:null})\r\n    }\r\n\r\n    const handleFileUpload = (e) => {\r\n        // setExcelLoading(true)\r\n        console.log('e ',e)\r\n        console.log('e.target.files ',e.target.files)\r\n        //setFilesState()\r\n        try{\r\n\r\n            readXlsxFile(e.target.files[0]).then(async (rows) => {\r\n                let arr = []\r\n                console.log('rows: ',rows)\r\n                for(let i=1; i<rows.length; i++){\r\n                    let obj = {\r\n                        operation_code:rows[i][0],\r\n                        operation_description:rows[i][1],\r\n                        operation_sequence:rows[i][2],\r\n                        no_of_operators:rows[i][3],\r\n                        machine_type:rows[i][4],\r\n                        target:rows[i][5],\r\n                        time_for_target:rows[i][6],\r\n                        no_of_helpers:rows[i][7],\r\n                        id:uuid()\r\n                    }\r\n                    arr.push(obj)\r\n                }\r\n                console.log('arr',arr)\r\n                setTableValues(arr)\r\n                // setExcelLoading(false)\r\n                // `rows` is an array of rows\r\n                // each row being an array of cells.\r\n              })\r\n        }catch(err){\r\n            console.log('errr',err)\r\n            // setExcelLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res operations',res)\r\n\r\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\r\n\r\n            setOperations(ops)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res machine Types',res)\r\n            // let s = await Promise.all(res.Machi.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description})))\r\n\r\n            // setOperations(ops)\r\n            setMachineTypes(res.machine_types)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        \r\n    },[])\r\n\r\n    const handleUpload = () => {\r\n        // console.log({ \r\n        //     worker_code: state.workerId, \r\n        //     worker_name: state.workerName, \r\n        //     designator_id:state.designation.designation_id,\r\n        //     designator_code:state.designation.designation_code,\r\n        //     department_id:state.department.department_id,\r\n        //     department_code:state.department.department_code\r\n        // })\r\n        console.log('state: ',state)\r\n        console.log('tableValues: ',tableValues)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/style/insertStyleBulletin.php`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n                body: JSON.stringify({styleBulletin:tableValues,style_code:state.style})\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Responses){\r\n                    setResponses(res.Responses)\r\n                    setModalVisible2(true)\r\n                }\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar(res.Error_Description?res.Error_Description:'Successfully Added Style Bulletin!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding Style Bulletin!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding Style Bulletin!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible2}\r\n            >\r\n                <div style={{ padding: 20, width: 543 }}>\r\n                    <div style={{padding:10,textAlign:'center'}}>\r\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Summary of Insertion</Typography>\r\n                    </div>\r\n                    <Grid container style={{padding:10}}>\r\n                        {\r\n                            responses && responses.length && responses.length>0?\r\n                            <table style={{width:'100%'}}>\r\n                                <tr>\r\n                                    <th>Style</th>\r\n                                    <th>Operation Code</th>\r\n                                    <th>Operation Desc</th>\r\n                                    <th>Operation Seq</th>\r\n                                    <th>Status</th>\r\n                                </tr>\r\n                                <tbody>\r\n                                    {\r\n                                        responses && responses.map(v => (\r\n                                            <tr>\r\n                                                <td>{v.style_code}</td>\r\n                                                <td>{v.operation_code}</td>\r\n                                                <td>{v.operation_description}</td>\r\n                                                <td>{v.operation_sequence}</td>\r\n                                                <td style={{color:v.Error_Description==='Failed'?'red':''}}>{v.Error_Description}</td>\r\n                                            </tr>\r\n                                        ))\r\n                                    }\r\n                                </tbody>\r\n                            </table>\r\n                            :null\r\n                        }\r\n                    \r\n                    </Grid>\r\n                        <div style={{display:'flex',justifyContent:'center'}}>\r\n                            <Button color='primary' fullWidth onClick={()=>setModalVisible2(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                                Okay\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n            </Dialog>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10,textAlign:'center'}}>\r\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Provide The Following Information For Style</Typography>\r\n                    </div>\r\n                    <Grid container style={{padding:10}}>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={operations}\r\n                                getOptionLabel={option => option.operation}\r\n                                style={{ width: '100%' }}\r\n                                onChange={(e,v) => setState({...state,operation:v})}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={machineTypes}\r\n                                getOptionLabel={option => option.machine_type}\r\n                                style={{ width: '100%' }}\r\n                                onChange={(e,v) => setState({...state,machineType:v})}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" values={state.sequence} onChange={e=>setState({...state,sequence:e.target.value})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" values={state.target} onChange={e=>setState({...state,target:e.target.value})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" values={state.timeForTarget} onChange={e=>setState({...state,timeForTarget:e.target.value})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" values={state.noOfOperators} onChange={e=>setState({...state,noOfOperators:e.target.value})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" values={state.noOfHelpers} onChange={e=>setState({...state,noOfHelpers:e.target.value})} fullWidth />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <div style={{display:'flex',justifyContent:'center'}}>\r\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            Okay\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => {if(v){setState({...state,style:v.style_code})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                    <Button variant=\"contained\" color='primary' onClick={()=>setModalVisible(true)} style={{height:55,color:'#fff'}} fulLWidth>\r\n                        Add\r\n                    </Button>\r\n                    {/* <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,color:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    /> */}\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5,justifyContent:'center',display:'flex'}}>\r\n                    <Typography variant=\"subtitle1\" color='primary' style={{cursor:'pointer',textAlign:'center',fontWeight:'700'}} onClick={()=>setSpreadSheetButtonVisible(!spreadSheetButtonVisible)}>Upload from Spreadsheet</Typography>\r\n                    {spreadSheetButtonVisible === true?\r\n                    <input type='file' style={{marginLeft:15}} onChange={handleFileUpload}/>\r\n                    :null\r\n                    }\r\n                </Grid>\r\n                    {/* {\r\n                        spreadSheetButtonVisible === true?\r\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5,justifyContent:'center',display:'flex'}}>\r\n                            <input type='file'/>\r\n                        </Grid>\r\n                        :null\r\n                    } */}\r\n                \r\n                \r\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\r\n                </Grid> */}\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th>Operation Code</th>\r\n                                <th>Operation Desc</th>\r\n                                <th>Operation Seq</th>\r\n                                <th>No. of Operators</th>\r\n                                <th>Machine Type</th>\r\n                                <th>Target</th>\r\n                                <th>Time For Target</th>\r\n                                <th>No. of Helpers</th>\r\n                                <th style={{ width: '40px' }}></th>\r\n                                {/* <th style={{ width: '70px' }}></th> */}\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>{v.operation_code}</td>\r\n                                            <td>{v.operation_description}</td>\r\n                                            <td>{v.operation_sequence}</td>\r\n                                            <td>{v.no_of_operators}</td>\r\n                                            <td>{v.machine_type}</td>\r\n                                            <td>{v.target}</td>\r\n                                            <td>{v.time_for_target}</td>\r\n                                            <td>{v.no_of_operators}</td>\r\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\r\n                                            }}/></td>\r\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                                                setModalVisible(true)\r\n                                                setModalValues(v)\r\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleUpload}\r\n                        fullWidth\r\n                    >{\r\n                        loading===true?\r\n                        <CircularProgress color='#fff'/>\r\n                        :`Upload Style Bulletin`   \r\n                    }</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddStyleBulletin)","import React from 'react'\r\nimport { Grid, TextField, Button,Backdrop,CircularProgress, Typography } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst ViewStyleBulletin = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [count, setCount] = React.useState(null)\r\n    const [somethingChanged, setSomethingChanged] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    //const [sizes,setSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [operations,setOperations] = React.useState([])\r\n    const [machineTypes,setMachineTypes] = React.useState([])\r\n    //const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    //const [deparments,setDepartments] = React.useState([])\r\n\r\n    // React.useEffect(()=>{\r\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n    //     console.log('state',state)\r\n    //     // if(state.style){\r\n    //     //     fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\r\n    //     //     .then(res => res.json()\r\n    //     //     .then(res => {\r\n    //     //         console.log('res colors',res)\r\n    //     //         setColors(res.Colors)\r\n    //     //     }))\r\n    //     //     .catch(err => {\r\n    //     //         console.log('err in fetch',err)\r\n    //     //     })\r\n\r\n    //     // }\r\n    // },[state.style])\r\n\r\n\r\n    // const handleAppend = () => {\r\n    //     console.log('handleAppend',state)\r\n    //     setModalVisible(false)\r\n    //     setTableValues(s => [...s,{id:uuid(),operation_code:state.operation.operation_code,operation_description:state.operation.operation_description,operation_sequence:state.sequence,no_of_operators:state.noOfOperators,no_of_helpers:state.noOfHelpers,machine_type:state.machineType.machine_description,target:state.target,time_for_target:state.timeForTarget}])\r\n    //     //setState({...state,size_id:null,size_code:null,quantity:null})\r\n    // }\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res operations',res)\r\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\r\n            setOperations(ops)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res machine Types',res)\r\n            setMachineTypes(res.machine_types)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n\r\n        \r\n    },[])\r\n\r\n    const handleDelete = (record) => {\r\n        console.log('toDelete:',record)\r\n        try {\r\n            let url = api_endpoint + `/Jordan/SPTS/style/deleteStyleBulletin.php?styleBulletin=${JSON.stringify({...record,Style_id:record.style_id})}`\r\n            console.log('url: ',url)\r\n            setOpenBackdrop(true)\r\n            fetch(url,{\r\n                method:'post'\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    setOpenBackdrop(false)\r\n                    console.log('delete response: ', res)\r\n                    if (res.Error_No === 0) {\r\n                        props.enqueueSnackbar('Successfully deleted style bulletin!', {\r\n                            variant: 'info',\r\n                        })\r\n                        handleFetch()\r\n                    }\r\n                    //setTableValues(res.Orders)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setOpenBackdrop(false)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setOpenBackdrop(false)\r\n            //setTableValues([])\r\n        }\r\n        // try{\r\n        //     let url = api_endpoint+`/Jordan/SPTS/style/deleteStyleBulletin.php?styleBulletin=${record}`;\r\n        //     console.log('url',url)\r\n        //     fetch(url,{\r\n        //         method: 'post',\r\n        //     })\r\n        //     .then(res => res.json())\r\n        //     .then(res => {\r\n        //         setLoading(false)\r\n        //         console.log('res: ',res)\r\n        //         setTableValues(res.Style_Bulletin)\r\n        //     })\r\n        //     .catch(err => {\r\n        //         console.log('error while fetching',err)\r\n        //         setLoading(false)\r\n        //         props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n        //             variant: 'info',\r\n        //         })\r\n        //     })\r\n        // }catch(err){\r\n        //     console.log('err in try catch',err)\r\n        //     setLoading(false)\r\n        //     props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n        //         variant: 'info',\r\n        //     })\r\n        // }\r\n    }\r\n    const handleUpdateTable = async () => {\r\n        // console.log('modalValues',modalValues)\r\n        // console.log('tableVlaue',tableValues)\r\n        let tempTable = await Promise.all(tableValues.map(v => {\r\n            if(v.style_id===modalValues.style_id){\r\n                return modalValues\r\n            }else{\r\n                return v\r\n            }\r\n        }))\r\n        console.log('newTable',tempTable)\r\n        setTableValues(tempTable)\r\n        setSomethingChanged(true)\r\n        setModalVisible(false)\r\n\r\n        //let \r\n\r\n    }\r\n\r\n    const handleUpdate = async () => {\r\n        console.log('tableValues',tableValues)\r\n        setLoading(true)\r\n        let table = await Promise.all(tableValues.map(t => ({...t,Style_id:t.style_id,target:t.order_target,time_for_target:t.allocated_time_for_target})))\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/style/updateStyleBulletin.php`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n                body: JSON.stringify({styleBulletin:table})\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                setTableValues([])\r\n                setSomethingChanged(false)\r\n                props.enqueueSnackbar('Updated Style Bulletin Successfully!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleFetch = () => {\r\n        setCount(null)\r\n\r\n        console.log('state: ',state)\r\n        console.log('tableValues: ',tableValues)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/style/getStyleBulletinForStyleCode.php?style_code=${state.style}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                setTableValues(res.Style_Bulletin)\r\n                setCount(res.Style_Bulletin.length)\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10}}>\r\n                        Update The Following Information For Style\r\n                    </div>\r\n                    {\r\n                        modalValues?\r\n                        <Grid container style={{padding:10}}>\r\n                            {\r\n                                console.log('modalValues ====> ',modalValues)\r\n                            }\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={operations}\r\n                                getOptionLabel={option => option.operation}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={()=>operations.filter(o => o.operation_code===modalValues.operation_code)[0]}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,operation_id:v.operation_id,operation_code:v.operation_code,operation_description:v.operation_description})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={machineTypes}\r\n                                getOptionLabel={option => option.machine_type}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={{machine_type:modalValues.machine_type}}\r\n                                //value={modalValues.machine_type}\r\n                                //defaultValue={() => machineTypes.filter(t => t.)}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,machine_type:v.machine_type})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" value={modalValues.operation_sequence} onChange={e=>setModalValues({...modalValues,operation_sequence:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" value={modalValues.order_target} onChange={e=>setModalValues({...modalValues,order_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" value={modalValues.allocated_time_for_target} onChange={e=>setModalValues({...modalValues,allocated_time_for_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" value={modalValues.no_of_operators} onChange={e=>setModalValues({...modalValues,no_of_operators:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" value={modalValues.no_of_helpers} onChange={e=>setModalValues({...modalValues,no_of_helpers:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                    }\r\n                    <div style={{display:'flex',justifyContent:'center'}}>\r\n                        <Button color='primary' fullWidth onClick={handleUpdateTable} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            {\r\n                                loading === true?\r\n                                <CircularProgress color={'#fff'}/>\r\n                                :\r\n                                `Update`\r\n                            }\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                    <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{height:55,color:'#fff'}} fullWidth>\r\n                        fetch\r\n                    </Button>\r\n                    \r\n                    {/* <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,color:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> */}\r\n                </Grid>\r\n                {/* <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                            <Button variant=\"contained\" color='primary' onClick={handleUpdate} style={{height:55,color:'#fff'}} fullWidth>\r\n                                Save changes\r\n                            </Button>\r\n                        </Grid> */}\r\n                {\r\n                        somethingChanged===true?\r\n                        <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                            <Button variant=\"contained\" color='primary' onClick={handleUpdate} style={{height:55,color:'#fff'}} fullWidth>\r\n                                {\r\n                                    loading===true?\r\n                                    <CircularProgress color={'#fff'}/>\r\n                                    :`Update`\r\n                                }\r\n                            </Button>\r\n                        </Grid>\r\n                        :null\r\n                    }\r\n                \r\n                \r\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\r\n                </Grid> */}\r\n                {\r\n                    count !== null?\r\n                    <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:15,marginTop:15}}>\r\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\r\n                                No Of Style Bulletin: {count}\r\n                            </Typography>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                }\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        loading===true?\r\n                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th>Operation Code</th>\r\n                                <th>Operation Desc</th>\r\n                                <th>Operation Seq</th>\r\n                                <th>No. of Operators</th>\r\n                                <th>Machine Type</th>\r\n                                <th>Target</th>\r\n                                <th>Time For Target</th>\r\n                                <th>No. of Helpers</th>\r\n                                <th></th>\r\n                                {/* <th style={{ width: '40px' }}></th> */}\r\n                                {/* <th style={{ width: '70px' }}></th> */}\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>{v.operation_code}</td>\r\n                                            <td>{v.operation_description}</td>\r\n                                            <td>{v.operation_sequence}</td>\r\n                                            <td>{v.no_of_operators}</td>\r\n                                            <td>{v.machine_type}</td>\r\n                                            <td>{v.order_target}</td>\r\n                                            <td>{v.allocated_time_for_target}</td>\r\n                                            <td>{v.no_of_helpers}</td>\r\n                                            <td><EditIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                                                setModalVisible(true)\r\n                                                setModalValues(v)\r\n                                                console.log('v',v)\r\n                                                //setTableValues(draft => draft.filter(d => d.id !== v.id))\r\n                                            }}/><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>handleDelete(v)} /></td>\r\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                                                setModalVisible(true)\r\n                                                setModalValues(v)\r\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                            <Backdrop open={openBackdrop}>\r\n                                <CircularProgress color=\"inherit\" />\r\n                            </Backdrop>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid>\r\n                {/* <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleUpload}\r\n                        fullWidth\r\n                    >Upload Style Bulletin</Button>\r\n                </Grid> */}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(ViewStyleBulletin)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddStyleBulletin from '../AddStyleBulletin'\r\nimport ViewStyleBulletin from '../ViewStyleBulletin'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst StyleBulletin = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Style Bulletin</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add Style Bulletin\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"View Style Bulletin\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddStyleBulletin/>\r\n                        \r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <ViewStyleBulletin />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StyleBulletin","import React from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\nimport { XYPlot, VerticalBarSeries,XAxis,YAxis } from 'react-vis'\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsiveBar = ({data}) => {\r\n    \r\n    console.log('data: ',data)\r\n    \r\n    return(\r\n        <div>\r\n            <XYPlot height={300} width={300} color=\"#418832\">\r\n            <XAxis\r\n                attr=\"x\"\r\n                attrAxis=\"y\"\r\n                orientation=\"bottom\"\r\n            />\r\n            <YAxis\r\n                attr=\"y\"\r\n                attrAxis=\"x\"\r\n                orientation=\"left\"\r\n            />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                    style={{}}\r\n                />\r\n            </XYPlot>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyResponsiveBar","import React from 'react'\r\nimport { Paper,Typography, Grid } from '@material-ui/core'\r\nimport LineWiseTotalProduction from '../LineWiseTotalProduction'\r\n\r\nconst data = [\r\n    {\r\n        x: 0,\r\n        y: 10\r\n    },\r\n    {\r\n        x: 1,\r\n        y: 11.248257034033035\r\n    },\r\n    {\r\n        x: 2,\r\n        y: 12.20577945795663\r\n    },\r\n    {\r\n        x: 3,\r\n        y: 12.801326795474443\r\n    },\r\n    {\r\n        x: 4,\r\n        y: 13.132807927572742\r\n    },\r\n    {\r\n        x: 5,\r\n        y: 15.841383594752223\r\n    },\r\n    {\r\n        x: 6,\r\n        y: 15.732741198841865\r\n    },\r\n    {\r\n        x: 7,\r\n        y: 13.287092723327687\r\n    },\r\n    {\r\n        x: 8,\r\n        y: 11.113246356017706\r\n    }\r\n    ]\r\n\r\nconst IECharts = props => {\r\n\r\n\r\n\r\n    return(<div style={{ padding: 20 }}>\r\n        <Paper style={{padding:20,backgroundColor:'#f6f6f6'}}>\r\n            <Grid container>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>Line Wise Total Production</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>WIP</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>Worker Wise Fault Monitoring</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n        </div>)\r\n}\r\n\r\nexport default IECharts","import React from 'react'\r\nimport { Grid, TextField, Button } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst AddPO = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    const [sizes,setSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    const [deparments,setDepartments] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n        console.log('state',state)\r\n        if(state.style){\r\n            fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\r\n            .then(res => res.json()\r\n            .then(res => {\r\n                console.log('res colors',res)\r\n                setColors(res.Colors)\r\n            }))\r\n            .catch(err => {\r\n                console.log('err in fetch',err)\r\n            })\r\n\r\n        }\r\n    },[state.style])\r\n\r\n    React.useEffect(()=>{\r\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n        if(state.size){\r\n            setModalVisible(true)\r\n        }\r\n        \r\n    },[state.size])\r\n\r\n    const handleAppend = () => {\r\n        console.log('handleAppend',state.style,state.quantity)\r\n        setModalVisible(false)\r\n        setTableValues(s => [...s,{id:uuid(),size_id:state.size.size_id,size_code:state.size.size_code,quantity:state.quantity}])\r\n        setState({...state,size_id:null,size_code:null,quantity:null})\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        fetch(api_endpoint+'/Jordan/Cutting/Marker/getSizes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res sized',res)\r\n            setSizes(res.Sizes)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n        // fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\r\n        // .then(res => res.json()\r\n        // .then(res => {\r\n        //     console.log('res designations',res)\r\n        //     setDesignations(res.Designations)\r\n        // }))\r\n        // .catch(err => {\r\n        //     console.log('err in fetch',err)\r\n        // })\r\n\r\n    },[])\r\n\r\n    const handleAdd = () => {\r\n        // console.log({ \r\n        //     worker_code: state.workerId, \r\n        //     worker_name: state.workerName, \r\n        //     designator_id:state.designation.designation_id,\r\n        //     designator_code:state.designation.designation_code,\r\n        //     department_id:state.department.department_id,\r\n        //     department_code:state.department.department_code\r\n        // })\r\n        console.log('state: ',state)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/Cutting/PO/insertPOAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&PO_code=${state.po_description}&size_mappings=${JSON.stringify(tableValues)}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    props.enqueueSnackbar('Successfully Added PO!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding PO!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding PO!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10}}>\r\n                        Enter Quantity\r\n                    </div>\r\n                    <div style={{padding:10}}>\r\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\r\n                    </div>\r\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\r\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\r\n                            Save Quantity\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,color:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={sizes}\r\n                        getOptionLabel={option => option.size_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,size:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\r\n                </Grid> */}\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.po_description} onChange={e => setState({...state,po_description:e.target.value})} name=\"poDescription\" variant=\"outlined\" fullWidth label=\"PO Description\"/>\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th>Size</th>\r\n                                <th>Quantity</th>\r\n                                <th style={{ width: '40px' }}></th>\r\n                                {/* <th style={{ width: '70px' }}></th> */}\r\n                            </tr>\r\n                            {console.log('tableValues',tableValues)}\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>{v.size_code}</td>\r\n                                            <td>{v.quantity}</td>\r\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\r\n                                            }}/></td>\r\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                                                setModalVisible(true)\r\n                                                setModalValues(v)\r\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >Add PO</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddPO)","import React from 'react'\r\nimport { Grid, TextField, Button, CircularProgress } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack'; \r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n\r\n\r\nconst EditPO = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n    const [sizeID,setSizeID] = React.useState([])\r\n    const [sizes,setSizes] = React.useState([])\r\n    const [selectivesizes,setSelectiveSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [colors,setColors] = React.useState([])\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState()\r\n    const [pos,setPOS] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    const [deparments,setDepartments] = React.useState([])\r\n\r\n    React.useEffect(()=>{\r\n        console.log('state',state)\r\n        if(state.po){\r\n            fetch(api_endpoint+`/Jordan/Cutting/PO/getPOdetailForPO.php?po_code=${state.po}`)\r\n            .then(res => res.json()\r\n            .then(res => {\r\n                setTableValues(res.poDetail);\r\n            }))\r\n            .catch(err => {\r\n                console.log('err in fetch',err)\r\n            })\r\n            fetch(api_endpoint+`/Jordan/Cutting/PO/getPOId.php?po_code=${state.po}`)\r\n            .then(res => res.json()\r\n            .then(res => {\r\n                console.log('PO res', res)\r\n                setState({...state,poid:res.POID.po_id})\r\n            }))\r\n            .catch(err => {\r\n                console.log('err in fetch',err)\r\n            })\r\n        }\r\n        \r\n    },[state.po,state.delete,state.update,state.add])\r\n\r\n    React.useEffect(()=>{\r\n        if(state.newsize){\r\n            fetch(api_endpoint+`/Jordan/Cutting/PO/getSizeID.php?size_code=${state.newsize}`)\r\n            .then(res => res.json()\r\n            .then(res => {\r\n                console.log('res size ID', res)\r\n                setState({...state,sizeid:res.SIZEID.size_id})\r\n            }))\r\n            .catch(err => {\r\n                console.log('err in fetch',err)\r\n            })\r\n\r\n        }\r\n    },[state.newsize])\r\n\r\n    React.useEffect(()=>{\r\n        if(state.po){\r\n            fetch(api_endpoint+`/Jordan/Cutting/PO/getSelectiveSizes.php?po_code=${state.po}`)\r\n            .then(res => res.json()\r\n            .then(res => {\r\n                console.log('res New Sizes',res)\r\n                setSelectiveSizes(res.Sizes)\r\n            }))\r\n            .catch(err => {\r\n                console.log('err in fetch',err)\r\n            })\r\n        }\r\n    },[state.po,state.add])\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        fetch(api_endpoint+'/Jordan/Cutting/PO/getPOlist.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res pos',res)\r\n            setPOS(res.PO)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        fetch(api_endpoint+'/Jordan/Cutting/Marker/getSizes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res sized',res)\r\n            setSizes(res.Sizes)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n\r\n    },[])\r\n\r\n    const handleDelete = (v) => {\r\n        console.log('state: ',state)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/Cutting/PO/deletePO.php?po_id=${state.poid}&quantity=${v.quantity}&size=${v.size_code}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No === 0){\r\n                    setState({...state,delete:!state.delete})\r\n                    props.enqueueSnackbar('Successfully Deleted PO!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Deleting PO!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Deleting PO!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n        // setState({...state, delete:false})\r\n    }\r\n    \r\n    const handleUpdate = async (size,quantity,psize) => {\r\n        try{\r\n            let url = api_endpoint+`/Jordan/Cutting/PO/updatePO.php?po_id=${state.poid}&size=${size}&quantity=${quantity}&pSize=${psize}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No === 0){\r\n                    setState({...state, update: !state.update})\r\n                    setModalVisible(false)\r\n                    props.enqueueSnackbar('Successfully Updated PO!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Updating PO!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Updating PO!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleUpdatePOCode = async (id,code) => {\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/Cutting/PO/updatePOCode.php?po_id=${id}&po_code=${code}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No === 0){\r\n                    props.enqueueSnackbar('Successfully Updated PO Code ..!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Updating PO Code ..!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Updating PO Code ..!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleAdd = (poid,pocode,sizeid,sizecode,quantity) => {\r\n        setLoading(true)\r\n        try{\r\n            pocode=pocode.trim().replace(/ /g, '%20');\r\n            // console.log('PO ID : ',poid,' --- PO Code : ',pocode,' --- SizeID : ',sizeid,' --- Size Code : ',sizecode,' --- Quantity : ',quantity)\r\n            let url = api_endpoint+`/Jordan/Cutting/PO/addPOSizeMappings.php?po_id=${poid}&po_code=${pocode}&size_id=${sizeid}&size_code=${sizecode}&quantity=${quantity}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.Error_No===0){\r\n                    setState({...state, add: !state.add})\r\n                    props.enqueueSnackbar('Successfully Added Size and Quantity!', { \r\n                        variant: 'info',\r\n                    })\r\n                }else{\r\n                    if(typeof res.Error_Description==='object'){\r\n                        console.log('objecttypeee')\r\n                        props.enqueueSnackbar('Validation Errors!', { \r\n                            variant: 'info',\r\n                        })\r\n                    }else{\r\n                        props.enqueueSnackbar(res.Error_Description, { \r\n                            variant: 'info',\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding Size and Quantity!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding Size and Quantity!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 500 }}>\r\n                    <div style={{padding:10}}>\r\n                        <h3>Update The Following Information For PO</h3>\r\n                    </div>\r\n                    {\r\n                        modalValues?\r\n                        <Grid container style={{padding:10}}>\r\n                            {\r\n                                console.log('modalValues ====> ',modalValues)\r\n                                //console.log(modalValues.size_code)\r\n                            }\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                            //id=\"combo-box-demo\"\r\n                            options={sizes}\r\n                            getOptionLabel={option => option.size_code}\r\n                            style={{ width: '100%' }}\r\n                            defaultValue={()=>sizes.filter(o => o.size_code===modalValues.size_code)[0]}\r\n                            onChange={(e,v) => setState({...state,size:v.size_code})}\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <div style={{padding:10}}>\r\n                                <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" value={modalValues.quantity} style={{marginTop:-10}} onChange={e=>setModalValues({...modalValues,quantity:e.target.value})} fullWidth />\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                    }\r\n                    <div style={{display:'flex',justifyContent:'center'}}>\r\n                        <Button color='primary' fullWidth onClick={()=>handleUpdate(state.size,modalValues.quantity,modalValues.size_code)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            {\r\n                                loading === true?\r\n                                <CircularProgress color={'#fff'}/>\r\n                                :\r\n                                `Update`\r\n                            }\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            Cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5, display:'flex' , justifyContent:'center'}}>\r\n                    <Autocomplete\r\n                        options={pos}\r\n                        getOptionLabel={option => option.po_code}\r\n                        onChange={(e,v) => setState({...state,po:v.po_code})}\r\n                        style={{ width: '100%' }}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Search PO\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5, width: '100%'}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={selectivesizes}\r\n                        //()=>sizes.filter(o => o.size_code!==(tableValues.map((v,i) => (v.size_code))))\r\n                        getOptionLabel={option => option.size_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,newsize:v.size_code})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <div style={{padding:10}}>\r\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" style={{marginTop:-10, width: '400px'}} onChange={e=>setModalValues({...modalValues,quantity:e.target.value})}  />\r\n                        <Button color='primary' onClick={()=> handleAdd(state.poid,state.po,state.sizeid,state.newsize,modalValues.quantity)} variant=\"contained\" style={{marginLeft: 10, marginTop: -10, padding: 15, color:'#fff'}}>Add</Button>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <hr/>\r\n            <Grid container>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding: 5, display:'flex' , justifyContent:'center'}}>\r\n                    <TextField name='RenamePO' type='text' variant=\"outlined\" value={state.po} onChange={e=>setState({...state,po:e.target.value})} fullWidth />\r\n                    <Button color='primary' onClick={()=> handleUpdatePOCode(state.poid,state.po)} variant=\"contained\" style={{margin:10, color:'#fff'}}>Update</Button>\r\n                </Grid>\r\n            </Grid>\r\n            <div>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        <table style={{overflowY: 'scroll' }}>\r\n                            <tr>\r\n                                <th style={{textAlign:'center'}}>Size</th>\r\n                                <th style={{textAlign:'center'}}>Quantity</th>\r\n                                <th style={{textAlign:'center'}}>Actions</th>\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues && tableValues.map((v,i) => (\r\n                                        <tr>\r\n                                            <td style={{textAlign:'center'}}>{v.size_code}</td>\r\n                                            <td style={{textAlign:'center'}}>{v.quantity}</td>\r\n                                            <td style={{textAlign:'center'}}>\r\n                                                <Button color='primary' onClick={()=>{\r\n                                                    setModalVisible(true)\r\n                                                    setModalValues(v)}} variant=\"contained\" style={{margin:10, color:'#fff'}}>\r\n                                                    Update\r\n                                                </Button>\r\n                                                <Button variant=\"contained\" onClick={()=>handleDelete(v)} style={{margin:10, backgroundColor:'#FF0000', color:'#fff'}}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                }\r\n            </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(EditPO)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\n\r\nconst POTable = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    // const [designations,setDesignations] = React.useState([])\r\n    const [sizes,setSizes] = React.useState([])\r\n    // const [deparments,setDepartments] = React.useState([])\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    const [editState,setEditState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    // React.useEffect(()=>{\r\n    //     console.log('modalValues',modalValues)\r\n    //     setEditState(modalValues)\r\n    // },[modalValues])\r\n    React.useEffect(()=>{\r\n        console.log('modalValues',modalValues)\r\n        setLoading(true)\r\n        setEditState(modalValues)\r\n        if(modalValues){\r\n\r\n            try{\r\n                let url = api_endpoint+`/Jordan/Cutting/PO/getSizesForPO.php?PO_id=${modalValues.po_id}`;\r\n                console.log('url',url)\r\n                fetch(url,{\r\n                    method: 'post',\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('res: ',res)\r\n                    setSizes(res.Sizes)\r\n                    setLoading(false)\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching',err)\r\n                    setLoading(false)\r\n                    props.enqueueSnackbar('Error While Getting Styles!', { \r\n                        variant: 'info',\r\n                    })\r\n                })\r\n            }catch(err){\r\n                console.log('err in try catch',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Fetching Styles!', { \r\n                    variant: 'info',\r\n                })\r\n            }\r\n        }\r\n    },[modalValues])\r\n\r\n    const fetchMarkers = () => {\r\n\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/Cutting/PO/getPO.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setTableValues(res.PO)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        \r\n        fetchMarkers()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            \r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        modalVisible ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\r\n                                {\r\n                                    loading === true?\r\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\r\n                                        <CircularProgress color='primary'/>\r\n                                    </div>\r\n                                    :\r\n                                    <div container style={{textAlign:'center'}}>\r\n                                        {\r\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        <table style={{overflowY: 'scroll' }}>\r\n                            <tr>\r\n                                <th style={{ width: '40px' }}></th>\r\n                                <th>PO</th>\r\n                                <th style={{ width: '40px' }}></th>\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues && tableValues.map((v,i) => (\r\n                                        <tr>\r\n                                            <td>{i+1}</td>\r\n                                            <td style={{textAlign:'center'}}>{v.po_code}</td>\r\n                                            <td style={{ textAlign: 'center' }}>\r\n                                            <InfoIcon color='primary' onClick={() => {\r\n                                                setModalVisible(true)\r\n                                                setModalValues(v)\r\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} />\r\n                                                {/* <DeleteIcon color='primary' style={{ cursor: 'pointer' }} /> */}\r\n                                                </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(POTable)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport InfoIcon from '@material-ui/icons/Info'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { api_endpoint } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\n\r\nconst POTable = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    // const [designations,setDesignations] = React.useState([])\r\n    const [sizes,setSizes] = React.useState([])\r\n    // const [deparments,setDepartments] = React.useState([])\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState(null)\r\n    const [editState,setEditState] = React.useState({})\r\n    const [loading,setLoading] = React.useState(false)\r\n\r\n    // React.useEffect(()=>{\r\n    //     console.log('modalValues',modalValues)\r\n    //     setEditState(modalValues)\r\n    // },[modalValues])\r\n    React.useEffect(()=>{\r\n        console.log('modalValues',modalValues)\r\n        setLoading(true)\r\n        setEditState(modalValues)\r\n        if(modalValues){\r\n\r\n            try{\r\n                let url = api_endpoint+`/Jordan/Cutting/PO/getSizesForPO.php?PO_id=${modalValues.po_id}`;\r\n                console.log('url',url)\r\n                fetch(url,{\r\n                    method: 'post',\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('res: ',res)\r\n                    setSizes(res.Sizes)\r\n                    setLoading(false)\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching',err)\r\n                    setLoading(false)\r\n                    props.enqueueSnackbar('Error While Getting Styles!', { \r\n                        variant: 'info',\r\n                    })\r\n                })\r\n            }catch(err){\r\n                console.log('err in try catch',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Fetching Styles!', { \r\n                    variant: 'info',\r\n                })\r\n            }\r\n        }\r\n    },[modalValues])\r\n\r\n    const fetchMarkers = () => {\r\n\r\n        try {\r\n            fetch(api_endpoint + '/Jordan/Cutting/PO/getPO.php')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    setTableValues(res.PO)\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        \r\n        fetchMarkers()\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\r\n                {\r\n                    tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        <table style={{overflowY: 'scroll' }}>\r\n                            <tr>\r\n                                <th style={{textAlign:'center'}}>Style</th>\r\n                                <th style={{textAlign:'center'}}>Color</th>\r\n                                <th style={{textAlign:'center'}}>Size</th>\r\n                                <th style={{textAlign:'center'}}>Quantity</th>\r\n                                <th style={{textAlign:'center'}}>PO Description</th>\r\n                                <th style={{textAlign:'center'}}>Actions</th>\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues && tableValues.map((v,i) => (\r\n                                        <tr>\r\n                                            <td style={{textAlign:'center'}}>{i+1}</td>\r\n                                            <td style={{textAlign:'center'}}>{v.po_code}</td>\r\n                                            <td style={{textAlign:'center'}}></td>\r\n                                            <td style={{textAlign:'center'}}>{i+1}</td>\r\n                                            <td></td>\r\n                                            <td style={{textAlign:'center'}}>\r\n                                                <Button color='primary' variant=\"contained\" style={{margin:10, color:'#fff'}}>\r\n                                                    Update\r\n                                                </Button>\r\n                                                <Button variant=\"contained\" style={{margin:10, backgroundColor:'#FF0000', color:'#fff'}}>\r\n                                                    Delete\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(POTable)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddPO from '../AddPO';\r\nimport EditPO from '../EditPO';\r\nimport POTable from '../POTable';\r\nimport EditPODetail from '../EditPODetail';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst PO = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">PO</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add PO\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"Edit PO\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}} />\r\n                        <Tab label=\"View PO\" {...a11yProps(2)} style={{color:'#fff',borderBottom:value===2?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddPO />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <EditPO />\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <POTable />\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PO","import React from 'react'\r\nimport { Grid, TextField, Button, CircularProgress,Typography } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst AssignPO = props => {\r\n\r\n    const [state, setState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n    const [styles, setStyles] = React.useState([])\r\n    const [colors, setColors] = React.useState([])\r\n    const [cuts, setCuts] = React.useState([])\r\n    const [pos, setPOs] = React.useState([])\r\n    const [bundles, setBundles] = React.useState([])\r\n    const [checked, setChecked] = React.useState(false);\r\n\r\n  const handleChange = event => {\r\n      console.log('check value: ',event.target.checked)\r\n    setChecked(event.target.checked);\r\n    if(event.target.checked===true){\r\n        setState({...state,bundle:bundles})\r\n    }else{\r\n        setState({...state,bundle:null})\r\n    }\r\n  };\r\n\r\n    const fetchStyles = () => {\r\n        try {\r\n            let url = api_endpoint + `/Jordan/SPTS/order/getStyleCodes.php`;\r\n            console.log('url', url)\r\n            fetch(url, {\r\n                method: 'get',\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('res: ', res)\r\n                    setStyles(res.Styles)\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching', err)\r\n                })\r\n        } catch (err) {\r\n            console.log('err in try catch', err)\r\n        }\r\n    }\r\n    const fetchPOs = () => {\r\n        try {\r\n            let url = api_endpoint + `/Jordan/Cutting/PO/getPO.php`;\r\n            console.log('url', url)\r\n            fetch(url, {\r\n                method: 'get',\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('res: ', res)\r\n                    if(res.PO){\r\n                        setPOs(res.PO)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching', err)\r\n                })\r\n        } catch (err) {\r\n            console.log('err in try catch', err)\r\n        }\r\n    }\r\n    // const handleSelectAll = () => {\r\n    //     //set\r\n    //     setState({...state,bundle:null})\r\n    //     console.log('state',state,bundles)\r\n    // }\r\n    const fetchColorsForStyleCodes = () => {\r\n        console.log('state', state)\r\n        try {\r\n            let url = api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`;\r\n            console.log('url', url)\r\n            fetch(url, {\r\n                method: 'get',\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('res: ', res)\r\n                    if(res.Colors){\r\n                        setColors(res.Colors)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching', err)\r\n                })\r\n        } catch (err) {\r\n            console.log('err in try catch', err)\r\n        }\r\n    }\r\n    const fetchCutForOrder = () => {\r\n        console.log('state', state)\r\n        try {\r\n            let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutsForOrder.php?order_id=${state.color.order_id}`;\r\n            console.log('url', url)\r\n            fetch(url, {\r\n                method: 'get',\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('res cut: ', res)\r\n                    if(res.Cuts){\r\n                        setCuts(res.Cuts)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching', err)\r\n                })\r\n        } catch (err) {\r\n            console.log('err in try catch', err)\r\n        }\r\n    }\r\n    const fetchBundleForCut = () => {\r\n        console.log('state', state)\r\n        try {\r\n            let url = api_endpoint + `/Jordan/SPTS/cutReport/getBundlesForOrderCut.php?order_id=${state.color.order_id}&cut_code=${state.cut.cut_code}`;\r\n            console.log('url', url)\r\n            fetch(url, {\r\n                method: 'get',\r\n            })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('res bundles: ', res)\r\n                    if(res.Bundles){\r\n                        setBundles(res.Bundles)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching', err)\r\n                })\r\n        } catch (err) {\r\n            console.log('err in try catch', err)\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchStyles()\r\n        fetchPOs()\r\n    }, [])\r\n    React.useEffect(() => {\r\n        if(state.style){\r\n            fetchColorsForStyleCodes()\r\n        }\r\n    }, [state.style])\r\n    React.useEffect(() => {\r\n        console.log('statte', state)\r\n        if(state.color){\r\n            fetchCutForOrder()\r\n        }\r\n    }, [state.color])\r\n    React.useEffect(() => {\r\n        console.log('statte', state)\r\n        if(state.cut){\r\n            fetchBundleForCut()\r\n        }\r\n    }, [state.cut])\r\n\r\n    const handleAdd = async () => {\r\n        console.log('state', state)\r\n        if(state.bundle){\r\n            setLoading(true)\r\n            const bundlesToSend = await Promise.all(state.bundle.map(b => ({bundle_id:b.bundle_id})))\r\n            console.log('bundlesToSend',bundlesToSend)\r\n            try{\r\n                    let url = api_endpoint+`/Jordan/Cutting/PO/assignPOtoBundle.php?PO_id=${state.po.po_id}&PO_code=${state.po.po_code}&remarks=${state.remarks}&bundle_mapping=${JSON.stringify(bundlesToSend)}`;\r\n                    console.log('url',url)\r\n                    fetch(url,{\r\n                        method: 'post',\r\n                    })\r\n                    .then(res => res.json())\r\n                    .then(res => {\r\n                        setLoading(false)\r\n                        console.log('res: ',res)\r\n                        if(res.Error_No===0){\r\n                            props.enqueueSnackbar('Successfully Added Order!', { \r\n                                variant: 'info',\r\n                            })\r\n                        }else{\r\n                            if(typeof res.Error_Description==='object'){\r\n                                console.log('objecttypeee')\r\n                                props.enqueueSnackbar('Validation Errors!', { \r\n                                    variant: 'info',\r\n                                })\r\n                            }else{\r\n                                props.enqueueSnackbar(res.Error_Description, { \r\n                                    variant: 'info',\r\n                                })\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        console.log('error while fetching',err)\r\n                        setLoading(false)\r\n                        props.enqueueSnackbar('Error While Adding Order!', { \r\n                            variant: 'info',\r\n                        })\r\n                    })\r\n                }catch(err){\r\n                    console.log('err in try catch',err)\r\n                    setLoading(false)\r\n                    props.enqueueSnackbar('Error While Adding Order!', { \r\n                        variant: 'info',\r\n                    })\r\n                }\r\n        }\r\n        // console.log({ \r\n        //     worker_code: state.workerId, \r\n        //     worker_name: state.workerName, \r\n        //     designator_id:state.designation.designation_id,\r\n        //     designator_code:state.designation.designation_code,\r\n        //     department_id:state.department.department_id,\r\n        //     department_code:state.department.department_code\r\n        // })\r\n        \r\n        // \r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Grid container>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                            <Autocomplete\r\n                                options={styles}\r\n                                getOptionLabel={option => option.style_code}\r\n                                style={{ width: '100%' }}\r\n                                onChange={(e, v) => {if(v){setState({ ...state, style: v.style_code })}else{setState({ ...state, style: v })}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                            <Autocomplete\r\n                                options={colors}\r\n                                getOptionLabel={option => option.color}\r\n                                style={{ width: '100%' }}\r\n                                onChange={(e, v) => setState({ ...state, color: v })}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                            <Autocomplete\r\n                                options={cuts}\r\n                                getOptionLabel={option => option.cut_code.toString()}\r\n                                style={{ width: '100%' }}\r\n                                onChange={(e, v) => setState({ ...state, cut: v })}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Cut\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                            </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                            <Autocomplete\r\n                                options={pos}\r\n                                getOptionLabel={option => option.po_code}\r\n                                style={{ width: '100%' }}\r\n                                onChange={(e, v) => setState({ ...state, po: v })}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"PO\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        {\r\n                            bundles && bundles.length > 0?\r\n                            <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\r\n                                <FormControlLabel\r\n                                    control={\r\n                                    <Checkbox checked={checked}\r\n                                    onChange={handleChange}\r\n                                    value=\"primary\"\r\n                                    inputProps={{ 'aria-label': 'primary checkbox' }} />\r\n                                    }\r\n                                    label=\"Select All Bundles\"\r\n                                />\r\n                            </Grid>\r\n                            :null\r\n                        }\r\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\r\n                            {\r\n                                checked === true?\r\n                                <Typography variant=\"subtitle\" color='primary' style={{marginBottom:10}}>* All Bundles Selected</Typography>\r\n                                :\r\n                                <Autocomplete\r\n                                    options={bundles}\r\n                                    multiple\r\n                                    disableCloseOnSelect\r\n                                    getOptionLabel={option => option.bundle_code}\r\n                                    style={{ width: '100%' }}\r\n                                    //value={state.bundle}\r\n                                    onChange={(e, v) => setState({ ...state, bundle: v })}\r\n                                    renderInput={params => (\r\n                                        <TextField {...params} label=\"Bundle\" variant=\"outlined\" fullWidth />\r\n                                    )}\r\n                                />\r\n                            }\r\n                        </Grid>\r\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\r\n                            <TextField\r\n                                variant=\"outlined\"\r\n                                multiline\r\n                                rows={2}\r\n                                fullWidth\r\n                                label=\"Remarks\"\r\n                                onChange={(e) => setState({ ...state, remarks: e.target.value })}\r\n                                // renderInput={params => (\r\n                                //     <TextField {...params} label=\"Bundle\" variant=\"outlined\" fullWidth />\r\n                                // )}\r\n                            />\r\n                        </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\r\n                    <Button\r\n                        color='primary'\r\n                        variant='contained'\r\n                        style={{ color: '#fff', height: '50px' }}\r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >{\r\n                        loading===true?\r\n                        <CircularProgress color={'#fff'} />\r\n                        :\r\n                        `Assign PO to Bundle`\r\n                    }</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AssignPO)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AssignPO from '../AssignPO'\r\n// import MarkersTable from '../MarkersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst AssignBundle = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Assign PO to Bundle</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Assign Bundle\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        {/* <Tab label=\"View Markers\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AssignPO />\r\n                        {/* <div>asdf</div> */}\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#fff',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        {/* <div>ghgk</div> */}\r\n                        {/* <MarkersTable /> */}\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default AssignBundle","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n//import './index.css'\r\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter,useRowSelect } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Rolls\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n      const defaultRef = React.useRef()\r\n      const resolvedRef = ref || defaultRef\r\n  \r\n      React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n      }, [resolvedRef, indeterminate])\r\n  \r\n      return (\r\n        <>\r\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n      )\r\n    }\r\n  )\r\n\r\nfunction MyTable({ columns, data, handleUpload }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        selectedFlatRows,\r\n    state: { selectedRowIds },\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination,useRowSelect,\r\n      hooks => {\r\n        hooks.visibleColumns.push(columns => [\r\n          // Let's make a column for selection\r\n          {\r\n            id: 'selection',\r\n            // The header can use the table's getToggleAllRowsSelectedProps method\r\n            // to render a checkbox\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n              </div>\r\n            ),\r\n            // The cell can use the individual row's getToggleRowSelectedProps method\r\n            // to the render a checkbox\r\n            Cell: ({ row }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n              </div>\r\n            ),\r\n          },\r\n          ...columns,\r\n        ])\r\n    })\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div >\r\n            <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\r\n              <div style={{width:300}}>\r\n                  <GlobalFilter\r\n                      preGlobalFilteredRows={preGlobalFilteredRows}\r\n                      globalFilter={globalFilter}\r\n                      setGlobalFilter={setGlobalFilter}\r\n                  />\r\n              </div>\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            // console.log('row: ',row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td style={{textAlign:'center'}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n            {\r\n                Object.keys(selectedRowIds).length > 0?\r\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\r\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                :null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StockIn = props => {\r\n\r\n    // const [searchText, setSearchText] = React.useState('')\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    // const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    // const [deleteLoader, setDeleteLoader] = React.useState(false)\r\n    const [invoiceCodes, setInvoiceCodes] = React.useState([])\r\n    const [rolls, setRolls] = React.useState([])\r\n    const [departments, setDepartments] = React.useState([])\r\n    const [tableValues, setTableValues] = React.useState([])\r\n    const [state, setState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n    \r\n    const notify = message => props.enqueueSnackbar(message, { \r\n      variant: 'info',\r\n    })\r\n\r\n    const fetchRolls = () => {\r\n      setLoading(true)\r\n      try {\r\n        let url = api_endpoint_warehouse+`/fetch/getRollsForInvoiceIDOperation?operation=In&invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\r\n        console.log('url',url)\r\n        fetch(url,{\r\n            method: 'get',\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            console.log('--->',res)\r\n            if(res.Rolls){\r\n              setRolls(res.Rolls)\r\n            }\r\n            setLoading(false)\r\n          })\r\n          .catch(err => {\r\n            setLoading(false)\r\n            console.log('err in fetching', err)\r\n            // setTableValues([])\r\n          })\r\n      } catch (err) {\r\n          setLoading(false)\r\n          console.log('try catch error: ', err)\r\n          // setTableValues([])\r\n      }\r\n    }\r\n    const handleRollIntention = async (array) => {\r\n\r\n\r\n      if(!state.department){\r\n        notify('Select a department first')\r\n        return\r\n      }\r\n\r\n      setLoading(true)\r\n      console.log('array: ',array,', rolls: ',rolls,state)\r\n      let keysArray = Object.keys(array)\r\n      let error = false\r\n      let arr = []\r\n      for(let i=0; i<keysArray.length;i++){\r\n        console.log(rolls[parseInt(keysArray[i])].ItemID)\r\n        arr.push(rolls[parseInt(keysArray[i])].ItemID)\r\n      }\r\n      console.log(arr)\r\n        try {\r\n          let url = api_endpoint_warehouse+`/update/makeStockInOutForRolls`;\r\n          console.log('url',url)\r\n          fetch(url,{\r\n              method: 'put',\r\n              headers:{\r\n                'Content-Type':'application/json'\r\n              },\r\n              body:JSON.stringify({warehouseStatus:'stockedIn',routeID:state.department.RouteID,itemIDArray:arr})\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setLoading(false)\r\n            if(res.ErrorNumber===0){\r\n              notify('Successfull')\r\n            }else{\r\n              notify('Something went wrong')\r\n            }\r\n              console.log('roll intetntion insertion response -----> ',res)\r\n            })\r\n            .catch(err => {\r\n              notify('Something went wrong')\r\n              console.log('err in fetching', err)\r\n              setLoading(false)\r\n            })\r\n        } catch (err) {\r\n            notify('Something went wrong')\r\n            console.log('try catch error: ', err)\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    const fetchInvoiceCodes = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getInvoicesForOperation?operation=In')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log('=> ',res)\r\n                    if(res.Invoices){\r\n                      setInvoiceCodes(res.Invoices)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    // setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            // setTableValues([])\r\n        }\r\n    }\r\n    const fetchDepartments = () => {\r\n      try {\r\n        fetch(api_endpoint_warehouse + '/fetch/getRoutesForStockingIn')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.Routes) {\r\n                    setDepartments(res.Routes)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('err in fetching', err)\r\n                //setTableValues([])\r\n            })\r\n    } catch (err) {\r\n        console.log('try catch error: ', err)\r\n        //setTableValues([])\r\n    }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      fetchInvoiceCodes()\r\n      fetchDepartments()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container style={{justifyContent:'center',display:'flex'}}>\r\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\r\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\r\n                    <Autocomplete\r\n                      options={invoiceCodes}\r\n                      getOptionLabel={option=>option.InvoiceCode}\r\n                      style={{ width: '100%' }}\r\n                      onChange={(e, v) => setState({ ...state, invoice: v })}\r\n                      renderInput={params => (\r\n                          <TextField {...params} label=\"Invoice Codes\" variant=\"outlined\" fullWidth />\r\n                      )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\r\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\r\n                    {\r\n                      loading===true?\r\n                      <CircularProgress color={'#fff'}/>\r\n                      :'Fetch'\r\n                    }\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\r\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\r\n                    <Autocomplete\r\n                      options={departments}\r\n                      getOptionLabel={option => option.Location}\r\n                      style={{ width: '100%' }}\r\n                      onChange={(e, v) => setState({ ...state, department: v })}\r\n                      renderInput={params => (\r\n                          <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\r\n                      )}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n              rolls.length===0?\r\n              <div style={{padding:50,justifyContent:'center',display:'flex',color:'grey'}}>\r\n                Nothing to display.\r\n              </div>\r\n              :\r\n              <MyTable columns={[\r\n                  {\r\n                      Header: 'RFID',\r\n                      accessor: 'TagID',\r\n                  },\r\n                  {\r\n                      Header: 'Supplier',\r\n                      accessor: 'Supplier',\r\n                  },\r\n                  {\r\n                      Header: 'Buyer',\r\n                      accessor: 'Buyer',\r\n                  },\r\n                  {\r\n                      Header: 'Style',\r\n                      accessor: 'StyleCode',\r\n                  },\r\n                  {\r\n                      Header: 'Color',\r\n                      accessor: 'ColorCode',\r\n                  },\r\n                  {\r\n                      Header: 'Length',\r\n                      accessor: 'RollLength',\r\n                  },\r\n                  {\r\n                      Header: 'Net Weight',\r\n                      accessor: 'NetWeight',\r\n                  },\r\n                  {\r\n                      Header: 'Gross Weight',\r\n                      accessor: 'GrossWeight',\r\n                  },\r\n                  \r\n              ]} data={rolls} handleUpload={handleRollIntention} />\r\n\r\n            }\r\n            {/* <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(StockIn)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\n// import DeleteIcon from '@material-ui/icons/Delete'\r\n// import EditIcon from '@material-ui/icons/Edit'\r\n// import { Dialog } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n//import './index.css'\r\nimport { api_endpoint,api_endpoint_warehouse } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter,useRowSelect } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Rolls\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\n  const IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n      const defaultRef = React.useRef()\r\n      const resolvedRef = ref || defaultRef\r\n  \r\n      React.useEffect(() => {\r\n        resolvedRef.current.indeterminate = indeterminate\r\n      }, [resolvedRef, indeterminate])\r\n  \r\n      return (\r\n        <>\r\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n        </>\r\n      )\r\n    }\r\n  )\r\n\r\nfunction MyTable({ columns, data, handleUpload }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        selectedFlatRows,\r\n    state: { selectedRowIds },\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n      },useGlobalFilter,usePagination,useRowSelect,\r\n      hooks => {\r\n        hooks.visibleColumns.push(columns => [\r\n          // Let's make a column for selection\r\n          {\r\n            id: 'selection',\r\n            // The header can use the table's getToggleAllRowsSelectedProps method\r\n            // to render a checkbox\r\n            Header: ({ getToggleAllRowsSelectedProps }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n              </div>\r\n            ),\r\n            // The cell can use the individual row's getToggleRowSelectedProps method\r\n            // to the render a checkbox\r\n            Cell: ({ row }) => (\r\n              <div>\r\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n              </div>\r\n            ),\r\n          },\r\n          ...columns,\r\n        ])\r\n    })\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div >\r\n            <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\r\n              <div style={{width:300}}>\r\n                  <GlobalFilter\r\n                      preGlobalFilteredRows={preGlobalFilteredRows}\r\n                      globalFilter={globalFilter}\r\n                      setGlobalFilter={setGlobalFilter}\r\n                  />\r\n              </div>\r\n            </div>\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            console.log('row: ',row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td style={{textAlign:'center'}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n            {\r\n                Object.keys(selectedRowIds).length > 0?\r\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\r\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                :null\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst StockOut = props => {\r\n\r\n    // const [searchText, setSearchText] = React.useState('')\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    // const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    // const [deleteLoader, setDeleteLoader] = React.useState(false)\r\n    const [departments, setDepartments] = React.useState([])\r\n    const [invoiceCodes, setInvoiceCodes] = React.useState([])\r\n    const [rolls, setRolls] = React.useState([])\r\n    const [tableValues, setTableValues] = React.useState([])\r\n    const [state, setState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n    \r\n    const notify = message => props.enqueueSnackbar(message, { \r\n      variant: 'info',\r\n    })\r\n\r\n    const fetchRolls = () => {\r\n      setLoading(true)\r\n      try {\r\n        let url = api_endpoint_warehouse+`/fetch/getRollsForInvoiceIDOperation?operation=Out&invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\r\n        console.log('url',url)\r\n        fetch(url,{\r\n            method: 'get',\r\n        })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            console.log('--->',res)\r\n            if(res.Rolls){\r\n              setRolls(res.Rolls)\r\n            }\r\n            setLoading(false)\r\n          })\r\n          .catch(err => {\r\n            setLoading(false)\r\n            console.log('err in fetching', err)\r\n            // setTableValues([])\r\n          })\r\n      } catch (err) {\r\n          setLoading(false)\r\n          console.log('try catch error: ', err)\r\n          // setTableValues([])\r\n      }\r\n    }\r\n    const handleRollIntention = async (array) => {\r\n\r\n\r\n      if(!state.department){\r\n        notify('Select a department first')\r\n        return\r\n      }\r\n\r\n      setLoading(true)\r\n      console.log('array: ',array,', rolls: ',rolls,state)\r\n      let keysArray = Object.keys(array)\r\n      let error = false\r\n      let arr = []\r\n      for(let i=0; i<keysArray.length;i++){\r\n        console.log(rolls[parseInt(keysArray[i])].ItemID)\r\n        arr.push(rolls[parseInt(keysArray[i])].ItemID)\r\n      }\r\n      console.log(arr)\r\n        try {\r\n          let url = api_endpoint_warehouse+`/update/makeStockInOutForRolls`;\r\n          console.log('url',url)\r\n          fetch(url,{\r\n              method: 'put',\r\n              headers:{\r\n                'Content-Type':'application/json'\r\n              },\r\n              body:JSON.stringify({warehouseStatus:'stockedOut',routeID:state.department.RouteID,itemIDArray:arr})\r\n          })\r\n          .then(res => res.json())\r\n          .then(res => {\r\n            setLoading(false)\r\n            if(res.ErrorNumber===0){\r\n              notify('Successfull')\r\n            }else{\r\n              notify('Something went wrong')\r\n            }\r\n              console.log('roll intetntion insertion response -----> ',res)\r\n            })\r\n            .catch(err => {\r\n              notify('Something went wrong')\r\n              console.log('err in fetching', err)\r\n              setLoading(false)\r\n            })\r\n        } catch (err) {\r\n            notify('Something went wrong')\r\n            console.log('try catch error: ', err)\r\n            setLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    // const insertRollIntention = (tag_id) => {\r\n      \r\n    //   try {\r\n    //     let url = api_endpoint+`/Jordan/Warehouse/Issuance/insertRollIntention.php?tag_id=${tag_id}`;\r\n    //     console.log('url',url)\r\n    //     fetch(url,{\r\n    //         method: 'post',\r\n    //     })\r\n    //     .then(res => res.json())\r\n    //     .then(res => {\r\n    //         console.log('roll intetntion insertion response -----> ',res)\r\n    //       })\r\n    //       .catch(err => {\r\n    //         console.log('err in fetching', err)\r\n    //       })\r\n    //   } catch (err) {\r\n    //       console.log('try catch error: ', err)\r\n    //   }\r\n\r\n    // }\r\n\r\n    const fetchInvoiceCodes = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getInvoicesForOperation?operation=Out')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if(res.Invoices){\r\n                      setInvoiceCodes(res.Invoices)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    // setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            // setTableValues([])\r\n        }\r\n    }\r\n\r\n    const fetchDepartments = () => {\r\n      try {\r\n        fetch(api_endpoint_warehouse + '/fetch/getRoutesForStockingOut')\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                console.log(res)\r\n                if (res.Routes) {\r\n                    setDepartments(res.Routes)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('err in fetching', err)\r\n                //setTableValues([])\r\n            })\r\n    } catch (err) {\r\n        console.log('try catch error: ', err)\r\n        //setTableValues([])\r\n    }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n      fetchInvoiceCodes()\r\n      fetchDepartments()\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container style={{justifyContent:'center',display:'flex'}}>\r\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\r\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\r\n                    <Autocomplete\r\n                      options={invoiceCodes}\r\n                      getOptionLabel={option=>option.InvoiceCode}\r\n                      style={{ width: '100%' }}\r\n                      onChange={(e, v) => setState({ ...state, invoice: v })}\r\n                      renderInput={params => (\r\n                          <TextField {...params} label=\"Invoice Codes\" variant=\"outlined\" fullWidth />\r\n                      )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\r\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\r\n                    {\r\n                      loading===true?\r\n                      <CircularProgress color={'#fff'}/>\r\n                      :'Fetch'\r\n                    }\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\r\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\r\n                    <Autocomplete\r\n                      options={departments}\r\n                      getOptionLabel={option => option.Location}\r\n                      style={{ width: '100%' }}\r\n                      onChange={(e, v) => setState({ ...state, department: v })}\r\n                      renderInput={params => (\r\n                          <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\r\n                      )}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            {\r\n              rolls.length===0?\r\n              <div style={{padding:50,justifyContent:'center',display:'flex',color:'grey'}}>\r\n                Nothing to display.\r\n              </div>\r\n              :\r\n              <MyTable columns={[\r\n                {\r\n                  Header: 'RFID',\r\n                  accessor: 'TagID',\r\n              },\r\n              {\r\n                  Header: 'Supplier',\r\n                  accessor: 'Supplier',\r\n              },\r\n              {\r\n                  Header: 'Buyer',\r\n                  accessor: 'Buyer',\r\n              },\r\n              {\r\n                  Header: 'Style',\r\n                  accessor: 'StyleCode',\r\n              },\r\n              {\r\n                  Header: 'Color',\r\n                  accessor: 'ColorCode',\r\n              },\r\n              {\r\n                  Header: 'Length',\r\n                  accessor: 'RollLength',\r\n              },\r\n              {\r\n                  Header: 'Net Weight',\r\n                  accessor: 'NetWeight',\r\n              },\r\n              {\r\n                  Header: 'Gross Weight',\r\n                  accessor: 'GrossWeight',\r\n              },  \r\n              ]} data={rolls} handleUpload={handleRollIntention} />\r\n\r\n            }\r\n            {/* <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog> */}\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(StockOut)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport StockIn from '../StockIn'\r\nimport StockOut from '../StockOut'\r\n// import MarkersTable from '../MarkersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst PackingList = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Manual Stocking</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Stock in\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <StockIn />\r\n                        {/* <div>asdf</div> */}\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <StockOut />\r\n                        {/* <ViewPackingList/> */}\r\n                        {/* <MarkersTable /> */}\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PackingList","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Select, MenuItem, CircularProgress, Backdrop } from '@material-ui/core'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\n//import './index.css'\r\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter, useRowSelect } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n}) {\r\n    //const count = preGlobalFilteredRows.length\r\n\r\n    return (\r\n        <span>\r\n            <TextField\r\n                name='searchValue'\r\n                variant=\"outlined\"\r\n                label=\"Search Rolls\"\r\n                value={globalFilter || ''}\r\n                onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n                fullWidth\r\n                InputProps={{\r\n                    endAdornment: <InputAdornment position=\"end\">\r\n                        <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                    </InputAdornment>\r\n                }}\r\n            />\r\n        </span>\r\n    )\r\n}\r\n\r\nconst IndeterminateCheckbox = React.forwardRef(\r\n    ({ indeterminate, ...rest }, ref) => {\r\n        const defaultRef = React.useRef()\r\n        const resolvedRef = ref || defaultRef\r\n\r\n        React.useEffect(() => {\r\n            resolvedRef.current.indeterminate = indeterminate\r\n        }, [resolvedRef, indeterminate])\r\n\r\n        return (\r\n            <>\r\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n            </>\r\n        )\r\n    }\r\n)\r\n\r\nfunction MyTable({ columns, data,options }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        selectedFlatRows,\r\n        state: { selectedRowIds },\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n    } = useTable({\r\n        columns,\r\n        data,\r\n    }, useGlobalFilter, usePagination, useRowSelect,\r\n        hooks => {\r\n            hooks.visibleColumns.push(columns => [\r\n                // Let's make a column for selection\r\n                {\r\n                    id: 'selection',\r\n                    // The header can use the table's getToggleAllRowsSelectedProps method\r\n                    // to render a checkbox\r\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                    // The cell can use the individual row's getToggleRowSelectedProps method\r\n                    // to the render a checkbox\r\n                    Cell: ({ row }) => (\r\n                        <div>\r\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\r\n                        </div>\r\n                    ),\r\n                },\r\n                ...columns,\r\n            ])\r\n        })\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div style={{overflowX:'scroll'}}>\r\n            {/* <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\r\n              <div style={{width:300}}>\r\n                  <GlobalFilter\r\n                      preGlobalFilteredRows={preGlobalFilteredRows}\r\n                      globalFilter={globalFilter}\r\n                      setGlobalFilter={setGlobalFilter}\r\n                  />\r\n              </div>\r\n            </div> */}\r\n            <table {...getTableProps()} style={{ width: '100%' }}>\r\n                <thead>\r\n                    {headerGroups.map(headerGroup => (\r\n                        <tr {...headerGroup.getHeaderGroupProps()}>\r\n                            {headerGroup.headers.map(column => (\r\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                            ))}\r\n                            <th>Select</th>\r\n                        </tr>\r\n                    ))}\r\n                </thead>\r\n                <tbody {...getTableBodyProps()}>\r\n                    {page.map((row, i) => {\r\n                        prepareRow(row)\r\n                        // console.log('row: ',row)\r\n                        return (\r\n                            <tr {...row.getRowProps()}>\r\n                                {/* <td>{i+1}</td> */}\r\n                                {row.cells.map(cell => {\r\n                                    return <td style={{ textAlign: 'center',fontSize:14 }} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                                })}\r\n                                <td style={{ textAlign: 'center',width:150 }}>\r\n                                <Select\r\n                                    // value={age}\r\n                                    style={{width:'100%'}}\r\n                                >\r\n                                    {\r\n                                        options.map(o => <MenuItem value={o.value}>{o.label}</MenuItem>)\r\n                                    }\r\n                                </Select>\r\n                                </td>\r\n                                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n            <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n            {/* {\r\n                Object.keys(selectedRowIds).length > 0?\r\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\r\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\r\n                    </Grid>\r\n                </Grid>\r\n                :null\r\n            } */}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Assign = props => {\r\n\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [invoiceNumbers, setInvoiceNumbers] = React.useState([])\r\n    const [colors, setColors] = React.useState([])\r\n    const [styles, setStyles] = React.useState([])\r\n    const [lots, setLots] = React.useState([])\r\n    const [tableValues, setTableValues] = React.useState([])\r\n    const [options, setOptions] = React.useState([{value:'abc',label:'ABC'},{value:'def',label:'DEF'},{value:'ghi',label:'GHI'}])\r\n    const [state, setState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    const notify = message => props.enqueueSnackbar(message, {\r\n        variant: 'info',\r\n    })\r\n\r\n    const fetchData = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getInvoices')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res.Invoices) {\r\n                        setInvoiceNumbers(res.Invoices)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n        }\r\n    }\r\n    const fetchSelectList = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getInvoices')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    // if (res.Invoices) {\r\n                    //     setInvoiceNumbers(res.Invoices)\r\n                    // }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n        }\r\n    }\r\n    const fetchPackingList = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + `/fetch/getAllRollsStateForInvoiceID?invoiceID=${state.invoice.InvoiceID}`)\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res.PackingList) {\r\n                        filterResults(res.PackingList)\r\n                    } else {\r\n                        notify('Something went wrong!')\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n        }\r\n    }\r\n\r\n    const filterResults = async (packinglist) => {\r\n        let colors = []\r\n        let styles = []\r\n        let lots = []\r\n        setTableValues(packinglist)\r\n        await Promise.all(packinglist.map(p => {\r\n            colors.push(p.ColorCode)\r\n            styles.push(p.StyleCode)\r\n            lots.push(p.LotCode)\r\n        }))\r\n        colors = [...new Set(colors)]\r\n        lots = [...new Set(lots)]\r\n        styles = [...new Set(styles)]\r\n        setColors(colors)\r\n        setStyles(styles)\r\n        setLots(lots)\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    React.useEffect(() => {\r\n        if (state.invoice) {\r\n            fetchPackingList()\r\n        }\r\n    }, [state.invoice])\r\n\r\n    // React.useEffect(() => {\r\n    //   filterLot()\r\n    // }, [state.style])\r\n\r\n    React.useEffect(() => {\r\n        console.log('state:', state)\r\n    }, [state.color])\r\n\r\n    return (\r\n        <div>\r\n            <Grid container style={{ justifyContent: 'center', display: 'flex' }}>\r\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        options={invoiceNumbers}\r\n                        getOptionLabel={option => option.InvoiceCode}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => {\r\n                            if (v) {\r\n                                setState({ ...state, invoice: v })\r\n                            }\r\n                        }}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Invoice Code\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        options={styles}\r\n                        getOptionLabel={option => option}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => setState({ ...state, style: v })}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style Code\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        options={lots}\r\n                        getOptionLabel={option => option}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => setState({ ...state, lot: v })}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Lot Code\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item xl={6} lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                    <Autocomplete\r\n                        options={colors}\r\n                        getOptionLabel={option => option}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e, v) => setState({ ...state, color: v })}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color Code\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                {/* <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\r\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\r\n                    {\r\n                      loading===true?\r\n                      <CircularProgress color={'#fff'}/>\r\n                      :'Fetch'\r\n                    }\r\n                  </Button>\r\n                </Grid>\r\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                      options={departments}\r\n                      getOptionLabel={option => option.FromLocation}\r\n                      style={{ width: '100%' }}\r\n                      onChange={(e, v) => setState({ ...state, department: v })}\r\n                      renderInput={params => (\r\n                          <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\r\n                      )}\r\n                    />\r\n                </Grid> */}\r\n            </Grid>\r\n            {\r\n                tableValues.length === 0 ?\r\n                    <div style={{ padding: 50, justifyContent: 'center', display: 'flex', color: 'grey' }}>\r\n                        Nothing to display.\r\n              </div>\r\n                    :\r\n                    <MyTable columns={[\r\n                        {\r\n                            Header: 'Buyer',\r\n                            accessor: 'Buyer',\r\n                        },\r\n                        {\r\n                            Header: 'Color',\r\n                            accessor: 'ColorCode',\r\n                        },\r\n                        {\r\n                            Header: 'Length',\r\n                            accessor: 'CurrentLength',\r\n                        },\r\n                        // {\r\n                        //     Header: 'Customer',\r\n                        //     accessor: 'Customer',\r\n                        // },\r\n                        {\r\n                            Header: 'Fabric Type',\r\n                            accessor: 'FabricType',\r\n                        },\r\n                        // {\r\n                        //     Header: 'From Location',\r\n                        //     accessor: 'FromLocation',\r\n                        // },\r\n                        {\r\n                            Header: 'Invoice',\r\n                            accessor: 'InvoiceCode',\r\n                        },\r\n                        // {\r\n                        //     Header: 'Item ID',\r\n                        //     accessor: 'ItemID',\r\n                        // },\r\n                        {\r\n                            Header: 'Lot',\r\n                            accessor: 'LotCode',\r\n                        },\r\n                        {\r\n                            Header: 'Roll',\r\n                            accessor: 'RollCode',\r\n                        },\r\n                        // {\r\n                        //     Header: 'Route',\r\n                        //     accessor: 'RouteID',\r\n                        // },\r\n                        // {\r\n                        //     Header: 'Season',\r\n                        //     accessor: 'Season',\r\n                        // },\r\n                        // {\r\n                        //     Header: 'State ID',\r\n                        //     accessor: 'StateID',\r\n                        // },\r\n                        {\r\n                            Header: 'Style',\r\n                            accessor: 'StyleCode',\r\n                        },\r\n                        {\r\n                            Header: 'Supplier',\r\n                            accessor: 'Supplier',\r\n                        },\r\n                        // {\r\n                        //     Header: 'Warehouse Status',\r\n                        //     accessor: 'WarehouseStatus',\r\n                        // },\r\n\r\n                    ]} data={tableValues} options={options} />\r\n\r\n            }\r\n            {/* <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    }\r\n                </div>\r\n            </Dialog> */}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(Assign)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AssignCard from '../AssignCard'\r\nimport StockOut from '../StockOut'\r\n// import MarkersTable from '../MarkersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst CardAssigment = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Card Assignment</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Assign\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        {/* <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AssignCard />\r\n                        {/* <div>asdf</div> */}\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        {/* <StockOut /> */}\r\n                        {/* <ViewPackingList/> */}\r\n                        {/* <MarkersTable /> */}\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CardAssigment","import React from 'react'\r\n//import styled from 'styled-components'\r\nimport { useTable, usePagination } from 'react-table'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n//import makeData from './makeData'\r\n\r\n// const Styles = styled.div`\r\n//   padding: 1rem;\r\n//   table {\r\n//     border-spacing: 0;\r\n//     border: 1px solid black;\r\n//     tr {\r\n//       :last-child {\r\n//         td {\r\n//           border-bottom: 0;\r\n//         }\r\n//       }\r\n//     }\r\n//     th,\r\n//     td {\r\n//       margin: 0;\r\n//       padding: 0.5rem;\r\n//       border-bottom: 1px solid black;\r\n//       border-right: 1px solid black;\r\n//       :last-child {\r\n//         border-right: 0;\r\n//       }\r\n//       input {\r\n//         font-size: 1rem;\r\n//         padding: 0;\r\n//         margin: 0;\r\n//         border: 0;\r\n//       }\r\n//     }\r\n//   }\r\n//   .pagination {\r\n//     padding: 0.5rem;\r\n//   }\r\n// `\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  cell: { value: initialValue },\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n      console.log(index,id,value)\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} style={{width:'100%',backgroundColor: 'transparent',border: 'none'}} />\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\n// Be sure to pass our updateMyData and the skipPageReset option\r\nfunction Table({ columns, data, updateMyData, skipPageReset,setTableValues }) {\r\n  // For this example, we're using pagination to illustrate how to stop\r\n  // the current page from resetting when our data changes\r\n  // Otherwise, nothing is different here.\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      // use the skipPageReset option to disable page resetting temporarily\r\n      autoResetPage: !skipPageReset,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n    },\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <table style={{width:'100%'}} {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n                <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            // console.log(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                    setTableValues(draft => draft.filter(d => d.id !== row.original.id))\r\n                }}/></td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div style={{display:'flex',justifyContent:'space-between',marginBottom:20}}>\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              Previous Page\r\n          </button>\r\n          <div>\r\n              Page{' '}\r\n              <em>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </em>\r\n          </div>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n              Next Page\r\n          </button>\r\n      </div>\r\n      {/* <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div> */}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App(props) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n        {\r\n            Header: 'Invoice Number',\r\n            accessor: 'InvoiceCode',\r\n        },\r\n        {\r\n            Header: 'Supplier',\r\n            accessor: 'Supplier',\r\n        },\r\n        {\r\n            Header: 'Buyer',\r\n            accessor: 'Buyer',\r\n        },\r\n        {\r\n            Header: 'Style',\r\n            accessor: 'StyleCode',\r\n        },\r\n        {\r\n            Header: 'Color',\r\n            accessor: 'ColorCode',\r\n        },\r\n        {\r\n            Header: 'Lot',\r\n            accessor: 'LotCode',\r\n        },\r\n        {\r\n            Header: 'Length',\r\n            accessor: 'RollLength',\r\n        },\r\n        {\r\n            Header: 'Net Weight',\r\n            accessor: 'NetWeight',\r\n        },\r\n        {\r\n            Header: 'Gross Weight',\r\n            accessor: 'GrossWeight',\r\n        },\r\n        {\r\n            Header: 'Roll No',\r\n            accessor: 'RollCode',\r\n        },\r\n        {\r\n            Header: 'Season Code',\r\n            accessor: 'Season',\r\n        },\r\n        {\r\n            Header: 'Fabric Type',\r\n            accessor: 'FabricType',\r\n        }\r\n    ],\r\n    []\r\n  )\r\n\r\n  const [data, setData] = React.useState([])\r\n  const [originalData] = React.useState(props.tableValues)\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  React.useEffect(()=>{\r\n    if(props.tableValues){\r\n        setData(props.tableValues)\r\n    }\r\n  },[props.tableValues])\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n\r\n  // When our cell renderer calls updateMyData, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  const updateMyData = async (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    // console.log('in uploadmydata',rowIndex,columnId,value)\r\n    setSkipPageReset(true)\r\n    let arr = await Promise.all(data.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...data[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      }))\r\n    setData(arr)\r\n    props.setTableValues(arr)\r\n  }\r\n\r\n  // console.log('data_____________________________________________________________________________',data)\r\n  // After data chagnes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    setSkipPageReset(false)\r\n  }, [data])\r\n\r\n  // Let's add a data resetter/randomizer to help\r\n  // illustrate that flow...\r\n  const resetData = () => setData(originalData)\r\n\r\n  return (\r\n   <>\r\n      {/* <button onClick={resetData}>Reset Data</button> */}\r\n      <Table\r\n        columns={columns}\r\n        data={data}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n        setTableValues={props.setTableValues}\r\n      />\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport { Grid, TextField, Button, Menu, MenuItem, Typography, RadioGroup, Radio, FormControlLabel, CircularProgress } from '@material-ui/core'\r\nimport { api_endpoint,api_endpoint_warehouse } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport uuid from 'uuid/v4'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport AddIcon from '@material-ui/icons/Add'\r\nimport Table from '../Table'\r\nimport makeStyles from '@material-ui/styles/makeStyles'\r\nimport readXlsxFile from 'read-excel-file'\r\n//import {EditableSelect} from 'react-editable-select';\r\n\r\nconst useStyles = makeStyles({\r\n    addIcon:{position:'absolute',cursor:'pointer',right:20,zIndex:999,top:20,color:'#707070'}\r\n})\r\nconst units = ['kgs','yds']\r\n//const styles = \r\n\r\n\r\nconst AddPackingList = props => {\r\n    \r\n    const classes = useStyles()\r\n    const [value, setValue] = React.useState('kg');\r\n    const [distance, setDistance] = React.useState('yd');\r\n    const options = [{id:3,name:\"Hamza\"},{id:4,name:\"Iqbal\"}]\r\n    let selectedOption = {id:3,name:\"Hamza\"}\r\n\r\n    const handleChangeWeightUnit = event => {\r\n        setValue(event.target.value);\r\n    };\r\n    const handleChangeLengthUnit = event => {\r\n        setDistance(event.target.value);\r\n    };\r\n\r\n    const [unit,setUnit] = React.useState('kgs')\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n    const handleClick = event => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [uploadVisible,setUploadVisible] = React.useState(false)\r\n    const [filesState,setFilesState] = React.useState([])\r\n    const [noOfRolls,setNoOfRolls] = React.useState(null)\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    const [excelLoading,setExcelLoading] = React.useState(false)\r\n    //const [sizes,setSizes] = React.useState([])\r\n    const [buyers,setBuyers] = React.useState([])\r\n    const [lots,setLots] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n\r\n\r\n    const toggleUploadVisible = () => {\r\n        setUploadVisible(!uploadVisible)\r\n    }\r\n    //const [deparments,setDepartments] = React.useState([])\r\n\r\n    // React.useEffect(()=>{\r\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n    //     console.log('state',state)\r\n    //     if(state.style){\r\n    //         fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\r\n    //         .then(res => res.json()\r\n    //         .then(res => {\r\n    //             console.log('res colors',res)\r\n    //             setColors(res.Colors)\r\n    //         }))\r\n    //         .catch(err => {\r\n    //             console.log('err in fetch',err)\r\n    //         })\r\n\r\n    //     }\r\n    // },[state.style])\r\n\r\n    // React.useEffect(()=>{\r\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\r\n    //     if(state.size){\r\n    //         setModalVisible(true)\r\n    //     }\r\n        \r\n    // },[state.size])\r\n\r\n    const handleAppend = async () => {\r\n        console.log('handleAppend',state)\r\n        let newArr = []\r\n        for(let i=0; i<noOfRolls;i++){\r\n            newArr.push({id:uuid(),...state})\r\n        }\r\n        setModalVisible(false)\r\n        setTableValues(s => [...s,...newArr])\r\n        setState({})\r\n    }\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getColors.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            console.log('res sized',res)\r\n            setColors(res.Colors)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n    },[])\r\n\r\n    const handleFileUpload = (e) => {\r\n        setExcelLoading(true)\r\n        // console.log('e ',e)\r\n        // console.log('e.target.files ',e.target.files)\r\n        //setFilesState()\r\n        try{\r\n\r\n            readXlsxFile(e.target.files[0]).then(async (rows) => {\r\n                let arr = []\r\n                // console.log('rows: ',rows)\r\n                for(let i=1; i<rows.length; i++){\r\n                    let obj = {\r\n                        InvoiceCode:rows[i][0],\r\n                        Supplier:rows[i][1],\r\n                        Buyer:rows[i][2],\r\n                        StyleCode:rows[i][3],\r\n                        ColorCode:rows[i][4],\r\n                        LotCode:rows[i][5],\r\n                        RollLength:rows[i][6],\r\n                        NetWeight:rows[i][7],\r\n                        GrossWeight:rows[i][8],\r\n                        RollCode:rows[i][9],\r\n                        Season:rows[i][10],\r\n                        FabricType:rows[i][11],\r\n                        // invoice_no:rows[i][0],\r\n                        // supplier:rows[i][1],\r\n                        // buyer:rows[i][2],\r\n                        // style_code:rows[i][3],\r\n                        // color:rows[i][4],\r\n                        // lot:rows[i][5],\r\n                        // length:rows[i][6],\r\n                        // net_weight:rows[i][7],\r\n                        // gross_weight:rows[i][8],\r\n                        // roll_no:rows[i][9],\r\n                        // season_code:rows[i][10],\r\n                        // fabric_type:rows[i][11],\r\n                        id:uuid()\r\n                    }\r\n                    arr.push(obj)\r\n                }\r\n                console.log('arr',arr)\r\n                setTableValues(arr)\r\n                setExcelLoading(false)\r\n                // `rows` is an array of rows\r\n                // each row being an array of cells.\r\n              })\r\n        }catch(err){\r\n            console.log('errr',err)\r\n            setExcelLoading(false)\r\n        }\r\n\r\n    }\r\n\r\n    const handleAdd = async() => {\r\n        \r\n        console.log('state: ',state)\r\n        \r\n        setLoading(true)\r\n        let temp = tableValues\r\n        // console.log('value',value,tableValues)\r\n        \r\n        // if(value==='lb'){\r\n        //     // console.log('hehre')\r\n        //     temp = await Promise.all(temp.map(t => ({...t,net_weight:t.net_weight*0.4535,gross_weight:t.gross_weight*0.4535})))\r\n        //     // setTableValues(temp)\r\n        //     // console.log(2)\r\n        // }\r\n        \r\n        // if(distance==='yd'){\r\n        //     temp = await Promise.all(temp.map(t => ({...t,length:t.length*0.9144})))\r\n        //     // setTableValues(temp)\r\n        //     // console.log(4)\r\n        // }\r\n        setTableValues(temp)\r\n        var ajaxTime= new Date().getTime();\r\n        try{\r\n            let url = api_endpoint_warehouse+`/insert/uploadPackingList`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\"\r\n                },\r\n                body:JSON.stringify({PackingList:temp})\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res-------------------------------------------------------------------------------------: ',res)\r\n                if(res.ErrorNumber===0){\r\n                    // setTableValues([])\r\n                    // var totalTime = new Date().getTime()-ajaxTime;\r\n                    props.enqueueSnackbar('Successfully Added Packing List!', { \r\n                        variant: 'success',\r\n                    })\r\n                }else{\r\n                    props.enqueueSnackbar(\"Error while uploading packing list. Kindly verify packing list.\", { \r\n                        variant: 'error',\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Error While Adding Packing List!', { \r\n                    variant: 'error',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Error While Adding Packing List!', { \r\n                variant: 'error',\r\n            })\r\n        }\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 300 }}>\r\n                    <div style={{textAlign:'center'}}><Typography variant=\"h6\" style={{margin:15}}>Add Following Details</Typography></div>\r\n                    <Grid container>\r\n\r\n                        \r\n                        {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <EditableSelect\r\n                                options={options}\r\n                                value={selectedOption}\r\n                                getOptionValue={(option) => option.id}\r\n                                getOptionLabel={(option) => option.name}\r\n                                createOption={(text) => { return {id: 1, name: text} }}\r\n                                onChange={(ev, option) => setState({...state,option})}\r\n                            />\r\n                        </Grid> */}\r\n                        \r\n                        {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField value={state.rollNumber} onChange={e => setState({...state,rollNumber:e.target.value})} name=\"rollNumber\" variant=\"outlined\" fullWidth label=\"Roll Number\"/>\r\n                        </Grid> */}\r\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                            <TextField value={noOfRolls} type=\"number\" onChange={e => setNoOfRolls(e.target.value)} name=\"noOfRolls\" variant=\"outlined\" fullWidth label=\"Number of Rolls\"/>\r\n                        </Grid>\r\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                            <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{color:'#fff',height:50}}>\r\n                                Generate\r\n                            </Button>\r\n                        </Grid>\r\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                            <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{color:'#fff',height:50}}>\r\n                                cancel\r\n                            </Button>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    {/* <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                        \r\n                        \r\n                    </div> */}\r\n                </div>\r\n            </Dialog>\r\n            <Grid container>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.InvoiceCode} onChange={e => setState({...state,InvoiceCode:e.target.value})} name=\"InvoiceCode\" variant=\"outlined\" fullWidth label=\"Invoice Number\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.Supplier} onChange={e => setState({...state,Supplier:e.target.value})} name=\"Supplier\" variant=\"outlined\" fullWidth label=\"Supplier\"/>\r\n                    {/* <Autocomplete\r\n                        options={[{supplier:\"1\"},{supplier:\"2\"},{supplier:\"3\"}]}\r\n                        getOptionLabel={option => option.supplier}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => {if(v){setState({...state,supplier:v.supplier})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Supplier\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    /> */}\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.Buyer} onChange={e => setState({...state,Buyer:e.target.value})} name=\"Buyer\" variant=\"outlined\" fullWidth label=\"Buyer\"/>\r\n                    {/* <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={buyers}\r\n                        getOptionLabel={option => option.buyer_id}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,buyer:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Buyer\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    /> */}\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => {if(v){setState({...state,style_code:v.style_code})}else{setState({...state,style_code:v})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) =>  {if(v){setState({...state,color:v.color})}else{setState({...state,color:v})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.lot} onChange={e => setState({...state,lot:e.target.value})} name=\"lot\" variant=\"outlined\" fullWidth label=\"Lot\"/>\r\n                </Grid>\r\n                \r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.length} type=\"number\" onChange={e => setState({...state,length:e.target.value})} name=\"length\" variant=\"outlined\" fullWidth label={`Length (${distance})`}/>\r\n                </Grid>\r\n                \r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.net_weight} type=\"number\" onChange={e => setState({...state,net_weight:e.target.value})} name=\"net_weight\" variant=\"outlined\" fullWidth label={`Net Weight (${value})`} />\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.gross_weight} type=\"number\" onChange={e => setState({...state,gross_weight:e.target.value})} name=\"gross_weight\" variant=\"outlined\" fullWidth label={`Gross Weight (${value})`} />\r\n                </Grid>\r\n                \r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.fabric_type} onChange={e => setState({...state,fabric_type:e.target.value})} name=\"fabric_type\" variant=\"outlined\" fullWidth label=\"Fabric Type\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.roll_no} onChange={e => setState({...state,roll_no:e.target.value})} name=\"roll_no\" variant=\"outlined\" fullWidth label=\"Roll No\"/>\r\n                </Grid>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                <TextField value={state.season_code} onChange={e => setState({...state,season_code:e.target.value})} name=\"season_code\" variant=\"outlined\" fullWidth label=\"Season Code\"/>\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5,alignItems:'center'}}>\r\n                    <RadioGroup aria-label=\"Unit\" name=\"gender1\" value={value} onChange={handleChangeWeightUnit} >\r\n                        Select Unit For Weight: &nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel value=\"kg\" control={<Radio />} label=\"Kilograms\" />\r\n                        <FormControlLabel value=\"lb\" control={<Radio />} label=\"Pounds\" />\r\n                    </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5,alignItems:'center'}}>\r\n                    <RadioGroup aria-label=\"Unit\" name=\"length\" value={distance} onChange={handleChangeLengthUnit} >\r\n                        Select Unit For Length: &nbsp;&nbsp;&nbsp;\r\n                        <FormControlLabel value=\"m\" control={<Radio />} label=\"Meters\" />\r\n                        <FormControlLabel value=\"yd\" control={<Radio />} label=\"Yards\" />\r\n                    </RadioGroup>\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5}}>\r\n                    <Button variant=\"contained\" color='secondary' style={{height:\"100%\"}} onClick={()=>setModalVisible(true)} fullWidth>Generate List</Button>\r\n                </Grid>\r\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\r\n                </Grid> */}\r\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <TextField value={state.po_description} onChange={e => setState({...state,po_description:e.target.value})} name=\"poDescription\" variant=\"outlined\" fullWidth label=\"PO Description\"/>\r\n                </Grid> */}\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Typography onClick={toggleUploadVisible} variant=\"subtitle1\" color='primary' style={{fontWeight:'700',cursor:'pointer'}}>Upload Spreadsheet Instead</Typography>\r\n                    {\r\n                        uploadVisible===true?\r\n                        <input id=\"upload\" type=\"file\" onChange={handleFileUpload} />\r\n                        :null\r\n                    }\r\n                    {\r\n                        excelLoading===true?\r\n                        <CircularProgress color='primary' size={15}/>\r\n                        :null\r\n                    }\r\n                </Grid>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        tableValues && tableValues.length > 0?\r\n                        <Table setTableValues={setTableValues} tableValues={tableValues}/>\r\n                        :null\r\n                    }\r\n                </Grid>\r\n                {/* <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th>Invoice Number</th>\r\n                                <th>Supplier</th>\r\n                                <th>Buyer</th>\r\n                                <th>Style</th>\r\n                                <th>Color</th>\r\n                                <th>Lot</th> \r\n                                <th>Roll Number</th>\r\n                                <th>Quantity</th>\r\n                                <th>Net Weight</th>\r\n                                <th>Gross Weight</th>\r\n                                <th>Fabric Type</th>\r\n                                <th style={{ width: '40px' }}></th>\r\n                               \r\n                            </tr>\r\n                            {console.log('tableValues',tableValues)}\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>{v.invoiceNumber}</td>\r\n                                            <td>{v.supplier}</td>\r\n                                            <td>{v.buyer}</td>\r\n                                            <td>{v.style?v.style.style_code:null}</td>\r\n                                            <td>{v.color?v.color.color:null}</td>\r\n                                            <td>{v.lot}</td>\r\n                                            <td>{v.rollNumber}</td>\r\n                                            <td>{v.quantity}</td>\r\n                                            <td>{v.nw}</td>\r\n                                            <td>{v.gw}</td>\r\n                                            <td>{v.fabricType}</td>\r\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\r\n                                            }}/></td>\r\n                                            \r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid> */}\r\n                <Menu\r\n                    id=\"simple-menu\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <MenuItem onClick={()=>{setUnit('kgs');handleClose();}}>Kilograms</MenuItem>\r\n                    <MenuItem onClick={()=>{setUnit('yds');handleClose();}}>Yards</MenuItem>\r\n                </Menu>\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    <Button \r\n                        color='primary' \r\n                        variant='contained' \r\n                        style={{color:'#fff',height:'50px'}} \r\n                        onClick={handleAdd}\r\n                        fullWidth\r\n                    >\r\n                        {\r\n                            loading === true?\r\n                            <CircularProgress color='#fff'/>\r\n                            :\r\n                            `Upload Packing List`\r\n                        }\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(AddPackingList)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Order\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageSize: 50 }\r\n      },useGlobalFilter,usePagination)\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            {/* <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div> */}\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              {/* <th></th> */}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td style={{fontSize:12}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PackingListTable = props => {\r\n\r\n    const [searchText, setSearchText] = React.useState('')\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [invoiceNumbers,setInvoiceNumbers] = React.useState([])\r\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState([])\r\n    const [editState, setEditState] = React.useState({})\r\n    const [state, setState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    // React.useEffect(() => {\r\n    //     console.log('modalValues', modalValues)\r\n    //     setEditState(modalValues)\r\n    // }, [modalValues])\r\n\r\n    const handleFetch = () => {\r\n\r\n        console.log('state: ',state)\r\n        console.log('tableValues: ',tableValues)\r\n        setTableValues(null)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint_warehouse+`/fetch/getPackingListDetailsForInvoiceID?invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'get',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.PackingList){\r\n                    setTableValues(res.PackingList)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Fetch Packing List!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Fetch Packing List!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = (record) => {\r\n\r\n    //     try {\r\n    //         setDeleteLoader(true)\r\n    //         setOpenBackdrop(true)\r\n    //         fetch(api_endpoint + `/Jordan/SPTS/order/closeOrder.php?order_id=${record.order_id}`)\r\n    //             .then(res => res.json())\r\n    //             .then(res => {\r\n    //                 setDeleteLoader(false)\r\n    //                 setOpenBackdrop(false)\r\n    //                 console.log('delete response: ', res)\r\n    //                 if (res.Error_No === 0) {\r\n    //                     props.enqueueSnackbar('Successfully deleted order!', {\r\n    //                         variant: 'info',\r\n    //                     })\r\n    //                     fetchOrders()\r\n    //                 }\r\n    //                 //setTableValues(res.Orders)\r\n    //             })\r\n    //             .catch(err => {\r\n    //                 console.log('err in fetching', err)\r\n    //                 setDeleteLoader(false)\r\n    //                 setOpenBackdrop(false)\r\n    //                 //setTableValues([])\r\n    //             })\r\n    //     } catch (err) {\r\n    //         console.log('try catch error: ', err)\r\n    //         setDeleteLoader(false)\r\n    //         setOpenBackdrop(false)\r\n    //         //setTableValues([])\r\n    //     }\r\n    }\r\n\r\n    const fetchInvoiceNumbers = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getInvoices')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if(res.Invoices){\r\n                        setInvoiceNumbers(res.Invoices)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            //setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchInvoiceNumbers()\r\n    }, [])\r\n    // React.useEffect(() => {\r\n    //     fetchPackingListForInvoice()\r\n    // }, [state.invoice])\r\n\r\n    return (\r\n        <>\r\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\r\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    asdf\r\n                    {/* {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    } */}\r\n                </div>\r\n            </Dialog>\r\n\r\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                        <Autocomplete\r\n                            //id=\"combo-box-demo\"\r\n                            options={invoiceNumbers}\r\n                            getOptionLabel={option => option.InvoiceCode}\r\n                            style={{ width: '100%' }}\r\n                            onChange={(e,v) => setState({...state,invoice:v})}\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={3} md={3} sm={3} xs={3} style={{ padding: 5 }}>\r\n                        <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{color:'#fff',height:'100%'}} >\r\n                            {\r\n                                `Fetch`\r\n                            }\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n                    {\r\n                        tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        tableValues.length === 0 ?\r\n                        null\r\n                        :\r\n                        <MyTable columns={[\r\n                            {\r\n                                Header: 'Supplier',\r\n                                accessor: 'Supplier',\r\n                            },\r\n                            {\r\n                                Header: 'Buyer',\r\n                                accessor: 'Buyer',\r\n                            },\r\n                            {\r\n                                Header: 'Style',\r\n                                accessor: 'StyleCode',\r\n                            },\r\n                            {\r\n                                Header: 'Color',\r\n                                accessor: 'ColorCode',\r\n                            },\r\n                            {\r\n                                Header: 'Lot',\r\n                                accessor: 'LotCode',\r\n                            },\r\n                            {\r\n                                Header: 'Invoice',\r\n                                accessor: 'InvoiceCode',\r\n                            },\r\n                            {\r\n                                Header: 'Roll No',\r\n                                accessor: 'RollCode',\r\n                            },\r\n                            {\r\n                                Header: 'Fabric',\r\n                                accessor: 'FabricType',\r\n                            },\r\n                            {\r\n                                Header: 'Length',\r\n                                accessor: 'RollLength',\r\n                            },\r\n                            {\r\n                                Header: 'Net Weight',\r\n                                accessor: 'NetWeight',\r\n                            },\r\n                            {\r\n                                Header: 'Gross Weight',\r\n                                accessor: 'GrossWeight',\r\n                            },\r\n                        ]} data={tableValues} tableValues={tableValues} \r\n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\r\n                        />\r\n                    }\r\n                </Grid>\r\n                <Backdrop open={openBackdrop}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(PackingListTable)","import React from 'react'\r\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\r\nimport { Autocomplete } from '@material-ui/lab'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { Dialog } from '@material-ui/core'\r\nimport './index.css'\r\nimport { api_endpoint, api_endpoint_warehouse } from '../../util/config'\r\nimport { withSnackbar } from 'notistack'\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\r\n\r\nfunction GlobalFilter({\r\n    preGlobalFilteredRows,\r\n    globalFilter,\r\n    setGlobalFilter,\r\n  }) {\r\n    //const count = preGlobalFilteredRows.length\r\n  \r\n    return (\r\n      <span>\r\n        <TextField\r\n            name='searchValue'\r\n            variant=\"outlined\"\r\n            label=\"Search Order\"\r\n            value={globalFilter || ''}\r\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\r\n            fullWidth\r\n            InputProps={{\r\n                endAdornment: <InputAdornment position=\"end\">\r\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\r\n                </InputAdornment>\r\n            }}\r\n        />\r\n      </span>\r\n    )\r\n  }\r\n\r\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\r\n    // Use the useTable hook to create your table configuration\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n        previousPage,\r\n        state: { pageIndex, pageSize, globalFilter },\r\n        canPreviousPage,\r\n        nextPage,\r\n        page,\r\n        canNextPage,\r\n        // pageIndex,\r\n        pageOptions,\r\n        gotoPage,\r\n        setGlobalFilter,\r\n        preGlobalFilteredRows,\r\n        // pageSize,\r\n        setPageSize\r\n      } = useTable({\r\n        columns,\r\n        data,\r\n        initialState: { pageSize: 50 }\r\n      },useGlobalFilter,usePagination)\r\n    // // console.log('porps', props)\r\n    // console.log('____________________________________________________________________________',previousPage,\r\n    // canPreviousPage,\r\n    // nextPage,\r\n    // canNextPage,\r\n    // pageIndex,\r\n    // pageOptions,\r\n    // gotoPage,\r\n    // pageSize,\r\n    // setPageSize)\r\n\r\n    return (\r\n        <div style={{width:'90%'}}>\r\n            {/* <div>\r\n                <GlobalFilter\r\n                    preGlobalFilteredRows={preGlobalFilteredRows}\r\n                    globalFilter={globalFilter}\r\n                    setGlobalFilter={setGlobalFilter}\r\n                />\r\n            </div> */}\r\n            <table {...getTableProps()} style={{width:'100%'}}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n              {/* <th></th> */}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                  {/* <td>{i+1}</td> */}\r\n                {row.cells.map(cell => {\r\n                    return <td style={{fontSize:12}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\r\n                    setModalVisible(true)\r\n                    setModalValues(row.original)\r\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\r\n                    handleDelete(row.original); setOpenBackdrop(true);\r\n                }} style={{ cursor: 'pointer' }} /></td> */}\r\n                \r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n            <div style={{display:'flex',justifyContent:'space-between'}}>\r\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n                    Previous Page\r\n                </button>\r\n                <div>\r\n                    Page{' '}\r\n                    <em>\r\n                        {pageIndex + 1} of {pageOptions.length}\r\n                    </em>\r\n                </div>\r\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n                    Next Page\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst PackingListTable = props => {\r\n\r\n    const [fetched, setFetched] = React.useState(false)\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [invoiceNumbers,setInvoiceNumbers] = React.useState([])\r\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [tableValues, setTableValues] = React.useState([])\r\n    const [editState, setEditState] = React.useState({})\r\n    const [state, setState] = React.useState({})\r\n    const [loading, setLoading] = React.useState(false)\r\n\r\n    // React.useEffect(() => {\r\n    //     console.log('modalValues', modalValues)\r\n    //     setEditState(modalValues)\r\n    // }, [modalValues])\r\n\r\n    const handleFetch = () => {\r\n\r\n        console.log('state: ',state)\r\n        console.log('tableValues: ',tableValues)\r\n        setTableValues(null)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint_warehouse+`/fetch/getPackingListDetailsForInvoiceID?invoiceID=${state.invoice?state.invoice.InvoiceID:''}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'get',\r\n            })\r\n            .then(res => res.json())\r\n            .then(res => {\r\n                setLoading(false)\r\n                console.log('res: ',res)\r\n                if(res.PackingList){\r\n                    setTableValues(res.PackingList)\r\n                    setFetched(true)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Fetch Packing List!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Fetch Packing List!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    const handleDelete = (record) => {\r\n\r\n        if(state.invoice){\r\n\r\n            setLoading(true)\r\n            try{\r\n                let url = api_endpoint_warehouse+`/delete/deletePackingListForInvoiceID`;\r\n                console.log('url',url)\r\n                fetch(url,{\r\n                    method: 'put',\r\n                    headers:{\r\n                        'Content-Type':'application/json'\r\n                    },\r\n                    body:state.invoice.InvoiceID\r\n                })\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    setLoading(false)\r\n                    console.log('res: ',res)\r\n                })\r\n                .catch(err => {\r\n                    console.log('error while fetching',err)\r\n                    setLoading(false)\r\n                    props.enqueueSnackbar('Failed to Delete Packing List!', { \r\n                        variant: 'info',\r\n                    })\r\n                })\r\n            }catch(err){\r\n                console.log('err in try catch',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Delete Packing List!', { \r\n                    variant: 'info',\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const fetchInvoiceNumbers = () => {\r\n        try {\r\n            fetch(api_endpoint_warehouse + '/fetch/getDeletableInvoices')\r\n                .then(res => res.json())\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if(res.Invoices){\r\n                        setInvoiceNumbers(res.Invoices)\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log('err in fetching', err)\r\n                    //setTableValues([])\r\n                })\r\n        } catch (err) {\r\n            console.log('try catch error: ', err)\r\n            //setTableValues([])\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchInvoiceNumbers()\r\n    }, [])\r\n    // React.useEffect(() => {\r\n    //     fetchPackingListForInvoice()\r\n    // }, [state.invoice])\r\n\r\n    return (\r\n        <>\r\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\r\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    asdf\r\n                    {/* {\r\n                        editState ?\r\n                            <>\r\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\r\n                                    </Grid>\r\n                                </Grid>\r\n                                <Grid container>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\r\n                                    </Grid>\r\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </>\r\n                            : null\r\n                    } */}\r\n                </div>\r\n            </Dialog>\r\n\r\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\r\n                        <Autocomplete\r\n                            //id=\"combo-box-demo\"\r\n                            options={invoiceNumbers}\r\n                            getOptionLabel={option => option.InvoiceCode}\r\n                            style={{ width: '100%' }}\r\n                            onChange={(e,v) => setState({...state,invoice:v})}\r\n                            renderInput={params => (\r\n                                <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\r\n                        <Button variant=\"contained\" fullWidth color='primary' onClick={handleFetch} style={{color:'#fff',height:'100%'}} >\r\n                            {\r\n                                `Fetch`\r\n                            }\r\n                        </Button>\r\n                    </Grid>\r\n                    {/* {\r\n                        state.invoice&&fetched===true?\r\n                        <Grid item lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\r\n                            <Button variant=\"contained\" fullWidth color='primary' onClick={handleDelete} style={{color:'#fff',height:'100%'}} >\r\n                                {\r\n                                    loading===true?\r\n                                    <CircularProgress size={16} style={{color:'#fff'}}/>\r\n                                    :\r\n                                    `Delete`\r\n                                }\r\n                            </Button>\r\n                        </Grid>\r\n                        :null\r\n                    } */}\r\n                </Grid>\r\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\r\n\r\n                    {\r\n                        tableValues === null ?\r\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        tableValues.length === 0 ?\r\n                        null\r\n                        :\r\n                        <MyTable columns={[\r\n                            {\r\n                                Header: 'Supplier',\r\n                                accessor: 'Supplier',\r\n                            },\r\n                            {\r\n                                Header: 'Buyer',\r\n                                accessor: 'Buyer',\r\n                            },\r\n                            {\r\n                                Header: 'Style',\r\n                                accessor: 'StyleCode',\r\n                            },\r\n                            {\r\n                                Header: 'Color',\r\n                                accessor: 'ColorCode',\r\n                            },\r\n                            {\r\n                                Header: 'Lot',\r\n                                accessor: 'LotCode',\r\n                            },\r\n                            {\r\n                                Header: 'Invoice',\r\n                                accessor: 'InvoiceCode',\r\n                            },\r\n                            {\r\n                                Header: 'Roll No',\r\n                                accessor: 'RollCode',\r\n                            },\r\n                            {\r\n                                Header: 'Fabric',\r\n                                accessor: 'FabricType',\r\n                            },\r\n                            {\r\n                                Header: 'Length',\r\n                                accessor: 'RollLength',\r\n                            },\r\n                            {\r\n                                Header: 'Net Weight',\r\n                                accessor: 'NetWeight',\r\n                            },\r\n                            {\r\n                                Header: 'Gross Weight',\r\n                                accessor: 'GrossWeight',\r\n                            },\r\n                        ]} data={tableValues} tableValues={tableValues} \r\n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\r\n                        />\r\n                    }\r\n                </Grid>\r\n                <Backdrop open={openBackdrop}>\r\n                    <CircularProgress color=\"inherit\" />\r\n                </Backdrop>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default withSnackbar(PackingListTable)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddPackingList from '../AddPackingList'\r\nimport ViewPackingList from '../PackingListTable'\r\nimport DeletePackingList from '../PackingListTable/deletePackingList'\r\n// import MarkersTable from '../MarkersTable'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst PackingList = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Packing List</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Add Packing List\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        <Tab label=\"View Packing List\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\r\n                        <Tab label=\"Delete Packing List\" {...a11yProps(2)} style={{color:'#fff',borderBottom:value===2?'3px solid white':''}}/>\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <AddPackingList />\r\n                        {/* <div>asdf</div> */}\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <ViewPackingList/>\r\n                        {/* <MarkersTable /> */}\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <DeletePackingList/>\r\n                    </TabPanel>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default PackingList","import React from 'react'\r\nimport { Grid, TextField, Button,Backdrop,CircularProgress, Typography } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport Select, { components } from 'react-select'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Tooltip from '@atlaskit/tooltip';\r\n\r\n\r\nconst options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' }\r\n  ]\r\n\r\nconst PlanSimulate = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [textFields,setTextFields] = React.useState({\r\n        targetMinutes:480,\r\n        plannedEfficiency:100\r\n    })\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [count, setCount] = React.useState(null)\r\n    const [somethingChanged, setSomethingChanged] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    //const [sizes,setSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [operations,setOperations] = React.useState([])\r\n    const [machineTypes,setMachineTypes] = React.useState([])\r\n    //const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    \r\n    const [value, setValue] = React.useState('target');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        recalculate(tableValues)\r\n    },[value])\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            // console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res operations',res)\r\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\r\n            setOperations(ops)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res machine Types',res)\r\n            setMachineTypes(res.machine_types)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n\r\n        \r\n    },[])\r\n\r\n    \r\n    const handleUpdateTable = async () => {\r\n        // console.log('modalValues',modalValues)\r\n        // console.log('tableVlaue',tableValues)\r\n        let tempTable = await Promise.all(tableValues.map(v => {\r\n            if(v.style_id===modalValues.style_id){\r\n                return modalValues\r\n            }else{\r\n                return v\r\n            }\r\n        }))\r\n        console.log('newTable',tempTable)\r\n        setTableValues(tempTable)\r\n        setSomethingChanged(true)\r\n        setModalVisible(false)\r\n\r\n        //let \r\n\r\n    }\r\n\r\n    // const handleUpdate = async () => {\r\n    //     console.log('tableValues',tableValues)\r\n    //     setLoading(true)\r\n    //     let table = await Promise.all(tableValues.map(t => ({...t,Style_id:t.style_id,target:t.order_target,time_for_target:t.allocated_time_for_target})))\r\n    //     try{\r\n    //         let url = api_endpoint+`/Jordan/SPTS/style/updateStyleBulletin.php`;\r\n    //         console.log('url',url)\r\n    //         fetch(url,{\r\n    //             method: 'post',\r\n    //             body: JSON.stringify({styleBulletin:table})\r\n    //         })\r\n    //         .then(res => res.json())\r\n    //         .then(res => {\r\n    //             setLoading(false)\r\n    //             console.log('res: ',res)\r\n    //             setTableValues([])\r\n    //             setSomethingChanged(false)\r\n    //             props.enqueueSnackbar('Updated Style Bulletin Successfully!', { \r\n    //                 variant: 'info',\r\n    //             })\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log('error while fetching',err)\r\n    //             setLoading(false)\r\n    //             props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n    //                 variant: 'info',\r\n    //             })\r\n    //         })\r\n    //     }catch(err){\r\n    //         console.log('err in try catch',err)\r\n    //         setLoading(false)\r\n    //         props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n    //             variant: 'info',\r\n    //         })\r\n    //     }\r\n\r\n    // }\r\n\r\n    const fetchAndUpdateWorkers = async (res) => {\r\n        let plans = await Promise.all(res.Style_Bulletin.map(async s => {\r\n            // API to fetch Plans\r\n            let url = api_endpoint+`/Jordan/SPTS/planning/getPlanForOperation.php?operation_id=${s.operation_id}`;\r\n            console.log('url',url)\r\n            let plansFromFetch = await fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(async r => {\r\n                console.log('res--> ',r)\r\n                if(r.Plan){\r\n                    // console.log(r.Plan)\r\n                    let formattedPlans = await Promise.all(r.Plan.map(p => ({...p,label:p.worker_name+', ppm: '+p.ppm+', Op Sam: '+(1/parseFloat(p.ppm)).toFixed(2),value:p.worker_id})))\r\n                    return {...s,workersForThisOperation:formattedPlans,selectedWorkers:[]}\r\n                }else{\r\n                    return {...s,workersForThisOperation:[],selectedWorkers:[]}\r\n                }\r\n            })\r\n            return plansFromFetch\r\n            // console.log(s)\r\n        }))\r\n\r\n        setCount(plans.length)\r\n        setLoading(false)\r\n        recalculate(plans)\r\n    }\r\n\r\n    \r\n\r\n    const handleFetch = () => {\r\n        setCount(null)\r\n\r\n        console.log('state: ',state)\r\n        console.log('tableValues: ',tableValues)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/style/getStyleBulletinForStyleCode.php?style_code=${state.style}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(async res => {\r\n                \r\n                console.log('res: ',res)\r\n\r\n                if(res.Style_Bulletin){\r\n                   fetchAndUpdateWorkers(res)\r\n                }else{\r\n                    setLoading(false)\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSelect = async (values,row) => {\r\n        // console.log('what: ',what)\r\n        let newTableValues = await Promise.all(tableValues.map(tV => {\r\n            if(tV.operation_id===row.operation_id){\r\n                return ({...tV,selectedWorkers:values})\r\n            }else{\r\n                return tV\r\n            }\r\n        }))\r\n        recalculate(newTableValues)\r\n    }\r\n\r\n    const recalculate = async (tableValues) => {\r\n        let newTableValues = await Promise.all(tableValues.map(async tV => {\r\n            // console.log(tV)\r\n            let production = 0 \r\n            let minutes = 0 \r\n            await Promise.all(tV.selectedWorkers.map(sW => {\r\n                production = production + sW.ppm\r\n            }))\r\n            if(value==='minutes'){\r\n                minutes = textFields.targetMinutes\r\n                production = ((production * parseFloat(textFields.targetMinutes))).toFixed(2)\r\n            }else{\r\n                console.log('production -> ',production)\r\n                minutes = production === 0? 0: ((1/production)* parseFloat(textFields.targetMinutes)).toFixed(2)\r\n                production = textFields.targetMinutes\r\n            }\r\n            console.log('-----------------------------------------------> ',production)\r\n            return ({...tV,production,minutes})\r\n        }))\r\n        setTableValues(newTableValues)\r\n    }\r\n\r\n    const handleTextFields = (e,attr) => {\r\n        setTextFields({...textFields,[attr]:e.target.value})\r\n        recalculate(tableValues)\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10}}>\r\n                        Update The Following Information For Style\r\n                    </div>\r\n                    {\r\n                        modalValues?\r\n                        <Grid container style={{padding:10}}>\r\n                            {\r\n                                console.log('modalValues ====> ',modalValues)\r\n                            }\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={operations}\r\n                                getOptionLabel={option => option.operation}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={()=>operations.filter(o => o.operation_code===modalValues.operation_code)[0]}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,operation_id:v.operation_id,operation_code:v.operation_code,operation_description:v.operation_description})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={machineTypes}\r\n                                getOptionLabel={option => option.machine_type}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={{machine_type:modalValues.machine_type}}\r\n                                //value={modalValues.machine_type}\r\n                                //defaultValue={() => machineTypes.filter(t => t.)}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,machine_type:v.machine_type})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" value={modalValues.operation_sequence} onChange={e=>setModalValues({...modalValues,operation_sequence:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" value={modalValues.order_target} onChange={e=>setModalValues({...modalValues,order_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" value={modalValues.allocated_time_for_target} onChange={e=>setModalValues({...modalValues,allocated_time_for_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" value={modalValues.no_of_operators} onChange={e=>setModalValues({...modalValues,no_of_operators:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" value={modalValues.no_of_helpers} onChange={e=>setModalValues({...modalValues,no_of_helpers:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                    }\r\n                    <div style={{display:'flex',justifyContent:'center'}}>\r\n                        <Button color='primary' fullWidth onClick={handleUpdateTable} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            {\r\n                                loading === true?\r\n                                <CircularProgress color={'#fff'}/>\r\n                                :\r\n                                `Update`\r\n                            }\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => {if(v){setState({...state,style:v.style_code})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                    <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{height:55,color:'#fff'}} fullWidth>\r\n                        fetch\r\n                    </Button>\r\n                    \r\n                    {/* <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,color:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> */}\r\n                </Grid>\r\n                {\r\n                    count !== null?\r\n                    <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:15,marginTop:15}}>\r\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\r\n                                No Of Operations: {count}\r\n                            </Typography>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                }\r\n                <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15,textAlign:'end'}}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange} style={{alignItems:'center',flexDirection:'row'}}>\r\n                                <FormLabel component=\"legend\" style={{marginRight:15}}>Select:</FormLabel>\r\n                                <FormControlLabel value=\"target\" control={<Radio />} label=\"Target\" />\r\n                                <FormControlLabel value=\"minutes\" control={<Radio />} label=\"Minutes\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15}}>\r\n                        <TextField fullWidth label={\"Available \"+value} variant=\"outlined\" type=\"number\" value={textFields.targetMinutes} onChange={e=>handleTextFields(e,'targetMinutes')} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15}}>\r\n                        <TextField fullWidth label=\"Planned Efficiency\" variant=\"outlined\" type=\"number\" value={textFields.plannedEfficiency} onChange={e=>handleTextFields(e,'plannedEfficiency')} />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        loading===true?\r\n                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th style={{width:500}}>Workers</th>\r\n                                <th>Code</th>\r\n                                <th>Desc</th>\r\n                                <th>Seq</th>\r\n                                <th>Production</th>\r\n                                <th>Minutes</th>\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>\r\n                                                <Select \r\n                                                    isMulti\r\n                                                    styles={{ option: (base) => ({ ...base, border: `1px solid black`, height: '100%' }) }}\r\n                                                    onChange={values => handleSelect(values,v)} \r\n                                                    options={v?v.workersForThisOperation?v.workersForThisOperation:[]:[]}\r\n                                                    components={{Option}} \r\n                                                />\r\n                                            </td>\r\n                                            <td>{v.operation_code}</td>\r\n                                            <td>{v.operation_description}</td>\r\n                                            <td>{v.operation_sequence}</td>\r\n                                            <td>{v.production}</td>\r\n                                            <td>{v.minutes}</td>\r\n                                           \r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                            <Backdrop open={openBackdrop}>\r\n                                <CircularProgress color=\"inherit\" />\r\n                            </Backdrop>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Option = props => {\r\n    console.log('props ---> ',props)\r\n    return(<Tooltip content={'something'}>\r\n         <components.Option {...props}/>\r\n    </Tooltip>)\r\n}\r\n\r\nexport default withSnackbar(PlanSimulate)","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n//import SwipeableViews from 'react-swipeable-views';\r\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport AddStyleBulletin from '../AddStyleBulletin'\r\nimport PlanSimulate from '../PlanSimulateTab'\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && <Box p={3}>{children}</Box>}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `full-width-tab-${index}`,\r\n        'aria-controls': `full-width-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        width: 500,\r\n    },\r\n}));\r\n\r\n\r\nconst StyleBulletin = props => {\r\n\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = index => {\r\n        setValue(index);\r\n    };\r\n\r\n\r\n    return (\r\n        <div style={{ padding: 20 }}>\r\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Plan Simulate</Typography></div>\r\n            <div style={{display:'flex',justifyContent:'center'}}>\r\n                <div style={{width:'100%'}}>\r\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\r\n                        <Tabs\r\n                        value={value}\r\n                        onChange={handleChange}\r\n                        indicatorColor=\"#fff\"\r\n                        textColor=\"primary\"\r\n                        variant=\"fullWidth\"\r\n                        aria-label=\"full width tabs example\"\r\n                        >\r\n                        <Tab label=\"Simulate\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\r\n                        {/* <Tab label=\"View Style Bulletin\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <PlanSimulate />\r\n                    </TabPanel>\r\n                    {/* <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\r\n                        <ViewStyleBulletin />\r\n                    </TabPanel> */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default StyleBulletin","import React from 'react'\r\nimport Header from '../../../components/ProductionTrackingHeader'\r\nimport Workers from '../../../components/Workers'\r\nimport Orders from '../../../components/Orders'\r\nimport Operations from '../../../components/Operations'\r\nimport Markers from '../../../components/Marker'\r\nimport RollIssuance from '../../../components/RollIssuance'\r\nimport CutJob from '../../../components/CutJob'\r\nimport CutReport from '../../../components/CutReport'\r\nimport StyleBulletin from '../../../components/StyleBulletin'\r\nimport IE from '../../../components/IECharts'\r\nimport PO from '../../../components/PO'\r\nimport AssignPOtoBundle from '../../../components/AssignPOtoBundle'\r\nimport ManualStocking from '../../../components/ManualStocking'\r\nimport CardAssignment from '../../../components/CardAssignment'\r\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\r\nimport ChartIcon from '@material-ui/icons/BarChart'\r\nimport { Typography } from '@material-ui/core'\r\nimport PackingList from '../../../components/PackingList'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport HomeIcon from '@material-ui/icons/HomeWork';\r\nimport DeviceIcon from '@material-ui/icons/DeviceHub';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import CssBaseline from '@material-ui/core/CssBaseline';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\n//import Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Link } from 'react-router-dom'\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport PlanSimulate from '../../../components/PlanSimulate'\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: drawerWidth,\r\n    backgroundColor:'#212121'\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n}));\r\n\r\nconst ProductionTracking = props => {\r\n    const classes = useStyles();\r\n\r\n    const [sptsValue,setSptsValue] = React.useState('') \r\n\r\n    return(<div>\r\n        {/* <Header setSptsValue={setSptsValue} /> */}\r\n        <div style={{paddingLeft:240,backgroundColor:'#fff'}}>\r\n\r\n        <Drawer\r\n        className={classes.drawer}\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        {/* <div className={classes.toolbar} /> */}\r\n            <div style={{display:'flex',justifyContent:'center',backgroundColor:'#212121',paddingTop:20,paddingBottom:20}}>\r\n                <img src={require('../../../assets/WiMetrix.png')} alt=\"Logo\" style={{width:190}}/>\r\n            </div>\r\n            <Divider />\r\n            {/* <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\r\n            <Typography variant=\"h6\" color='primary'>\r\n                Reports&nbsp;\r\n            </Typography>\r\n            <ChartIcon color='primary'/>\r\n        </div> */}\r\n        {/* <List style={{padding:10}}>\r\n            <ListItem onClick={()=>setSptsValue('ieReport')} button key={'ieReport'} style={{backgroundColor:sptsValue === 'ieReport'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'IE Reports'} />\r\n            </ListItem>\r\n        </List> */}\r\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\r\n            <Typography variant=\"h6\" color='primary'>\r\n                Warehouse&nbsp;\r\n            </Typography>\r\n            <HomeIcon color='primary'/>\r\n        </div>\r\n        <List style={{padding:10}}>\r\n            <ListItem onClick={()=>setSptsValue('packingList')} button key={'packingList'} style={{backgroundColor:sptsValue === 'packingList'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Packing List'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('manualStocking')} button key={'manualStocking'} style={{backgroundColor:sptsValue === 'manualStocking'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Manual Stocking'} />\r\n            </ListItem>\r\n            {/* <ListItem onClick={()=>setSptsValue('cardAssignment')} button key={'cardAssignment'} style={{backgroundColor:sptsValue === 'cardAssignment'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Card Assignment'} />\r\n            </ListItem> */}\r\n            {/* <ListItem onClick={()=>setSptsValue('rollIssuance')} button key={'rollIssuance'} style={{backgroundColor:sptsValue === 'rollIssuance'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Roll Issuance'} />\r\n            </ListItem> */}\r\n        </List>\r\n        <Divider />\r\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\r\n            <Typography variant=\"h6\" color='primary'>\r\n                Cutting&nbsp;\r\n            </Typography>\r\n            <DeviceIcon color='primary'/>\r\n        </div>\r\n        <List style={{padding:10}}>\r\n            <ListItem onClick={()=>setSptsValue('marker')} button key={'marker'} style={{backgroundColor:sptsValue === 'marker'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Marker'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('po')} button key={'po'} style={{backgroundColor:sptsValue === 'po'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'PO'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('cutJob')} button key={'cutJob'} style={{backgroundColor:sptsValue === 'cutJob'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Cut Job'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('cutReport')} button key={'cutReport'} style={{backgroundColor:sptsValue === 'cutReport'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Cut Report'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('assignPO')} button key={'assignPO'} style={{backgroundColor:sptsValue === 'assignPO'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Assign PO to Bundle'} />\r\n            </ListItem>\r\n        </List>\r\n        <Divider />\r\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\r\n            <Typography variant=\"h6\" color='primary'>\r\n                SPTS&nbsp;\r\n            </Typography>\r\n            <SettingsIcon color='primary'/>\r\n        </div>\r\n        <List style={{padding:10}}>\r\n            <ListItem onClick={()=>setSptsValue('workers')} button key={'workers'} style={{backgroundColor:sptsValue === 'workers'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Workers'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('orders')} button key={'orders'} style={{backgroundColor:sptsValue === 'orders'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Orders'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('operations')} button key={'operations'} style={{backgroundColor:sptsValue === 'operations'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Operations'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('styleBulletin')} button key={'styleBulletin'} style={{backgroundColor:sptsValue === 'styleBulletin'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Style Bulletin'} />\r\n            </ListItem>\r\n            <ListItem onClick={()=>setSptsValue('planSimulate')} button key={'planSimulate'} style={{backgroundColor:sptsValue === 'planSimulate'?'#418832':'',color:'#fff'}}>\r\n              <ListItemText primary={'Plan Simulate'} />\r\n            </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <div style={{padding:'30px 30px 10px',display:'flex',justifyContent:'space-between',alignItems:'flex-end'}}>\r\n      <Typography color='primary' style={{fontWeight:'500'}} variant=\"h4\">Rainbow</Typography>\r\n      <Link to='/'>\r\n        <Typography color='primary' style={{fontWeight:'500'}} variant=\"subtitle\">Logout</Typography>  \r\n      </Link>\r\n      </div>\r\n      <div style={{margin:'0px 30px 10px',borderBottom:'1px solid lightgrey'}}>\r\n\r\n      </div>\r\n \r\n        {\r\n            sptsValue === 'workers'?\r\n            <Workers />\r\n            :\r\n            sptsValue === 'operations'?\r\n            <Operations />\r\n            :\r\n            sptsValue === 'orders'?\r\n            <Orders />\r\n            :\r\n            sptsValue === 'marker'?\r\n            <Markers />\r\n            :\r\n            sptsValue === 'cutJob'?\r\n            <CutJob />\r\n            :\r\n            sptsValue === 'cutReport'?\r\n            <CutReport />\r\n            :\r\n            sptsValue === 'styleBulletin'?\r\n            <StyleBulletin />\r\n            :\r\n            sptsValue === 'assignPO'?\r\n            <AssignPOtoBundle />\r\n            :\r\n            sptsValue === 'po'?\r\n            <PO />\r\n            :\r\n            sptsValue === 'packingList'?\r\n            <PackingList />\r\n            :\r\n            sptsValue === 'manualStocking'?\r\n            <ManualStocking />\r\n            :\r\n            sptsValue === 'rollIssuance'?\r\n            <RollIssuance />\r\n            :\r\n            sptsValue === 'ieReport'?\r\n            <IE />\r\n            :\r\n            sptsValue === 'cardAssignment'?\r\n            <CardAssignment />\r\n            :\r\n            sptsValue === 'planSimulate'?\r\n            <PlanSimulate />\r\n            :\r\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:400}}>\r\n                <div>\r\n                    <div style={{textAlign:'center',marginBottom:20}}><InfoIcon color='primary' style={{fontSize:70}} /></div>\r\n                    <div>\r\n                        <Typography variant=\"h6\" color='secondary'>\r\n                            Select An Option\r\n                        </Typography> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n        }\r\n        </div>\r\n    </div>)\r\n}\r\n\r\nexport default ProductionTracking"],"sourceRoot":""}