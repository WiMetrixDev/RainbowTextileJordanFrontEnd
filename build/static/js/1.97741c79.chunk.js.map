{"version":3,"sources":["util/config.js","components/ProductionTrackingHeader/index.js","components/AddWorkers/index.js","components/WorkersTable/index.js","components/Workers/index.js","components/AddOrders/index.js","components/OrdersTable/index.js","components/Orders/index.js","components/AddOperation/index.js","components/OperationsTable/index.js","components/Operations/index.js","components/AddMarkers/index.js","components/MarkersTable/index.js","components/Marker/index.js","components/AddRollIssuance/index.js","components/RollIssuance/index.js","components/AddCutJob/index.js","components/ExecuteCutJob/index.js","components/CutJob/index.js","components/CutReportTable/index.js","components/CutReportMappingTable/index.js","components/CutReport/index.js","components/AddStyleBulletin/index.js","components/ViewStyleBulletin/index.js","components/StyleBulletin/index.js","components/LineWiseTotalProduction/index.js","components/IECharts/index.js","components/AddPO/index.js","components/POTable/index.js","components/PO/index.js","components/AssignPO/index.js","components/AssignPOtoBundle/index.js","components/StockIn/index.js","components/StockOut/index.js","components/ManualStocking/index.js","components/Table.js","components/AddPackingList/index.js","components/PackingListTable/index.js","components/PackingList/index.js","components/PlanSimulateTab/index.js","components/PlanSimulate/index.js","containers/pages/ProductionTracking/index.js"],"names":["module","exports","basic_url","random_string","api_endpoint","useStyles","makeStyles","theme","root","flexGrow","display","menuButton","marginRight","spacing","title","withRouter","props","classes","React","useState","className","AppBar","position","style","backgroundColor","color","CssBaseline","Toolbar","justifyContent","src","require","alt","width","Typography","variant","alignItems","cursor","onClick","history","push","withSnackbar","designations","setDesignations","deparments","setDepartments","state","setState","setLoading","useEffect","fetch","then","res","json","console","log","Departments","catch","err","Designations","Grid","container","item","lg","md","sm","xs","padding","TextField","value","workerId","onChange","e","target","name","fullWidth","label","workerName","Autocomplete","options","getOptionLabel","option","department_code","v","department","renderInput","params","designation_code","designation","Button","height","url","designation_id","department_id","method","Error_No","enqueueSnackbar","Error_Description","GlobalFilter","preGlobalFilteredRows","globalFilter","setGlobalFilter","undefined","InputProps","endAdornment","InputAdornment","MyTable","columns","data","setModalValues","setModalVisible","useTable","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","rows","previousPage","pageIndex","pageSize","canPreviousPage","nextPage","page","canNextPage","pageOptions","gotoPage","setPageSize","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","textAlign","original","disabled","length","modalVisible","modalValues","tableValues","setTableValues","editState","setEditState","fetchWorkers","Workers","Dialog","open","marginBottom","worker_code","worker_name","worker_id","designator_id","designator_code","CircularProgress","Header","accessor","TabPanel","children","index","other","component","role","hidden","id","aria-labelledby","Box","p","a11yProps","palette","background","paper","useTheme","setValue","marginTop","borderTopLeftRadius","borderTopRightRadius","Tabs","event","newValue","indicatorColor","textColor","aria-label","Tab","borderBottom","dir","direction","borderBottomLeftRadius","borderBottomRightRadius","buyer","handleDelete","setOpenBackdrop","openBackdrop","setDeleteLoader","fetchOrders","Orders","buyer_code","style_code","order_id","order_description","otn","record","Backdrop","operationCode","operationDescription","operationSMV","type","min","pieceRate","fetchOperations","Operations","operation_code","operation_description","operation_smv","piece_rate","operation_id","AddOperation","sizes","setSizes","styles","setStyles","colors","setColors","Colors","size","Styles","Sizes","values","quantity","s","uuid","size_id","size_code","margin","no_of_plies","marker_description","draft","filter","d","JSON","stringify","loading","marker_id","Markers","fetchMarkers","Marker","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","current","handleUpload","useRowSelect","hooks","visibleColumns","getToggleAllRowsSelectedProps","Cell","getToggleRowSelectedProps","selectedRowIds","fontSize","Object","keys","invoiceNumbers","setInvoiceNumbers","departments","args","a","allowed_movement_id","keysArray","rolls","item_id","parseInt","new_length","obj","rolls_list","body","Responses","Invoices","fetchInvoiceNumbers","onBackdropClick","top","right","mV","invoice_code","invoice","Rolls","RollIssuance","markers","setMarkers","marker","cut_description","no_of_layers","part_name","cutJobs","setCutJobs","fetchCutJobs","CutJobs","cutJob","cut_job_id","cut_job_description","no_of_bundles","CutJob","count","setCount","Cut_Report","paddingTop","fontWeight","alert","CutReport","spreadSheetButtonVisible","setSpreadSheetButtonVisible","modalVisible2","setModalVisible2","responses","setResponses","operations","setOperations","machineTypes","setMachineTypes","Promise","all","o","operation","ops","machine_types","operation_sequence","machine_type","machineType","sequence","timeForTarget","noOfOperators","noOfHelpers","no_of_operators","no_of_helpers","time_for_target","fulLWidth","marginLeft","files","readXlsxFile","arr","styleBulletin","somethingChanged","setSomethingChanged","handleUpdateTable","style_id","tempTable","handleUpdate","t","Style_id","order_target","allocated_time_for_target","table","handleFetch","Style_Bulletin","defaultValue","Number","StyleBulletin","MyResponsiveBar","attr","attrAxis","orientation","x","y","IECharts","Paper","flexDirection","LineWiseTotalProduction","po_description","po_id","PO","overflowY","po_code","cuts","setCuts","pos","setPOs","bundles","setBundles","checked","setChecked","fetchStyles","fetchPOs","fetchColorsForStyleCodes","Cuts","fetchCutForOrder","cut","cut_code","Bundles","fetchBundleForCut","handleAdd","bundle","b","bundle_id","bundlesToSend","po","remarks","toString","FormControlLabel","control","Checkbox","inputProps","multiple","disableCloseOnSelect","bundle_code","multiline","AssignBundle","selectedFlatRows","invoiceCodes","setInvoiceCodes","setRolls","handleRollIntention","array","error","rfid_tag_id","newRolls","r","fetchInvoiceCodes","invoiceCode","PackingList","defaultColumn","initialValue","updateMyData","onBlur","border","Table","skipPageReset","autoResetPage","pageCount","App","useMemo","setData","setSkipPageReset","rowIndex","columnId","addIcon","zIndex","distance","setDistance","setUnit","anchorEl","setAnchorEl","handleClose","uploadVisible","setUploadVisible","noOfRolls","setNoOfRolls","excelLoading","setExcelLoading","handleAppend","newArr","temp","ajaxTime","Date","getTime","packing_list","totalTime","invoice_no","supplier","lot","net_weight","gross_weight","fabric_type","roll_no","season_code","RadioGroup","Radio","Menu","keepMounted","Boolean","onClose","MenuItem","Packing_List","Option","Tooltip","content","targetMinutes","plannedEfficiency","textFields","setTextFields","recalculate","fetchAndUpdateWorkers","Plan","ppm","parseFloat","toFixed","formattedPlans","workersForThisOperation","selectedWorkers","plansFromFetch","plans","handleSelect","tV","newTableValues","production","minutes","sW","handleTextFields","FormControl","FormLabel","isMulti","base","components","appBar","drawer","flexShrink","drawerPaper","toolbar","mixins","ProductionTracking","sptsValue","setSptsValue","paddingLeft","Drawer","paddingBottom","Divider","List","ListItem","button","key","ListItemText","primary","to","AssignPOtoBundle","ManualStocking"],"mappings":"mFAAAA,EAAOC,QAAU,CACbC,UAAW,qCACXC,cAAe,gBAEfC,aAAa,4B,kWCYXC,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,EACVC,QAAQ,QAGVC,WAAY,CACVC,YAAaL,EAAMM,QAAQ,IAE7BC,MAAO,CACLL,SAAU,O,GAgICM,aA5HM,SAAAC,GACnB,IAAMC,EAAUZ,IADY,EAEYa,IAAMC,SAAS,MAF3B,gCAGsBD,IAAMC,SAAS,OAHrC,gCAIUD,IAAMC,SAAS,OAJzB,6BA2B5B,OACE,yBAAKC,UAAWH,EAAQT,MACtB,kBAACa,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAO,CAACC,gBAAgB,OAAOC,MAAM,YAC7D,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAASJ,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBAC3C,6BACI,yBAAKC,IAAKC,EAAQ,KAA8BC,IAAI,OAAOR,MAAO,CAACS,MAAM,QAE7E,yBAAKT,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACzC,kBAACK,EAAA,EAAD,CAAYR,MAAM,YAAYS,QAAQ,MAAtC,YA8EF,yBAAKX,MAAO,CAACb,QAAQ,OAAOyB,WAAW,SAASC,OAAO,WAAYC,QAAS,kBAAIrB,EAAMsB,QAAQC,KAAK,OAC/F,kBAACN,EAAA,EAAD,CAAYC,QAAQ,YAAYX,MAAO,CAACa,OAAO,YAA/C,UACA,kBAAC,IAAD,a,oFCFDI,0BAzII,SAAAxB,GAAU,IAAD,EAEeE,IAAMC,SAAS,IAF9B,mBAEjBsB,EAFiB,KAEJC,EAFI,OAGYxB,IAAMC,SAAS,IAH3B,mBAGjBwB,EAHiB,KAGNC,EAHM,OAIC1B,IAAMC,SAAS,IAJhB,mBAIjB0B,EAJiB,KAIXC,EAJW,OAKK5B,IAAMC,UAAS,GALpB,mBAKT4B,GALS,WAwFxB,OAxBA7B,IAAM8B,WAAU,WAEZC,MAAM7C,eAAa,0CAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,kBAAkBH,GAC9BP,EAAeO,EAAII,mBAEtBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,2CAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,mBAAmBH,GAC/BT,EAAgBS,EAAIO,oBAEvBF,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAGjC,IAGE,6BACI,kBAACE,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMwB,SAAUC,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWwB,SAASE,EAAEC,OAAOJ,UAASK,KAAK,WAAWvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,eAEtJ,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAM+B,WAAYN,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAW+B,WAAWL,EAAEC,OAAOJ,UAASK,KAAK,aAAavC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,iBAE5J,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASnC,EACToC,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,iBACjC1D,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWsC,WAAWD,MACjDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,aAAazC,QAAQ,WAAWwC,WAAS,SAKlF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACW,EAAA,EAAD,CAEQC,QAASrC,EACTsC,eAAgB,SAAAC,GAAM,OAAIA,EAAOM,kBACjC/D,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAW0C,YAAYL,MAClDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,cAAczC,QAAQ,WAAWwC,WAAS,SAKnF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QAzHF,WASdU,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,oDAAD,OAAqDyC,EAAMwB,SAA3D,wBAAmFxB,EAAM+B,WAAzF,0BAAqH/B,EAAM0C,YAAYI,eAAvI,4BAAyK9C,EAAM0C,YAAYD,iBAA3L,0BAA6NzC,EAAMsC,WAAWS,cAA9O,4BAA+Q/C,EAAMsC,WAAWF,iBACtT5B,QAAQC,IAAI,QAAQoC,GAEpBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,SACH9E,EAAM+E,gBAAgB,6BAA8B,CAChD7D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAOxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCzC,EAAM+E,gBAAgB,6BAA8B,CAChD7D,QAAS,SAEba,GAAW,MAElB,MAAMU,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BzC,EAAM+E,gBAAgB,6BAA8B,CAChD7D,QAAS,SAEba,GAAW,KAsEC2B,WAAS,GALb,oB,iFCvHpB,SAASuB,EAAT,GAIK,EAHDC,sBAGE,IAFFC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAIA,OACE,8BACE,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,gBACNP,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQjE,SAASqE,EAAT,GAAoE,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,KAAKC,EAAkC,EAAlCA,eAAeC,EAAmB,EAAnBA,gBAAmB,EAqBzDC,YAAS,CACXJ,UACAC,QACAI,IAAgBC,KArBhBC,EAH2D,EAG3DA,cACAC,EAJ2D,EAI3DA,kBACAC,EAL2D,EAK3DA,aAEAC,GAP2D,EAM3DC,KAN2D,EAO3DD,YACAE,EAR2D,EAQ3DA,aAR2D,IAS3DzE,MAAS0E,EATkD,EASlDA,UAAqBpB,GAT6B,EASvCqB,SATuC,EAS7BrB,cAC9BsB,EAV2D,EAU3DA,gBACAC,EAX2D,EAW3DA,SACAC,EAZ2D,EAY3DA,KACAC,EAb2D,EAa3DA,YAEAC,EAf2D,EAe3DA,YAEAzB,GAjB2D,EAgB3D0B,SAhB2D,EAiB3D1B,iBACAF,EAlB2D,EAkB3DA,sBAlB2D,EAoB3D6B,YAgBJ,OACI,yBAAKxG,MAAO,CAACS,MAAM,QACf,6BACI,kBAACiE,EAAD,CACIC,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,KAGzB,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,cAElD,kCAIN,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAEd,OADApB,EAAWmB,GAET,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,YAErD,wBAAI/G,MAAO,CAAEsH,UAAW,WAAY,kBAAC,IAAD,CAAUpH,MAAM,UAAUY,QAAS,WACvCwE,GAAgB,GAChBD,EAAe2B,EAAIO,WACpBvH,MAAO,CAAEa,OAAQ,UAAWxB,YAAa,aAqC5E,yBAAKW,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eA6BhB,IA0OepF,0BA1OM,SAAAxB,GAAU,IAAD,EAEUE,IAAMC,SAAS,IAFzB,gCAGaD,IAAMC,SAAS,KAH5B,mBAGnBsB,EAHmB,KAGNC,EAHM,OAIUxB,IAAMC,SAAS,IAJzB,mBAInBwB,EAJmB,KAIRC,EAJQ,OAKc1B,IAAMC,UAAS,GAL7B,mBAKnB8H,EALmB,KAKLpC,EALK,OAMY3F,IAAMC,SAAS,MAN3B,mBAMnB+H,EANmB,KAMNtC,EANM,OAOY1F,IAAMC,SAAS,MAP3B,mBAOnBgI,EAPmB,KAONC,EAPM,OAQOlI,IAAMC,SAAS,IARtB,mBAQnBkI,EARmB,KAQTC,EARS,OASGpI,IAAMC,UAAS,GATlB,mBASX4B,GATW,WAW1B7B,IAAM8B,WAAU,WACZK,QAAQC,IAAI,cAAc4F,GAC1BI,EAAaJ,KACf,CAACA,IAEH,IAgDMK,EAAe,WACjB,IACItG,MAAM7C,eAAe,sCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZiG,EAAejG,EAAIqG,YAEtBhG,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B2F,EAAe,OAEzB,MAAO3F,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC2F,EAAe,MA2BvB,OAvBAlI,IAAM8B,WAAU,WACZuG,IACAtG,MAAM7C,eAAa,0CAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,kBAAkBH,GAC9BP,EAAeO,EAAII,mBAEtBC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,2CAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,mBAAmBH,GAC/BT,EAAgBS,EAAIO,oBAEvBF,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAEhC,IAGC,6BAuBI,kBAACgG,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAE1BqH,EACI,oCACI,yBAAK9H,MAAO,CAAEsH,UAAW,SAAUc,aAAc,KAAM,kBAAC1H,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBACvD,kBAACyB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWC,MAAOiF,EAAUO,YAAatF,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAID,EAAL,CAAeO,YAAYrF,EAAEC,OAAOJ,UAASK,KAAK,WAAWvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,eAExK,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWC,MAAOiF,EAAUQ,YAAavF,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAID,EAAL,CAAeQ,YAAYtF,EAAEC,OAAOJ,UAASK,KAAK,aAAavC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,iBAE1K,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CAEIC,QAASnC,EACToC,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,iBACjC1D,MAAO,CAAES,MAAO,QAChB+G,UAAU,EAGV3D,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,aAAazC,QAAQ,WAAWwC,WAAS,SAIlF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CAEIC,QAASrC,EACTsC,eAAgB,SAAAC,GAAM,OAAIA,EAAOM,kBACjC/D,MAAO,CAAES,MAAO,QAChB+G,UAAU,EAEV3D,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,cAAczC,QAAQ,WAAWwC,WAAS,SAInF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QA5J/G,WACjBgB,QAAQC,IAAI,YAAY+F,GAExB,IACI,IAAI3D,EAAMtF,eAAa,kDAAD,OAAmDiJ,EAAUS,UAA7D,wBAAsFT,EAAUO,YAAhG,wBAA2HP,EAAUQ,YAArI,0BAAkKR,EAAUzD,cAA5K,4BAA6MyD,EAAUpE,gBAAvN,0BAAwPoE,EAAUU,cAAlQ,4BAAmSV,EAAUW,iBACnU3G,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,UACH9E,EAAM+E,gBAAgB,+BAAgC,CAClD7D,QAAS,SAEbqH,IACA1C,GAAgB,IAEkB,kBAAxB1D,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,+BAAgC,CAClD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,+BAAgC,CAClD7D,QAAS,YAiHe,WAEJ,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QAAS,kBAAMwE,GAAgB,KAA/H,aAIV,OAIlB,yBAAKtF,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAEvB,OAAhBuH,EACI,yBAAK5H,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,kBAACgF,EAAD,CAASC,QAAS,CACd,CACIwD,OAAQ,YACRC,SAAU,aAEd,CACID,OAAQ,OACRC,SAAU,eAEd,CACID,OAAQ,OACRC,SAAU,gBAEfxD,KAAMwC,EAAaA,YAAaA,EAAavC,eAAgBA,EAAgBC,gBAAiBA,S,kBCrXzH,SAASuD,EAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,EAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAmDAwH,EA9CC,SAAAxI,GAEIX,IAAhB,IACME,EAAQ4K,cAHO,EAIKjK,IAAMC,SAAS,GAJpB,mBAIdiD,EAJc,KAIPgH,EAJO,KAerB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,eAAkBoG,EAAU,GAAvC,CAA2CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OACzG,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,gBAAmBoG,EAAU,GAAxC,CAA4CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAG9G,kBAACgG,EAAD,CAAUhG,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,EAAD,OAEJ,kBAAC/B,EAAD,CAAUhG,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,EAAD,WCGT3J,0BApFG,SAAAxB,GAAU,IAAD,EAEEE,IAAMC,SAAS,IAFjB,mBAEhB0B,EAFgB,KAEVC,EAFU,OAGM5B,IAAMC,UAAS,GAHrB,mBAGR4B,GAHQ,WA0DvB,OACI,6BACI,kBAACY,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMuJ,MAAO9H,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWuJ,MAAM7H,EAAEC,OAAOJ,UAASK,KAAK,QAAQvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,WAE7I,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMtB,MAAO+C,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWtB,MAAMgD,EAAEC,OAAOJ,UAASK,KAAK,QAAQvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,WAE7I,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMpB,MAAO6C,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWpB,MAAM8C,EAAEC,OAAOJ,UAASK,KAAK,QAAQvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,WAE7I,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QAtEF,WASdU,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,4CAAD,OAA6CyC,EAAMuJ,MAAnD,uBAAuEvJ,EAAMtB,MAA7E,kBAA4FsB,EAAMpB,OACxH4B,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,SACH9E,EAAM+E,gBAAgB,4BAA6B,CAC/C7D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,4BAA6B,CAC/C7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,4BAA6B,CAC/C7D,QAAS,WAuBDwC,WAAS,GALb,mB,kCClEpB,SAASuB,EAAT,GAIK,EAHDC,sBAGE,IAFFC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAIA,OACE,8BACE,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,eACNP,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQjE,SAASqE,EAAT,GAAiG,IAA9EC,EAA6E,EAA7EA,QAASC,EAAoE,EAApEA,KAAKC,EAA+D,EAA/DA,eAAeC,EAAgD,EAAhDA,gBAAgBwF,EAAgC,EAAhCA,aAAaC,EAAmB,EAAnBA,gBAAmB,EAqBtFxF,YAAS,CACXJ,UACAC,QACAI,IAAgBC,KArBhBC,EAHwF,EAGxFA,cACAC,EAJwF,EAIxFA,kBACAC,EALwF,EAKxFA,aAEAC,GAPwF,EAMxFC,KANwF,EAOxFD,YACAE,EARwF,EAQxFA,aARwF,IASxFzE,MAAS0E,EAT+E,EAS/EA,UAAqBpB,GAT0D,EASpEqB,SAToE,EAS1DrB,cAC9BsB,EAVwF,EAUxFA,gBACAC,EAXwF,EAWxFA,SACAC,EAZwF,EAYxFA,KACAC,EAbwF,EAaxFA,YAEAC,EAfwF,EAexFA,YAEAzB,GAjBwF,EAgBxF0B,SAhBwF,EAiBxF1B,iBACAF,EAlBwF,EAkBxFA,sBAlBwF,EAoBxF6B,YAgBJ,OACI,yBAAKxG,MAAO,CAACS,MAAM,QACf,6BACI,kBAAC,EAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,KAGzB,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,cAElD,kCAIN,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAEd,OADApB,EAAWmB,GAET,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,YAErD,wBAAI/G,MAAO,CAAEsH,UAAW,WAAY,kBAAC,IAAD,CAAUpH,MAAM,UAAUY,QAAS,WACnEwE,GAAgB,GAChBD,EAAe2B,EAAIO,WACpBvH,MAAO,CAAEa,OAAQ,UAAWxB,YAAa,MAAQ,kBAAC,IAAD,CAAYa,MAAM,UAAUY,QAAS,WACrFgK,EAAa9D,EAAIO,UAAWwD,GAAgB,IAC7C/K,MAAO,CAAEa,OAAQ,oBAOxB,yBAAKb,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eAQhB,IAkNepF,0BAlNK,SAAAxB,GAAU,IAAD,EAEWE,IAAMC,SAAS,IAF1B,gCAGeD,IAAMC,UAAS,IAH9B,mBAGlB8H,EAHkB,KAGJpC,EAHI,OAIe3F,IAAMC,UAAS,GAJ9B,mBAIlBoL,EAJkB,KAIJD,EAJI,OAKepL,IAAMC,UAAS,GAL9B,mBAKJqL,GALI,aAMatL,IAAMC,SAAS,MAN5B,mBAMlB+H,EANkB,KAMLtC,EANK,OAOa1F,IAAMC,SAAS,MAP5B,mBAOlBgI,EAPkB,KAOLC,EAPK,OAQSlI,IAAMC,SAAS,IARxB,mBAQlBkI,EARkB,KAQPC,EARO,OASKpI,IAAMC,UAAS,GATpB,mBAST4B,GATS,WAWzB7B,IAAM8B,WAAU,WACZK,QAAQC,IAAI,cAAe4F,GAC3BI,EAAaJ,KACd,CAACA,IAEJ,IAiFMuD,EAAc,WAChB,IACIxJ,MAAM7C,eAAe,oCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZiG,EAAejG,EAAIuJ,WAEtBlJ,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B2F,EAAe,OAEzB,MAAO3F,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC2F,EAAe,MAQvB,OAJAlI,IAAM8B,WAAU,WACZyJ,MACD,IAGC,6BACI,kBAAChD,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAE1BqH,EACI,oCACI,yBAAK9H,MAAO,CAAEsH,UAAW,SAAUc,aAAc,KAAM,kBAAC1H,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBACvD,kBAACyB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWM,KAAK,QAAQL,MAAOiF,EAAUsD,WAAYrI,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAKD,EAAN,CAAiBsD,WAAYpI,EAAEC,OAAOJ,UAAUlC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,WAEvK,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWM,KAAK,QAAQL,MAAOiF,EAAUuD,WAAYtI,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAKD,EAAN,CAAiBuD,WAAYrI,EAAEC,OAAOJ,UAAUlC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,WAEvK,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWM,KAAK,QAAQL,MAAOiF,EAAU5H,MAAO6C,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAKD,EAAN,CAAiB5H,MAAO8C,EAAEC,OAAOJ,UAAUlC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,YAGjK,kBAAChB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QA9H/G,WACjBgB,QAAQC,IAAI,YAAa+F,GAEzB,IACI,IAAI3D,EAAMtF,eAAY,sDAAkDiJ,EAAUwD,SAA5D,8BAA0FxD,EAAUyD,kBAApG,gBAA6HzD,EAAU0D,IAAvI,kBAAoJ1D,EAAUsD,WAA9J,uBAAuLtD,EAAUuD,WAAjM,kBAAqNvD,EAAU5H,OACrP4B,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,SAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAASH,GACA,IAAjBA,EAAI2C,UACJ9E,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,SAEbuK,IACA5F,GAAgB,IAEqB,kBAA1B1D,EAAI6C,mBACX3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,GACpCV,GAAW,GACX/B,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,YAGvB,MAAOuB,GACLJ,QAAQC,IAAI,mBAAoBG,GAChCV,GAAW,GACX/B,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,YAmFe,WAEJ,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QAAS,kBAAMwE,GAAgB,KAA/H,aAIV,OAIlB,yBAAKtF,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAEvB,OAAhBuH,EACI,yBAAK5H,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,kBAAC,EAAD,CAASiF,QAAS,CACd,CACIwD,OAAQ,QACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,UAEfxD,KAAMwC,EAAaA,YAAaA,EAAavC,eAAgBA,EAAgBC,gBAAiBA,EAAiBwF,aA7GjH,SAACW,GAElB,IACIR,GAAgB,GAChBF,GAAgB,GAChBrJ,MAAM7C,eAAY,qDAAiD4M,EAAOH,WACrE3J,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFqJ,GAAgB,GAChBF,GAAgB,GAChBjJ,QAAQC,IAAI,oBAAqBH,GACZ,IAAjBA,EAAI2C,WACJ9E,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,SAEbuK,QAIPjJ,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B+I,GAAgB,GAChBF,GAAgB,MAG1B,MAAO7I,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC+I,GAAgB,GAChBF,GAAgB,KAiF0IA,gBAAiBA,IA6BvK,kBAACW,EAAA,EAAD,CAAUvD,KAAM6C,GACZ,kBAACtC,EAAA,EAAD,CAAkBxI,MAAM,kBCnU5C,SAAS2I,EAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,EAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAmDA0K,EA9CA,SAAA1L,GAEKX,IAAhB,IACME,EAAQ4K,cAHM,EAIMjK,IAAMC,SAAS,GAJrB,mBAIbiD,EAJa,KAINgH,EAJM,KAepB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,aAAgBoG,EAAU,GAArC,CAAyCxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OACvG,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,eAAkBoG,EAAU,GAAvC,CAA2CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAG7G,kBAAC,EAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,EAAD,OAEJ,kBAAC,EAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,EAAD,WCDT3J,2BAhFO,SAAAxB,GAAU,IAAD,EAEFE,IAAMC,SAAS,IAFb,mBAEpB0B,EAFoB,KAEdC,EAFc,OAGE5B,IAAMC,UAAS,GAHjB,mBAGZ4B,GAHY,WAmD3B,OACI,6BACI,kBAACY,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMqK,cAAe5I,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWqK,cAAc3I,EAAEC,OAAOJ,UAASK,KAAK,gBAAgBvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,oBAErK,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMsK,qBAAsB7I,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWsK,qBAAqB5I,EAAEC,OAAOJ,UAASK,KAAK,uBAAuBvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,2BAE1L,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMuK,aAAcC,KAAK,SAASC,IAAK,EAAGhJ,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWuK,aAAa7I,EAAEC,OAAOJ,UAASK,KAAK,eAAevC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,mBAExL,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAM0K,UAAWF,KAAK,SAASC,IAAK,EAAGhJ,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAW0K,UAAUhJ,EAAEC,OAAOJ,UAASK,KAAK,YAAYvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,gBAE/K,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QAlEF,WACdU,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,6DAAD,OAA8DyC,EAAMqK,cAApE,kCAA2GrK,EAAMsK,qBAAjH,0BAAuJtK,EAAMuK,aAA7J,uBAAwLvK,EAAM0K,WACpNlK,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,SACH9E,EAAM+E,gBAAgB,gCAAiC,CACnD7D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,gCAAiC,CACnD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,gCAAiC,CACnD7D,QAAS,WA2BDwC,WAAS,GALb,uB,OC9DpB,SAASuB,GAAT,GAIK,EAHDC,sBAGE,IAFFC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAIA,OACE,8BACE,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,mBACNP,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQjE,SAASqE,GAAT,GAAoE,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,KAAKC,EAAkC,EAAlCA,eAAeC,EAAmB,EAAnBA,gBAAmB,EAqBzDC,YAAS,CACXJ,UACAC,QACAI,IAAgBC,KArBhBC,EAH2D,EAG3DA,cACAC,EAJ2D,EAI3DA,kBACAC,EAL2D,EAK3DA,aAEAC,GAP2D,EAM3DC,KAN2D,EAO3DD,YACAE,EAR2D,EAQ3DA,aAR2D,IAS3DzE,MAAS0E,EATkD,EASlDA,UAAqBpB,GAT6B,EASvCqB,SATuC,EAS7BrB,cAC9BsB,EAV2D,EAU3DA,gBACAC,EAX2D,EAW3DA,SACAC,EAZ2D,EAY3DA,KACAC,EAb2D,EAa3DA,YAEAC,EAf2D,EAe3DA,YAEAzB,GAjB2D,EAgB3D0B,SAhB2D,EAiB3D1B,iBACAF,EAlB2D,EAkB3DA,sBAlB2D,EAoB3D6B,YAMJ,OACI,yBAAKxG,MAAO,CAACS,MAAM,QACf,6BACI,kBAAC,GAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,KAGzB,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,cAElD,kCAIN,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAEd,OADApB,EAAWmB,GAET,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,YAErD,wBAAI/G,MAAO,CAAEsH,UAAW,WAAY,kBAAC,IAAD,CAAUpH,MAAM,UAAUY,QAAS,WACnEwE,GAAgB,GAChBD,EAAe2B,EAAIO,WACpBvH,MAAO,CAAEa,OAAQ,UAAWxB,YAAa,aAOhD,yBAAKW,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eAQhB,IA0MepF,2BA1MS,SAAAxB,GAAU,IAAD,EAEOE,IAAMC,SAAS,IAFtB,gCAGWD,IAAMC,UAAS,IAH1B,mBAGtB8H,EAHsB,KAGRpC,EAHQ,OAIS3F,IAAMC,SAAS,MAJxB,mBAItB+H,EAJsB,KAITtC,EAJS,OAKS1F,IAAMC,SAAS,MALxB,mBAKtBgI,EALsB,KAKTC,EALS,OAMIlI,IAAMC,SAAS,IANnB,mBAMtBkI,EANsB,KAMZC,EANY,OAOApI,IAAMC,UAAS,GAPf,mBAOd4B,GAPc,WAS7B7B,IAAM8B,WAAU,WACZK,QAAQC,IAAI,cAAc4F,GAC1BI,EAAaJ,KACf,CAACA,IAEH,IAgDMsE,EAAkB,WACpB,IACIvK,MAAM7C,eAAe,4CAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZiG,EAAejG,EAAIsK,eAEtBjK,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B2F,EAAe,OAEzB,MAAO3F,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC2F,EAAe,MAQvB,OAJAlI,IAAM8B,WAAU,WACZwK,MACD,IAGC,6BAuBI,kBAAC/D,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAE1BqH,EACI,oCACI,yBAAK9H,MAAO,CAAEsH,UAAW,SAAUc,aAAc,KAAM,kBAAC1H,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBACvD,kBAACyB,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgBL,MAAOiF,EAAUqE,eAAgBpJ,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAID,EAAL,CAAeqE,eAAenJ,EAAEC,OAAOJ,UAASlC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,oBAEnL,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWM,KAAK,uBAAuBL,MAAOiF,EAAUsE,sBAAuBrJ,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAID,EAAL,CAAesE,sBAAsBpJ,EAAEC,OAAOJ,UAASlC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,2BAExM,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWM,KAAK,eAAe4I,KAAK,SAASjJ,MAAOiF,EAAUuE,cAAetJ,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAID,EAAL,CAAeuE,cAAcrJ,EAAEC,OAAOJ,UAASlC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,mBAE9L,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACC,EAAA,EAAD,CAAWM,KAAK,YAAY4I,KAAK,SAASjJ,MAAOiF,EAAUwE,WAAYvJ,SAAU,SAAAC,GAAC,OAAI+E,EAAa,eAAID,EAAL,CAAewE,WAAWtJ,EAAEC,OAAOJ,UAASlC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,gBAErL,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QApH/G,WACjBgB,QAAQC,IAAI,YAAY+F,GAExB,IACI,IAAI3D,EAAMtF,eAAa,2DAAD,OAA4DiJ,EAAUyE,aAAtE,2BAAqGzE,EAAUqE,eAA/G,kCAAuJrE,EAAUsE,sBAAjK,0BAAwMtE,EAAUuE,cAAlN,uBAA8OvE,EAAUwE,YAC9QxK,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,UACH9E,EAAM+E,gBAAgB,kCAAmC,CACrD7D,QAAS,SAEbsL,IACA3G,GAAgB,IAEkB,kBAAxB1D,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,kCAAmC,CACrD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,kCAAmC,CACrD7D,QAAS,YAyEe,WAEJ,kBAACyB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QAAS,kBAAMwE,GAAgB,KAA/H,aAIV,OAIlB,yBAAKtF,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAEvB,OAAhBuH,EACI,yBAAK5H,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,kBAAC,GAAD,CAASiF,QAAS,CACd,CACIwD,OAAQ,eACRC,SAAU,gBAEd,CACID,OAAQ,iBACRC,SAAU,kBAEd,CACID,OAAQ,cACRC,SAAU,yBAEd,CACID,OAAQ,MACRC,SAAU,iBAEd,CACID,OAAQ,aACRC,SAAU,eAEfxD,KAAMwC,EAAaA,YAAaA,EAAavC,eAAgBA,EAAgBC,gBAAiBA,SCrRzH,SAASuD,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAmDAyL,GA9CI,SAAAzM,GAECX,KAAhB,IACME,EAAQ4K,cAHU,EAIEjK,IAAMC,SAAS,GAJjB,mBAIjBiD,EAJiB,KAIVgH,EAJU,KAexB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,iBAAoBoG,GAAU,GAAzC,CAA6CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OAC3G,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,mBAAsBoG,GAAU,GAA3C,CAA+CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAGjH,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC4B,GAAD,OAEJ,kBAAC,GAAD,CAAU3J,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,W,+BCuKT3J,2BApPI,SAAAxB,GAAU,IAAD,EAECE,IAAMC,SAAS,IAFhB,mBAEjB0B,EAFiB,KAEXC,EAFW,OAGgB5B,IAAMC,UAAS,GAH/B,mBAGjB8H,EAHiB,KAGHpC,EAHG,OAIK3F,IAAMC,UAAS,GAJpB,mBAIT4B,GAJS,aAKC7B,IAAMC,SAAS,IALhB,mBAKjB6M,EALiB,KAKXC,EALW,OAMG/M,IAAMC,SAAS,IANlB,mBAMjB+M,EANiB,KAMVC,EANU,OAOGjN,IAAMC,SAAS,IAPlB,mBAOjBiN,EAPiB,KAOVC,EAPU,OAQanN,IAAMC,SAAS,IAR5B,mBAQjBgI,EARiB,KAQLC,EARK,OASYlI,IAAMC,SAAS,IAT3B,6BAWxBD,IAAM8B,WAAU,WAEZK,QAAQC,IAAI,QAAQT,GACjBA,EAAMtB,OACL0B,MAAM7C,eAAa,2DAAD,OAA4DyC,EAAMtB,QACnF2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,aAAaH,GACzBkL,EAAUlL,EAAImL,cAEjB9K,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAIrC,CAACZ,EAAMtB,QAETL,IAAM8B,WAAU,WAETH,EAAM0L,MACL1H,GAAgB,KAGtB,CAAChE,EAAM0L,OASTrN,IAAM8B,WAAU,WAEZC,MAAM7C,eAAa,wCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,aAAaH,GACzBgL,EAAUhL,EAAIqL,cAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAE/BR,MAAM7C,eAAa,uCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,YAAYH,GACxB8K,EAAS9K,EAAIsL,aAEhBjL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAajC,IAyDF,OACI,6BACI,kBAACgG,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAC9B,yBAAKT,MAAO,CAAC2C,QAAQ,KAArB,kBAGA,yBAAK3C,MAAO,CAAC2C,QAAQ,KACjB,kBAACC,EAAA,EAAD,CAAWM,KAAK,WAAWvC,QAAQ,WAAWyC,MAAM,WAAW+J,OAAQ7L,EAAM8L,SAAUrK,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAW8L,SAASpK,EAAEC,OAAOJ,UAASM,WAAS,KAE/J,yBAAKnD,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASyJ,UAAU,KAC1D,kBAAC7F,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QA5GjC,WACjBgB,QAAQC,IAAI,eAAeT,EAAMtB,MAAMsB,EAAM8L,UAC7C9H,GAAgB,GAChBuC,GAAe,SAAAwF,GAAC,6BAAQA,GAAR,CAAU,CAACjE,GAAGkE,OAAOC,QAAQjM,EAAM0L,KAAKO,QAAQC,UAAUlM,EAAM0L,KAAKQ,UAAUJ,SAAS9L,EAAM8L,eAC9G7L,EAAS,eAAID,EAAL,CAAWiM,QAAQ,KAAKC,UAAU,KAAKJ,SAAS,SAwGiBzM,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,SAArG,iBAGA,kBAAC+D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS,kBAAIwE,GAAgB,IAAQ3E,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,SAAnH,aAMZ,kBAACkC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWtB,MAAM2D,EAAE0H,eAC9CxH,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASsJ,EACTrJ,eAAgB,SAAAC,GAAM,OAAIA,EAAOvD,OACjCF,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWpB,MAAMyD,MAC5CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASkJ,EACTjJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO+J,WACjCxN,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAW0L,KAAKrJ,MAC3CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,OAAOzC,QAAQ,WAAWwC,WAAS,SAI5E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMoM,YAAa3K,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWoM,YAAY1K,EAAEC,OAAOJ,UAASK,KAAK,cAAcvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,kBAE/J,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMqM,mBAAoB5K,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWqM,mBAAmB3K,EAAEC,OAAOJ,UAASK,KAAK,oBAAoBvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,wBAEnL,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IAEnDiF,GAAeA,EAAYH,OAAS,EACpC,2BAAOzH,MAAO,CAACS,MAAM,SACjB,4BACI,oCACA,wCACA,wBAAIT,MAAO,CAAES,MAAO,WAGvBqB,QAAQC,IAAI,cAAc6F,GAC3B,+BAEQA,EAAYnB,KAAI,SAAA9C,GAAC,OACb,4BACI,4BAAKA,EAAE6J,WACP,4BAAK7J,EAAEyJ,UACP,4BAAI,kBAAC,IAAD,CAAYlN,MAAM,UAAUF,MAAO,CAAEa,OAAQ,WAAaC,QAAS,WACnE+G,GAAe,SAAA+F,GAAK,OAAIA,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAE1E,KAAOzF,EAAEyF,mBAY5E,MAIT,kBAAChH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QA/JF,WASdgB,QAAQC,IAAI,UAAUT,GAEtBE,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,qEAAD,OAAsEyC,EAAMpB,MAAMmL,WAAlF,kBAAsG/J,EAAMpB,MAAMA,MAAlH,+BAA8IoB,EAAMqM,mBAApJ,wBAAsLrM,EAAMoM,YAA5L,0BAAyNK,KAAKC,UAAUpG,IAC9P9F,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,SACH9E,EAAM+E,gBAAgB,6BAA8B,CAChD7D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,6BAA8B,CAChD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,6BAA8B,CAChD7D,QAAS,WA8GDwC,WAAS,GALb,oB,4BCpOpB,SAASuB,GAAT,GAIM,IAHFC,EAGC,EAHDA,sBACAC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAEcF,EAAsB8C,OAEpC,OACE,8BACE,kBAAC7E,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,gBACNP,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQjE,SAASqE,GAAT,GAAoE,IAAjDC,EAAgD,EAAhDA,QAASC,EAAuC,EAAvCA,KAAKC,EAAkC,EAAlCA,eAAeC,EAAmB,EAAnBA,gBAAmB,EAqBzDC,YAAS,CACXJ,UACAC,QACAI,IAAgBC,KArBhBC,EAH2D,EAG3DA,cACAC,EAJ2D,EAI3DA,kBACAC,EAL2D,EAK3DA,aAEAC,GAP2D,EAM3DC,KAN2D,EAO3DD,YACAE,EAR2D,EAQ3DA,aAR2D,IAS3DzE,MAAS0E,EATkD,EASlDA,UAAqBpB,GAT6B,EASvCqB,SATuC,EAS7BrB,cAC9BsB,EAV2D,EAU3DA,gBACAC,EAX2D,EAW3DA,SACAC,EAZ2D,EAY3DA,KACAC,EAb2D,EAa3DA,YAEAC,EAf2D,EAe3DA,YAEAzB,GAjB2D,EAgB3D0B,SAhB2D,EAiB3D1B,iBACAF,EAlB2D,EAkB3DA,sBAlB2D,EAoB3D6B,YAgBJ,OACI,yBAAKxG,MAAO,CAACS,MAAM,QACf,6BACI,kBAAC,GAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,KAGzB,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,cAElD,wBAAI/G,MAAO,CAACS,MAAM,eAIxB,0BAAWkF,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAEd,OADApB,EAAWmB,GAET,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,YAErD,wBAAI/G,MAAO,CAACsH,UAAU,WAAW,kBAAC,KAAD,CAAUpH,MAAM,UAAUF,MAAO,CAACa,OAAO,WAAYC,QAAS,WAC3FwE,GAAgB,GAChBxD,QAAQC,IAAI,MAAMiF,GAClB3B,EAAe2B,EAAIO,oBAgC3B,yBAAKvH,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eA6BhB,IAwKepF,2BAxKM,SAAAxB,GAAU,IAAD,EAEUE,IAAMC,SAAS,IAFzB,gCAIAD,IAAMC,SAAS,KAJf,mBAInB6M,EAJmB,KAIZC,EAJY,OAMc/M,IAAMC,UAAS,GAN7B,mBAMnB8H,EANmB,KAMLpC,EANK,OAOY3F,IAAMC,SAAS,MAP3B,mBAOnB+H,EAPmB,KAONtC,EAPM,OAQY1F,IAAMC,SAAS,MAR3B,mBAQnBgI,EARmB,KAQNC,EARM,OASQlI,IAAMC,SAAS,IATvB,mBASRmI,GATQ,aAUIpI,IAAMC,UAAS,GAVnB,mBAUnBqO,EAVmB,KAUVzM,EAVU,KAgB1B7B,IAAM8B,WAAU,WAIZ,GAHAK,QAAQC,IAAI,cAAe4F,GAC3BnG,GAAW,GACXuG,EAAaJ,GACTA,EAEA,IACI,IAAIxD,EAAMtF,eAAY,iEAA6D8I,EAAYuG,WAC/FpM,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,SAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,QAASH,GACrB8K,EAAS9K,EAAIsL,OACb1L,GAAW,MAoBdS,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,GACpCV,GAAW,GACX/B,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,YAGvB,MAAOuB,GACLJ,QAAQC,IAAI,mBAAoBG,GAChCV,GAAW,GACX/B,EAAM+E,gBAAgB,+BAAgC,CAClD7D,QAAS,YAItB,CAACgH,IA4BJ,OANAhI,IAAM8B,WAAU,YAnBK,WAEjB,IACIC,MAAM7C,eAAe,yCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZiG,EAAejG,EAAIuM,YAEtBlM,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B2F,EAAe,OAEzB,MAAO3F,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC2F,EAAe,KAMnBuG,KAED,IAGC,6BAuBI,kBAAClG,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAE1BiH,EACI,oCACI,yBAAK1H,MAAO,CAAEsH,UAAW,SAAUc,aAAc,KAAM,kBAAC1H,EAAA,EAAD,CAAYC,QAAQ,MAApB,aAEvC,IAAZsN,EACI,yBAAKjO,MAAO,CAAE2C,QAAS,GAAItC,eAAgB,SAAUlB,QAAS,SAC1D,kBAACuJ,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,yBAAKmC,WAAS,EAACrC,MAAO,CAAEsH,UAAW,WAE3BmF,GAASA,EAAMhG,KAAI,SAAA4G,GAAC,OAAK,oCAAUA,EAAEG,UAAZ,eAAmCH,EAAED,cAI9E,kBAAChL,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WACtD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QAAS,kBAAMwE,GAAgB,KAA/H,WAIV,OAIlB,yBAAKtF,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAEvB,OAAhBuH,EACI,yBAAK5H,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,kBAAC,GAAD,CAASiF,QAAS,CACd,CACIwD,OAAQ,SACRC,SAAU,uBAEfxD,KAAMwC,EAAaA,YAAaA,EAAavC,eAAgBA,EAAgBC,gBAAiBA,SCvUzH,SAASuD,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAqDA4N,GAhDA,SAAA5O,GAEKX,KAAhB,IACME,EAAQ4K,cAHM,EAIMjK,IAAMC,SAAS,GAJrB,mBAIbiD,EAJa,KAINgH,EAJM,KAepB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,eAAkBoG,GAAU,GAAvC,CAA2CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OACzG,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,gBAAmBoG,GAAU,GAAxC,CAA4CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAG9G,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KAExI,kBAAC,GAAD,W,oDC7ExB,SAASlG,GAAT,GAIG,EAHCC,sBAGA,IAFAC,EAED,EAFCA,aACAC,EACD,EADCA,gBAIA,OACI,8BACI,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,SACNP,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAOrE,IAAMyN,GAAwB3O,IAAM4O,YAChC,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC3BC,EAAahP,IAAMiP,SACnBC,EAAcL,GAAOG,EAM3B,OAJAhP,IAAM8B,WAAU,WACZoN,EAAYC,QAAQL,cAAgBA,IACrC,CAACI,EAAaJ,IAGb,oCACI,yCAAO3C,KAAK,WAAW0C,IAAKK,GAAiBH,QAK7D,SAASxJ,GAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,KAAM2J,EAAgB,EAAhBA,aAAgB,EAqB1CxJ,YAAS,CACTJ,UACAC,QACDI,IAAiBC,IAAeuJ,KAC/B,SAAAC,GACIA,EAAMC,eAAelO,MAAK,SAAAmE,GAAO,OAE7B,CACIiE,GAAI,YAGJT,OAAQ,gBAAGwG,EAAH,EAAGA,8BAAH,OACJ,6BACI,kBAACb,GAA0Ba,OAKnCC,KAAM,gBAAGpI,EAAH,EAAGA,IAAH,OACF,6BACI,kBAACsH,GAA0BtH,EAAIqI,iCAfd,oBAmB1BlK,UA1CXO,EAH0C,EAG1CA,cACAC,EAJ0C,EAI1CA,kBACAC,EAL0C,EAK1CA,aAEAC,GAP0C,EAM1CC,KAN0C,EAO1CD,YACAE,EAR0C,EAQ1CA,aAR0C,IAS1CzE,MAAS0E,EATiC,EASjCA,UAAqBpB,GATY,EAStBqB,SATsB,EASZrB,cAAc0K,EATF,EASEA,eAC5CpJ,EAV0C,EAU1CA,gBACAC,EAX0C,EAW1CA,SACAC,EAZ0C,EAY1CA,KACAC,EAb0C,EAa1CA,YAEAC,EAf0C,EAe1CA,YAEAzB,GAjB0C,EAgB1C0B,SAhB0C,EAiB1C1B,iBACAF,EAlB0C,EAkB1CA,sBAlB0C,EAoB1C6B,YAuCJ,OACI,yBAAKxG,MAAO,CAAES,MAAO,QACjB,yBAAKT,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,SAAUyJ,UAAW,KAChE,yBAAK9J,MAAO,CAAES,MAAO,MACjB,kBAAC,GAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,MAI7B,2CAAWa,IAAX,CAA4B1F,MAAO,CAAES,MAAO,UACxC,+BACKmF,EAAaa,KAAI,SAAAC,GAAW,OACzB,uBAAQA,EAAYC,sBACfD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC3B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,mBAMhE,0BAAWpB,IACNS,EAAKK,KAAI,SAACO,EAAKC,GAEZ,OADApB,EAAWmB,GAEP,uBAAQA,EAAIE,cAEPF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,sCAAIpH,MAAO,CAAEuP,SAAU,KAAUnI,EAAKC,gBAAiBD,EAAKL,OAAO,kBAclG,6CAAmByI,OAAOC,KAAKH,GAAgB7H,QAC/C,yBAAKzH,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,kBAC3C,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,cAKAmJ,OAAOC,KAAKH,GAAgB7H,OAAS,EACjC,kBAACrF,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WACtD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAE8J,UAAW,KAC3D,kBAAC7F,EAAA,EAAD,CAAQd,WAAS,EAACxC,QAAQ,YAAYT,MAAM,UAAUY,QAAS,kBAAMiO,EAAaO,IAAiBtP,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,KAAnI,YAGN,MAMtB,IAsUejD,2BAtUS,SAAAxB,GAAU,IAAD,EAEOE,IAAMC,SAAS,IAFtB,gCAGWD,IAAMC,UAAS,IAH1B,mBAGtB8H,EAHsB,KAGRpC,EAHQ,OAIW3F,IAAMC,UAAS,GAJ1B,mBAItBoL,EAJsB,aAKerL,IAAMC,SAAS,KAL9B,mBAKtB8P,EALsB,KAKNC,EALM,OAMShQ,IAAMC,SAAS,IANxB,mBAMtBgQ,EANsB,KAMTvO,EANS,OAQS1B,IAAMC,SAAS,MARxB,mBAQtB+H,EARsB,KAQTtC,EARS,OASS1F,IAAMC,SAAS,IATxB,mBAStBgI,EATsB,KASTC,EATS,OAWHlI,IAAMC,SAAS,IAXZ,mBAWtB0B,EAXsB,KAWfC,EAXe,OAYC5B,IAAMC,UAAS,GAZhB,mBAYtBqO,EAZsB,KAYbzM,EAZa,KAyDvBuN,EAAY,yCAAG,WAAOc,GAAP,wBAAAC,EAAA,sDACjB,GAAIxO,EAAMsC,WAAY,CAKlB,IAJA9B,QAAQC,IAAI,OAAQ8N,EAAML,OAAOC,KAAKI,GAAOvO,EAAMsC,WAAWmM,qBAC1DC,EAAYR,OAAOC,KAAKI,GACxBI,EAAQ,GACZzO,GAAW,GACFyF,EAAI,EAAGA,EAAI+I,EAAUvI,OAAQR,IAClCgJ,EAAMjP,KAAK,CACPkP,QAAStI,EAAYuI,SAASH,EAAU/I,KAAKiJ,QAC7CE,WAAYxI,EAAYuI,SAASH,EAAU/I,KAAKQ,SAGxD3F,QAAQC,IAAI,QAASkO,GACjBI,EAAM,CACNC,WAAYL,EACZF,oBAAqBzO,EAAMsC,WAAWmM,qBAE1CjO,QAAQC,IAAI,eAAasO,GACzB,IACQlM,EAAMtF,eAAY,0DAEtBiD,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,OACRiM,KAAMxC,KAAKC,UAAUqC,KAEpB1O,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,KALL,yCAKU,WAAMC,GAAN,UAAAkO,EAAA,sDACFtO,GAAW,GACXM,QAAQC,IAAI,4BAA6BH,GACpB,IAAjBA,EAAI2C,UACJ9E,EAAM+E,gBAAgB,wCAAyC,CAC3D7D,QAAS,SAEF,GACPiB,EAAI4O,WAAa5O,EAAI4O,UAAU/I,OAAS,IACxCpC,EAAezD,EAAI4O,WACnBlL,GAAgB,IASpBuC,EAAe,KAGfpI,EAAM+E,gBAAgB,yBAA0B,CAC5C7D,QAAS,SAvBf,2CALV,uDAmCKsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,GACpCV,GAAW,GACX/B,EAAM+E,gBAAgB,yBAA0B,CAC5C7D,QAAS,YAGvB,MAAOuB,GACLJ,QAAQC,IAAI,mBAAoBG,GAChCV,GAAW,GACX/B,EAAM+E,gBAAgB,yBAA0B,CAC5C7D,QAAS,eAIjBlB,EAAM+E,gBAAgB,2BAA4B,CAC9C7D,QAAS,SAzEA,2CAAH,sDA6HlB,OAPAhB,IAAM8B,WAAU,YArCY,WACxB,IACIC,MAAM7C,eAAe,qDAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACRA,EAAI6O,UACJd,EAAkB/N,EAAI6O,aAG7BxO,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,MAGzC,MAAOA,GACLJ,QAAQC,IAAI,oBAAqBG,GAGrC,IACIR,MAAM7C,eAAe,iDAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACRA,EAAII,aACJX,EAAeO,EAAII,gBAG1BC,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,MAGzC,MAAOA,GACLJ,QAAQC,IAAI,oBAAqBG,IAMrCwO,KACD,IAMC,oCAGI,kBAACxI,EAAA,EAAD,CACIC,KAAMT,EACNiJ,gBAAiB,kBAAMrL,GAAgB,KAEvC,yBAAKtF,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAE1BkH,GAAeA,EAAYF,OAAS,EAChC,yBAAKzH,MAAO,CAAES,MAAO,OAAQ6G,UAAW,SAAUvH,SAAU,aACxD,kBAAC,KAAD,CAAWG,MAAO,YAAa8M,KAAM,GAAIhN,MAAO,CAAED,SAAU,WAAY6Q,IAAK,EAAGC,MAAO,EAAGhQ,OAAQ,WAAaC,QAAS,kBAAMwE,GAAgB,MAC9I,kBAAC5E,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,UAAUF,MAAO,CAAEsH,UAAW,WAA7D,oBAGA,2BAAOtH,MAAO,CAAES,MAAO,OAAQqJ,UAAW,KACtC,+BACI,4BACI,wBAAI9J,MAAO,CAAEuP,SAAU,KAAvB,aACA,wBAAIvP,MAAO,CAAEuP,SAAU,KAAvB,YAGR,+BAEQ5H,EAAYlB,KAAI,SAAAqK,GAAE,OACd,4BACI,wBAAI9Q,MAAO,CAAEuP,SAAU,KAAOuB,EAAGZ,SACjC,wBAAIlQ,MAAO,CAAEuP,SAAU,KAAOuB,EAAGrM,0BAOvD,uBAKlB,kBAACrC,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WACtD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CAEIC,QAASmM,EACTlM,eAAgB,SAAAC,GAAM,OAAIA,EAAOsN,cACjC/Q,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAa0P,QAASrN,MAClDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,UAAUzC,QAAQ,WAAWwC,WAAS,SAI/E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQd,WAAS,EAACxC,QAAQ,YAAYT,MAAM,UAAUY,QAzNlD,WAEhBgB,QAAQC,IAAI,UAAWT,GACvBQ,QAAQC,IAAI,gBAAiB6F,GAC7BC,EAAe,MAEfrG,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAY,+EAA2EyC,EAAM0P,QAAU1P,EAAM0P,QAAQD,aAAe,IAC9IjP,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,SAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAASH,GACjBA,EAAIqP,OACJpJ,EAAejG,EAAIqP,UAG1BhP,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,GACpCV,GAAW,GACX/B,EAAM+E,gBAAgB,gCAAiC,CACnD7D,QAAS,YAGvB,MAAOuB,GACLJ,QAAQC,IAAI,mBAAoBG,GAChCV,GAAW,GACX/B,EAAM+E,gBAAgB,gCAAiC,CACnD7D,QAAS,WAyLuEX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,UAExF,IAAZ+J,EACI,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SAD7B,UAOZ,kBAACkC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CAEIC,QAASqM,EACTpM,eAAgB,SAAAC,GAAM,OAAIA,EAAOC,iBACjC1D,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAasC,WAAYD,MACrDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,cAAczC,QAAQ,WAAWwC,WAAS,UAKvF,kBAACf,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAQlC,OAAhBuH,GAA+C,IAAvBA,EAAYH,OAChC,KAEA,kBAAC,GAAD,CAAStC,QAAS,CACd,CACIwD,OAAQ,OACRC,SAAU,eAEd,CACID,OAAQ,KACRC,SAAU,WAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,QACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,UACRC,SAAU,WAEd,CACID,OAAQ,SACRC,SAAU,eAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,eACRC,SAAU,iBAEfxD,KAAMwC,EAAaA,YAAaA,EAAamH,aAAcA,KAK1E,kBAACrD,EAAA,EAAD,CAAUvD,KAAM6C,GACZ,kBAACtC,EAAA,EAAD,CAAkBxI,MAAM,iBC3exC,SAAS2I,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAkB5C,IAAMhK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAqDAyQ,GAhDM,SAAAzR,GAEDX,KAAhB,IAjBeiK,EAkBT/J,EAAQ4K,cAHY,EAIAjK,IAAMC,SAAS,GAJf,mBAInBiD,EAJmB,KAIZgH,EAJY,KAe1B,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,qBA3CxB,CACHgG,GAAG,kBAAD,OAFSL,EA4CkD,GAzC7D,gBAAgB,uBAAhB,OAAwCA,IAyCxB,CAAiD/I,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAInH,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,WCoGT3J,2BA9KG,SAAAxB,GAAU,IAAD,EAEEE,IAAMC,SAAS,IAFjB,mBAEhB0B,EAFgB,KAEVC,EAFU,OAGiB5B,IAAMC,UAAS,GAHhC,gCAIMD,IAAMC,UAAS,IAJrB,mBAIR4B,GAJQ,aAKE7B,IAAMC,SAAS,IALjB,mBAKV8M,GALU,aASM/M,IAAMC,SAAS,IATrB,mBAShBuR,EATgB,KASRC,EATQ,KAYvBzR,IAAM8B,WAAU,WACZ2M,MACF,IAEFzO,IAAM8B,WAAU,WAEZ,GAAGH,EAAM+P,OAEL,IACI3P,MAAM7C,eAAY,iEAA6DyC,EAAM+P,OAAOnD,YACvFvM,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZ8K,EAAS9K,EAAIsL,UAEhBjL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/BwK,EAAS,OAEnB,MAAOxK,GACLJ,QAAQC,IAAI,oBAAqBG,GACjCwK,EAAS,OAInB,CAACpL,EAAM+P,SAET,IAAMjD,EAAe,WACjB,IACI1M,MAAM7C,eAAe,yCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZwP,EAAWxP,EAAIuM,YAElBlM,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/BkP,EAAW,OAErB,MAAOlP,GACLJ,QAAQC,IAAI,oBAAqBG,GACjCkP,EAAW,MAmDnB,OACI,6BAqBI,kBAAChP,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAAS4N,EACT3N,eAAgB,SAAAC,GAAM,OAAIA,EAAOkK,oBACjC3N,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAW+P,OAAO1N,MAC7CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,SAASzC,QAAQ,WAAWwC,WAAS,SAgB9E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,kBAAkBvC,QAAQ,WAAWyC,MAAM,kBAAkB+J,OAAQ7L,EAAMgQ,gBAAiBvO,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAWgQ,gBAAgBtO,EAAEC,OAAOJ,UAASM,WAAS,KAE3L,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,eAAevC,QAAQ,WAAWyC,MAAM,eAAe+J,OAAQ7L,EAAMiQ,aAAcxO,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAWiQ,aAAavO,EAAEC,OAAOJ,UAASM,WAAS,KAE/K,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,YAAYvC,QAAQ,WAAWyC,MAAM,YAAY+J,OAAQ7L,EAAMkQ,UAAWzO,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAWkQ,UAAUxO,EAAEC,OAAOJ,UAASM,WAAS,KAEnK,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QA5GF,WAEdU,GAAW,GACXM,QAAQC,IAAI,QAAQT,GACpB,IACI,IAAI6C,EAAMtF,eAAa,8DAAD,OAA+DyC,EAAM+P,OAAOnD,UAA5E,yBAAsG5M,EAAMiQ,aAA5G,4BAA4IjQ,EAAMgQ,gBAAlJ,sBAA+KhQ,EAAMkQ,WAC3M1P,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,SACH9E,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,WAmEDwC,WAAS,GALb,qBCVLlC,2BAvJO,SAAAxB,GAAU,IAAD,EAEFE,IAAMC,SAAS,IAFb,mBAEpB0B,EAFoB,KAEdC,EAFc,OAGa5B,IAAMC,UAAS,GAH5B,mBAGpB8H,EAHoB,KAGNpC,EAHM,OAIE3F,IAAMC,UAAS,GAJjB,mBAIZ4B,GAJY,aASE7B,IAAMC,SAAS,IATjB,mBASpB6R,EAToB,KASZC,EATY,KAY3B/R,IAAM8B,WAAU,WACZkQ,MACF,IAyBF,IAAMA,EAAe,WACjB,IACIjQ,MAAM7C,eAAe,yCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZ8P,EAAW9P,EAAIgQ,YAElB3P,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/BwP,EAAW,OAErB,MAAOxP,GACLJ,QAAQC,IAAI,oBAAqBG,GACjCwP,EAAW,MAqDnB,OACI,6BACI,kBAACxJ,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAACS,MAAM,IAAIkC,QAAQ,GAAGxD,QAAQ,OAAOkB,eAAe,WAC5D,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,UAAUF,MAAO,CAACsH,UAAU,WAA3D,mCAEJ,yBAAKtH,MAAO,CAACS,MAAM,IAAIkC,QAAQ,WAAWxD,QAAQ,OAAOkB,eAAe,WAAxE,eACiBiB,EAAMuQ,OAAOvQ,EAAMuQ,OAAOC,WAAW,MAEtD,yBAAK9R,MAAO,CAACS,MAAM,IAAIkC,QAAQ,GAAGxD,QAAQ,OAAOkB,eAAe,WAC5D,kBAAC4D,EAAA,EAAD,CAAQjE,MAAO,CAAC8J,UAAU,IAAKnJ,QAAQ,YAAYwC,WAAS,EAACrC,QAAS,kBAAIwE,GAAgB,KAA1F,UAGR,kBAAClD,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASkO,EACTjO,eAAgB,SAAAC,GAAM,OAAIA,EAAOsO,qBACjC/R,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWuQ,OAAOlO,MAC7CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,UAAUzC,QAAQ,WAAWwC,WAAS,SAI/E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgBvC,QAAQ,WAAWyC,MAAM,gBAAgB+J,OAAQ7L,EAAM0Q,cAAejP,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAW0Q,cAAchP,EAAEC,OAAOJ,UAASM,WAAS,KAEnL,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QArFF,WAEdU,GAAW,GACXM,QAAQC,IAAI,QAAQT,GACpB,IAEI,IAAI6C,EAAMtF,eAAa,uDAAD,OAAwDyC,EAAMuQ,OAAOC,WAArE,0BAAiGxQ,EAAM0Q,eAC7HlQ,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,UACH9E,EAAM+E,gBAAgB,iCAAkC,CACpD7D,QAAS,SAEb2E,GAAgB,IAEkB,kBAAxB1D,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,iCAAkC,CACpD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,iCAAkC,CACpD7D,QAAS,WA0CDwC,WAAS,GALb,yBCxIpB,SAAS0F,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAoDAwR,GA/CA,SAAAxS,GAEKX,KAAhB,IACME,EAAQ4K,cAHM,EAIMjK,IAAMC,SAAS,GAJrB,mBAIbiD,EAJa,KAINgH,EAJM,KAepB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,YACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,eAAkBoG,GAAU,GAAvC,CAA2CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OACzG,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,mBAAsBoG,GAAU,GAA3C,CAA+CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAGjH,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,W,OC3ExB,SAASlG,GAAT,GAIK,EAHDC,sBAGE,IAFFC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAIA,OACE,8BACE,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,SACNpD,MAAO,CAAC8J,UAAU,IAClBjH,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQjE,SAASqE,GAAT,GAAkD,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,KAAK0F,EAAgB,EAAhBA,aAAgB,EAqBvCvF,YAAS,CACXJ,UACAC,QACAI,IAAgBC,KArBhBC,EAHyC,EAGzCA,cACAC,EAJyC,EAIzCA,kBACAC,EALyC,EAKzCA,aAEAC,GAPyC,EAMzCC,KANyC,EAOzCD,YACAE,EARyC,EAQzCA,aARyC,IASzCzE,MAAS0E,EATgC,EAShCA,UAAqBpB,GATW,EASrBqB,SATqB,EASXrB,cAC9BsB,EAVyC,EAUzCA,gBACAC,EAXyC,EAWzCA,SACAC,EAZyC,EAYzCA,KACAC,EAbyC,EAazCA,YAEAC,EAfyC,EAezCA,YAEAzB,GAjByC,EAgBzC0B,SAhByC,EAiBzC1B,iBACAF,EAlByC,EAkBzCA,sBAlByC,EAoBzC6B,YAMJ,OACI,yBAAKxG,MAAO,CAACS,MAAM,QACf,6BACI,kBAAC,GAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,KAGzB,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,cAElD,kCAIN,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAEd,OADApB,EAAWmB,GAET,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,YAErD,wBAAI/G,MAAO,CAAEsH,UAAW,WACpB,kBAAC,IAAD,CAAYpH,MAAM,UAAUF,MAAO,CAAEa,OAAQ,WAAaC,QAAS,kBAAMgK,EAAa9D,EAAIO,oBAQlG,yBAAKvH,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eAQhB,IAiUepF,2BAjUQ,SAAAxB,GAAS,MAIAE,IAAMC,SAAS,IAJf,mBAIrB+M,EAJqB,KAIbC,EAJa,OAKFjN,IAAMC,SAAS,MALb,mBAKrBsS,EALqB,KAKdC,EALc,OAMAxS,IAAMC,SAAS,IANf,mBAMrBiN,EANqB,KAMbC,EANa,OAQYnN,IAAMC,UAAS,GAR3B,gCASFD,IAAMC,SAAS,KATb,mBASrB0B,EATqB,KASdC,EATc,OAUU5B,IAAMC,SAAS,MAVzB,mBAUrBgI,EAVqB,KAURC,EAVQ,OAYElI,IAAMC,UAAS,GAZjB,mBAYrBqO,EAZqB,KAYZzM,EAZY,KAc5B7B,IAAM8B,WAAU,WAEZ,GAAIH,EAAMtB,MACN,IACI0B,MAAM7C,eAAY,kEAA8DyC,EAAMtB,MAAMqL,aACvF1J,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZkL,EAAUlL,EAAImL,WAEjB9K,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B4K,EAAU,OAEpB,MAAO5K,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC4K,EAAU,OAKnB,CAACxL,EAAMtB,QAmCVL,IAAM8B,WAAU,WACZ,IAEIC,MAAM7C,eAAe,wCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZgL,EAAUhL,EAAIqL,WAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B0K,EAAU,OAEpB,MAAO1K,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC0K,EAAU,OAIf,IAoCH,OACI,6BACI,yBAAK5M,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAC3C,kBAAC+B,EAAA,EAAD,CAAMG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IAChD,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAatB,MAAO2D,MAChDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAMG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IAChD,kBAACW,EAAA,EAAD,CAEIC,QAASsJ,EACTrJ,eAAgB,SAAAC,GAAM,OAAIA,EAAOvD,OACjCF,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAapB,MAAOyD,MAChDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAMG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IAChD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,UAAUF,MAAO,CAAES,MAAO,OAAQyD,OAAQ,GAAIhE,MAAO,QAAUY,QAnH7F,WAChBqR,EAAS,MACTrQ,QAAQC,IAAI,OAAQT,GACpBE,GAAW,GACX,IAAI2C,EAAMtF,eAAY,mEAA+DyC,EAAMpB,MAAMoL,UACjGxJ,QAAQC,IAAI,MAAOoC,GACnB,IACIzC,MAAMyC,GACDxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACRA,EAAIwQ,YACJvK,EAAejG,EAAIwQ,YACnBD,EAASvQ,EAAIwQ,WAAW3K,QACxBjG,GAAW,KAEXqG,EAAe,IACfrG,GAAW,OAGlBS,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B2F,EAAe,IACfrG,GAAW,MAErB,MAAOU,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC2F,EAAe,IACfrG,GAAW,OAyFe,IAAVyM,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SADzB,WA0DI,OAAhB0H,EACI,KAEA,oCAEc,OAAVsK,EACA,kBAAC9P,EAAA,EAAD,CAAMG,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAACqS,WAAW,GAAGvI,UAAU,KAClE,kBAACpJ,EAAA,EAAD,CAAYC,QAAQ,WAAWT,MAAM,UAAUF,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASiS,WAAW,QAAzG,eACiBJ,IAIpB,KAEL,yBAAKlS,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,YAE3B,IAAZ4N,EACI,yBAAKjO,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAG3B,kBAAC,GAAD,CAASiF,QAAS,CACX,CACIwD,OAAQ,MACRC,SAAU,YAEd,CACID,OAAQ,SACRC,SAAU,eAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,MACRC,SAAU,YAEd,CACID,OAAQ,YACRC,SAAU,kBAEd,CACID,OAAQ,YACRC,SAAU,aAEd,CACID,OAAQ,UACRC,SAAU,WAEd,CACID,OAAQ,YACRC,SAAU,aAEd,CACID,OAAQ,UACRC,SAAU,YAEfxD,KAAMwC,EAAaA,YAAaA,EAAakD,aAxL3D,SAACW,GAClB3J,QAAQC,IAAI,WAAY0J,GACxB8G,MAAM,yB,OC1Md,SAAS7N,GAAT,GAIK,EAHDC,sBAGE,IAFFC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAIA,OACE,8BACE,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,SACNpD,MAAO,CAAC8J,UAAU,IAClBjH,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQjE,SAASqE,GAAT,GAAoC,IAAjBC,EAAgB,EAAhBA,QAASC,EAAO,EAAPA,KAAO,EAqBzBG,YAAS,CACXJ,UACAC,QACAI,IAAgBC,KArBhBC,EAH2B,EAG3BA,cACAC,EAJ2B,EAI3BA,kBACAC,EAL2B,EAK3BA,aAEAC,GAP2B,EAM3BC,KAN2B,EAO3BD,YACAE,EAR2B,EAQ3BA,aAR2B,IAS3BzE,MAAS0E,EATkB,EASlBA,UAAqBpB,GATH,EASPqB,SATO,EASGrB,cAC9BsB,EAV2B,EAU3BA,gBACAC,EAX2B,EAW3BA,SACAC,EAZ2B,EAY3BA,KACAC,EAb2B,EAa3BA,YAEAC,EAf2B,EAe3BA,YAEAzB,GAjB2B,EAgB3B0B,SAhB2B,EAiB3B1B,iBACAF,EAlB2B,EAkB3BA,sBAlB2B,EAoB3B6B,YAMJ,OACI,yBAAKxG,MAAO,CAACS,MAAM,QACf,6BACI,kBAAC,GAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,KAGzB,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,mBAMxD,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAEd,OADApB,EAAWmB,GAET,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,kBAWzD,yBAAK/G,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eAQhB,IA+QepF,2BA/Qe,SAAAxB,GAAS,MAIRE,IAAMC,SAAS,IAJP,mBAI5B+M,EAJ4B,KAIrBC,EAJqB,OAKRjN,IAAMC,SAAS,IALP,mBAK5BiN,EAL4B,KAKrBC,EALqB,OAOKnN,IAAMC,UAAS,GAPpB,gCAQTD,IAAMC,SAAS,KARN,mBAQ5B0B,EAR4B,KAQrBC,EARqB,OASG5B,IAAMC,SAAS,MATlB,mBAS5BgI,EAT4B,KASfC,EATe,OAWNlI,IAAMC,UAAS,GAXT,mBAW5BqO,EAX4B,KAWpBzM,EAXoB,KAanC7B,IAAM8B,WAAU,WAEZ,GAAGH,EAAMtB,MACL,IACI0B,MAAM7C,eAAY,kEAA8DyC,EAAMtB,MAAMqL,aACvF1J,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZkL,EAAUlL,EAAImL,WAEjB9K,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B4K,EAAU,OAEpB,MAAO5K,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC4K,EAAU,OAKpB,CAACxL,EAAMtB,QAoDT,OApBAL,IAAM8B,WAAU,WACZ,IACIC,MAAM7C,eAAe,wCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZgL,EAAUhL,EAAIqL,WAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B0K,EAAU,OAEpB,MAAO1K,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC0K,EAAU,OAIf,IAGC,6BACI,yBAAK5M,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAC/C,kBAAC+B,EAAA,EAAD,CAAMG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IAC9C,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWtB,MAAM2D,MAC5CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAMG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IAC9C,kBAACW,EAAA,EAAD,CAEIC,QAASsJ,EACTrJ,eAAgB,SAAAC,GAAM,OAAIA,EAAOvD,OACjCF,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWpB,MAAMyD,MAC5CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAMG,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IAC9C,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,UAAUF,MAAO,CAACS,MAAM,OAAOyD,OAAO,GAAGhE,MAAM,QAASY,QA9ElF,WAChBgB,QAAQC,IAAI,OAAOT,GACnBE,GAAW,GACX,IAAI2C,EAAMtF,eAAY,0EAAsEyC,EAAMpB,MAAMoL,UACxGxJ,QAAQC,IAAI,MAAMoC,GAClB,IACYzC,MAAMyC,GACDxC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACTA,EAAIwQ,YACHvK,EAAejG,EAAIwQ,YACnB5Q,GAAW,KAEXqG,EAAe,IACfrG,GAAW,OAGlBS,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B2F,EAAe,IACfrG,GAAW,MAEjB,MAAOU,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC2F,EAAe,IACfrG,GAAW,OAsDD,IAAVyM,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SADzB,WA0DQ,OAAhB0H,EACA,KAEA,yBAAK5H,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,YAE3B,IAAZ4N,EACI,yBAAKjO,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,kBAAC,GAAD,CAASiF,QAAS,CACd,CACIwD,OAAQ,MACRC,SAAU,YAEd,CACID,OAAQ,SACRC,SAAU,eAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,MACRC,SAAU,YAEd,CACID,OAAQ,OACRC,SAAU,QAEd,CACID,OAAQ,YACRC,SAAU,aAEd,CACID,OAAQ,UACRC,SAAU,WAEd,CACID,OAAQ,YACRC,SAAU,cAEfxD,KAAMwC,EAAaA,YAAaA,SC1U/D,SAASiB,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAoDA+R,GA/CG,SAAA/S,GAEEX,KAAhB,IACME,EAAQ4K,cAHS,EAIGjK,IAAMC,SAAS,GAJlB,mBAIhBiD,EAJgB,KAITgH,EAJS,KAevB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,eACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,mBAAsBoG,GAAU,GAA3C,CAA+CxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OAC7G,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,2BAA8BoG,GAAU,GAAnD,CAAuDxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAGzH,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,W,UC2TT3J,2BAxYU,SAAAxB,GAAU,IAAD,EAELE,IAAMC,SAAS,IAFV,mBAEvB0B,EAFuB,KAEjBC,EAFiB,OAGU5B,IAAMC,UAAS,GAHzB,mBAGvB8H,EAHuB,KAGTpC,EAHS,OAIkC3F,IAAMC,UAAS,GAJjD,mBAIvB6S,EAJuB,KAIGC,EAJH,OAKY/S,IAAMC,UAAS,GAL3B,mBAKvB+S,EALuB,KAKRC,EALQ,OAMIjT,IAAMC,SAAS,IANnB,mBAMvBiT,EANuB,KAMZC,EANY,OAODnT,IAAMC,UAAS,GAPd,mBAOvBqO,EAPuB,KAOfzM,EAPe,OASH7B,IAAMC,SAAS,IATZ,mBASvB+M,EATuB,KAShBC,EATgB,OAUKjN,IAAMC,SAAS,IAVpB,mBAUvBmT,EAVuB,KAUZC,EAVY,OAWSrT,IAAMC,SAAS,IAXxB,mBAWvBqT,EAXuB,KAWVC,EAXU,OAaOvT,IAAMC,SAAS,IAbtB,mBAavBgI,EAbuB,KAaXC,EAbW,KAgB9BlI,IAAM8B,WAAU,WAEZK,QAAQC,IAAI,QAAQT,KAatB,CAACA,EAAMtB,QA+CTL,IAAM8B,WAAU,WAEZC,MAAM7C,eAAa,wCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,aAAaH,GACzBgL,EAAUhL,EAAIqL,cAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,4CAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,KADY,yCACP,WAAMC,GAAN,gBAAAkO,EAAA,6DACFhO,QAAQC,IAAI,iBAAiBH,GAD3B,SAGcuR,QAAQC,IAAIxR,EAAIsK,WAAWzF,KAAI,SAAA4M,GAAC,MAAK,CAAC9G,aAAa8G,EAAE9G,aAAa+G,UAAUD,EAAElH,eAAe,MAAMkH,EAAEjH,sBAAsBD,eAAekH,EAAElH,eAAeC,sBAAsBiH,EAAEjH,2BAHjM,OAGEmH,EAHF,OAKFP,EAAcO,GALZ,2CADO,0DAQZtR,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,kDAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,KADY,yCACP,WAAMC,GAAN,UAAAkO,EAAA,sDACFhO,QAAQC,IAAI,oBAAoBH,GAIhCsR,EAAgBtR,EAAI4R,eALlB,2CADO,0DAQZvR,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAGjC,IA+DF,OACI,6BACI,kBAACgG,EAAA,EAAD,CACIC,KAAMwK,GAEN,yBAAK3S,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAC9B,yBAAKT,MAAO,CAAC2C,QAAQ,GAAG2E,UAAU,WAC9B,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,UAAUF,MAAO,CAACsH,UAAU,WAA3D,yBAEJ,kBAAClF,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAC2C,QAAQ,KAExBkQ,GAAaA,EAAUpL,QAAUoL,EAAUpL,OAAO,EAClD,2BAAOzH,MAAO,CAACS,MAAM,SACjB,4BACI,qCACA,8CACA,8CACA,6CACA,uCAEJ,+BAEQoS,GAAaA,EAAUpM,KAAI,SAAA9C,GAAC,OACxB,4BACI,4BAAKA,EAAE0H,YACP,4BAAK1H,EAAEwI,gBACP,4BAAKxI,EAAEyI,uBACP,4BAAKzI,EAAE8P,oBACP,wBAAIzT,MAAO,CAACE,MAA4B,WAAtByD,EAAEc,kBAA6B,MAAM,KAAMd,EAAEc,yBAMlF,MAIL,yBAAKzE,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,kBAAC4D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS,kBAAI8R,GAAiB,IAAQjS,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,OAAOgE,OAAO,KAAlI,WAMhB,kBAACgE,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAC9B,yBAAKT,MAAO,CAAC2C,QAAQ,GAAG2E,UAAU,WAC9B,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,UAAUF,MAAO,CAACsH,UAAU,WAA3D,gDAEJ,kBAAClF,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAC2C,QAAQ,KAC5B,kBAACP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASwP,EACTvP,eAAgB,SAAAC,GAAM,OAAIA,EAAO6P,WACjCtT,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWgS,UAAU3P,MAChDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,YAAYzC,QAAQ,WAAWwC,WAAS,SAIjF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAAS0P,EACTzP,eAAgB,SAAAC,GAAM,OAAIA,EAAOiQ,cACjC1T,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWqS,YAAYhQ,MAClDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,eAAezC,QAAQ,WAAWwC,WAAS,SAIpF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,WAAW4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,WAAW+J,OAAQ7L,EAAMsS,SAAU7Q,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAWsS,SAAS5Q,EAAEC,OAAOJ,UAASM,WAAS,KAE7K,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,SAAS4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,SAAS+J,OAAQ7L,EAAM2B,OAAQF,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAW2B,OAAOD,EAAEC,OAAOJ,UAASM,WAAS,KAErK,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgB4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,kBAAkB+J,OAAQ7L,EAAMuS,cAAe9Q,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAWuS,cAAc7Q,EAAEC,OAAOJ,UAASM,WAAS,KAEnM,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgB4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,kBAAkB+J,OAAQ7L,EAAMwS,cAAe/Q,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAWwS,cAAc9Q,EAAEC,OAAOJ,UAASM,WAAS,KAEnM,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,cAAc4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,gBAAgB+J,OAAQ7L,EAAMyS,YAAahR,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAWyS,YAAY/Q,EAAEC,OAAOJ,UAASM,WAAS,MAG/L,yBAAKnD,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,kBAAC4D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QA/OjC,WACjBgB,QAAQC,IAAI,eAAeT,GAC3BgE,GAAgB,GAChBuC,GAAe,SAAAwF,GAAC,6BAAQA,GAAR,CAAU,CAACjE,GAAGkE,OAAOnB,eAAe7K,EAAMgS,UAAUhS,EAAMgS,UAAUnH,eAAe,GAAGC,sBAAsB9K,EAAMgS,UAAUhS,EAAMgS,UAAUlH,sBAAsB,GAAGqH,mBAAmBnS,EAAMsS,SAASI,gBAAgB1S,EAAMwS,cAAcG,cAAc3S,EAAMyS,YAAYL,aAAapS,EAAMqS,YAAYrS,EAAMqS,YAAYD,aAAa,GAAGzQ,OAAO3B,EAAM2B,OAAOiR,gBAAgB5S,EAAMuS,qBA4O7TlT,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,OAAOgE,OAAO,KAAnH,QAGA,kBAACD,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS,kBAAIwE,GAAgB,IAAQ3E,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,OAAOgE,OAAO,KAAjI,aAMZ,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WAClD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAUA,GAAGpC,EAAS,eAAID,EAAL,CAAWtB,MAAM2D,EAAE0H,eACrDxH,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,UAAUY,QAAS,kBAAIwE,GAAgB,IAAOtF,MAAO,CAACkE,OAAO,GAAGhE,MAAM,QAASiU,WAAS,GAA1H,QAcJ,kBAAC/R,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,EAAEtC,eAAe,SAASlB,QAAQ,SACzF,kBAACuB,EAAA,EAAD,CAAYC,QAAQ,YAAYT,MAAM,UAAUF,MAAO,CAACa,OAAO,UAAUyG,UAAU,SAASgL,WAAW,OAAQxR,QAAS,kBAAI4R,GAA6BD,KAAzJ,4BAC8B,IAA7BA,EACD,2BAAO3G,KAAK,OAAO9L,MAAO,CAACoU,WAAW,IAAKrR,SAhRlC,SAACC,GAEtBlB,QAAQC,IAAI,KAAKiB,GACjBlB,QAAQC,IAAI,kBAAkBiB,EAAEC,OAAOoR,OAEvC,IAEIC,aAAatR,EAAEC,OAAOoR,MAAM,IAAI1S,KAAhC,yCAAqC,WAAOmE,GAAP,oBAAAgK,EAAA,sDAGjC,IAFIyE,EAAM,GACVzS,QAAQC,IAAI,SAAS+D,GACbmB,EAAE,EAAGA,EAAEnB,EAAK2B,OAAQR,IACpBoJ,EAAM,CACNlE,eAAerG,EAAKmB,GAAG,GACvBmF,sBAAsBtG,EAAKmB,GAAG,GAC9BwM,mBAAmB3N,EAAKmB,GAAG,GAC3B+M,gBAAgBlO,EAAKmB,GAAG,GACxByM,aAAa5N,EAAKmB,GAAG,GACrBhE,OAAO6C,EAAKmB,GAAG,GACfiN,gBAAgBpO,EAAKmB,GAAG,GACxBgN,cAAcnO,EAAKmB,GAAG,GACtBmC,GAAGkE,QAEPiH,EAAIvT,KAAKqP,GAEbvO,QAAQC,IAAI,MAAMwS,GAClB1M,EAAe0M,GAlBkB,2CAArC,uDAuBH,MAAMrS,GACHJ,QAAQC,IAAI,OAAOG,OAkPV,MAeL,kBAACE,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IAEnDiF,GAAeA,EAAYH,OAAS,EACpC,2BAAOzH,MAAO,CAACS,MAAM,SACjB,4BACI,8CACA,8CACA,6CACA,gDACA,4CACA,sCACA,+CACA,8CACA,wBAAIT,MAAO,CAAES,MAAO,WAGxB,+BAEQmH,EAAYnB,KAAI,SAAA9C,GAAC,OACb,4BACI,4BAAKA,EAAEwI,gBACP,4BAAKxI,EAAEyI,uBACP,4BAAKzI,EAAE8P,oBACP,4BAAK9P,EAAEqQ,iBACP,4BAAKrQ,EAAE+P,cACP,4BAAK/P,EAAEV,QACP,4BAAKU,EAAEuQ,iBACP,4BAAKvQ,EAAEqQ,iBACP,4BAAI,kBAAC,IAAD,CAAY9T,MAAM,UAAUF,MAAO,CAAEa,OAAQ,WAAaC,QAAS,WACnE+G,GAAe,SAAA+F,GAAK,OAAIA,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAE1E,KAAOzF,EAAEyF,mBAY5E,MAIT,kBAAChH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QArQC,WASjBgB,QAAQC,IAAI,UAAUT,GACtBQ,QAAQC,IAAI,gBAAgB6F,GAE5BpG,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,6CACvBiD,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,OACRiM,KAAMxC,KAAKC,UAAU,CAACwG,cAAc5M,EAAYyD,WAAW/J,EAAMtB,UAEpE2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACjBA,EAAI4O,YACHsC,EAAalR,EAAI4O,WACjBoC,GAAiB,IAEH,IAAfhR,EAAI2C,SACH9E,EAAM+E,gBAAgB5C,EAAI6C,kBAAkB7C,EAAI6C,kBAAkB,qCAAsC,CACpG9D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,qCAAsC,CACxD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,qCAAsC,CACxD7D,QAAS,WA8MDwC,WAAS,IAEC,IAAV8K,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAM,SADxB,+BC2DTe,2BA1bW,SAAAxB,GAAU,IAAD,EAENE,IAAMC,SAAS,IAFT,mBAExB0B,EAFwB,KAElBC,EAFkB,OAGS5B,IAAMC,UAAS,GAHxB,mBAGxB8H,EAHwB,KAGVpC,EAHU,OAIL3F,IAAMC,SAAS,MAJV,mBAIxBsS,EAJwB,KAIjBC,EAJiB,OAKiBxS,IAAMC,UAAS,GALhC,mBAKxB6U,EALwB,KAKNC,EALM,OAMO/U,IAAMC,SAAS,MANtB,mBAMxB+H,EANwB,KAMXtC,EANW,OAOS1F,IAAMC,UAAS,GAPxB,mBAOxBoL,EAPwB,KAOVD,EAPU,OAQFpL,IAAMC,UAAS,GARb,mBAQxBqO,EARwB,KAQhBzM,EARgB,OAUJ7B,IAAMC,SAAS,IAVX,mBAUxB+M,EAVwB,KAUjBC,EAViB,OAWIjN,IAAMC,SAAS,IAXnB,mBAWxBmT,EAXwB,KAWbC,EAXa,OAYQrT,IAAMC,SAAS,IAZvB,mBAYxBqT,EAZwB,KAYXC,GAZW,QAcMvT,IAAMC,SAAS,IAdrB,qBAcxBgI,GAdwB,MAcZC,GAdY,MA0C/BlI,IAAM8B,WAAU,WAGZC,MAAM7C,eAAa,wCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,aAAaH,GACzBgL,EAAUhL,EAAIqL,cAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,4CAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,KADY,yCACP,WAAMC,GAAN,gBAAAkO,EAAA,6DACFhO,QAAQC,IAAI,iBAAiBH,GAD3B,SAEcuR,QAAQC,IAAIxR,EAAIsK,WAAWzF,KAAI,SAAA4M,GAAC,MAAK,CAAC9G,aAAa8G,EAAE9G,aAAa+G,UAAUD,EAAElH,eAAe,MAAMkH,EAAEjH,sBAAsBD,eAAekH,EAAElH,eAAeC,sBAAsBiH,EAAEjH,2BAFjM,OAEEmH,EAFF,OAGFP,EAAcO,GAHZ,2CADO,0DAMZtR,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,kDAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,KADY,yCACP,WAAMC,GAAN,UAAAkO,EAAA,sDACFhO,QAAQC,IAAI,oBAAoBH,GAChCsR,GAAgBtR,EAAI4R,eAFlB,2CADO,0DAKZvR,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAKjC,IAEF,IA0DMyS,GAAiB,yCAAG,6BAAA7E,EAAA,sEAGAqD,QAAQC,IAAIxL,GAAYnB,KAAI,SAAA9C,GAC9C,OAAGA,EAAEiR,WAAWjN,EAAYiN,SACjBjN,EAEAhE,MAPO,OAGlBkR,EAHkB,OAUtB/S,QAAQC,IAAI,WAAW8S,GACvBhN,GAAegN,GACfH,GAAoB,GACpBpP,GAAgB,GAbM,2CAAH,qDAmBjBwP,GAAY,yCAAG,+BAAAhF,EAAA,6DACjBhO,QAAQC,IAAI,cAAc6F,IAC1BpG,GAAW,GAFM,SAGC2R,QAAQC,IAAIxL,GAAYnB,KAAI,SAAAsO,GAAC,sBAASA,EAAT,CAAWC,SAASD,EAAEH,SAAS3R,OAAO8R,EAAEE,aAAaf,gBAAgBa,EAAEG,gCAHrG,OAGbC,EAHa,OAIjB,IACQhR,EAAMtF,eAAa,6CACvBiD,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,OACRiM,KAAMxC,KAAKC,UAAU,CAACwG,cAAcW,MAEvCxT,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACpBiG,GAAe,IACf6M,GAAoB,GACpBjV,EAAM+E,gBAAgB,uCAAwC,CAC1D7D,QAAS,YAGhBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,mCAAoC,CACtD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,mCAAoC,CACtD7D,QAAS,SAhCA,2CAAH,qDAsCZyU,GAAc,WAChBjD,EAAS,MAETrQ,QAAQC,IAAI,UAAUT,GACtBQ,QAAQC,IAAI,gBAAgB6F,IAE5BpG,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,kEAAD,OAAmEyC,EAAMtB,OAC/F8B,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACpBiG,GAAejG,EAAIyT,gBACnBlD,EAASvQ,EAAIyT,eAAe5N,WAE/BxF,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,kCAAmC,CACrD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,kCAAmC,CACrD7D,QAAS,WAKrB,OACI,6BACI,kBAACuH,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAC9B,yBAAKT,MAAO,CAAC2C,QAAQ,KAArB,8CAIIgF,EACA,kBAACvF,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAC2C,QAAQ,KAExBb,QAAQC,IAAI,qBAAqB4F,GAEzC,kBAACvF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASwP,EACTvP,eAAgB,SAAAC,GAAM,OAAIA,EAAO6P,WACjCtT,MAAO,CAAES,MAAO,QAChB6U,aAAc,kBAAIvC,EAAWlF,QAAO,SAAAwF,GAAC,OAAIA,EAAElH,iBAAiBxE,EAAYwE,kBAAgB,IACxFpJ,SAAU,SAACC,EAAEW,GAAUA,GAAG0B,EAAe,eAAIsC,EAAL,CAAiB4E,aAAa5I,EAAE4I,aAAaJ,eAAexI,EAAEwI,eAAeC,sBAAsBzI,EAAEyI,0BAC7IvI,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,YAAYzC,QAAQ,WAAWwC,WAAS,SAIjF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAAS0P,EACTzP,eAAgB,SAAAC,GAAM,OAAIA,EAAOiQ,cACjC1T,MAAO,CAAES,MAAO,QAChB6U,aAAc,CAAC5B,aAAa/L,EAAY+L,cAGxC3Q,SAAU,SAACC,EAAEW,GAAUA,GAAG0B,EAAe,eAAIsC,EAAL,CAAiB+L,aAAa/P,EAAE+P,iBACxE7P,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,eAAezC,QAAQ,WAAWwC,WAAS,SAIpF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,WAAW4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,WAAWP,MAAO8E,EAAY8L,mBAAoB1Q,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiB8L,mBAAmB8B,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAE1N,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,SAAS4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,SAASP,MAAO8E,EAAYsN,aAAclS,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBsN,aAAaM,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAE1M,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgB4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,kBAAkBP,MAAO8E,EAAYuN,0BAA2BnS,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBuN,0BAA0BK,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAEpP,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgB4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,kBAAkBP,MAAO8E,EAAYqM,gBAAiBjR,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBqM,gBAAgBuB,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAEhO,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,cAAc4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,gBAAgBP,MAAO8E,EAAYsM,cAAelR,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBsM,cAAcsB,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,MAG3N,KAED,yBAAKnD,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,kBAAC4D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS6T,GAAmBhU,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,OAAOgE,OAAO,MAEpG,IAAZ+J,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SADzB,UAMR,kBAAC+D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS,kBAAIwE,GAAgB,IAAQ3E,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,OAAOgE,OAAO,KAAjI,aAMZ,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WAClD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWtB,MAAM2D,EAAE0H,eAC9CxH,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,UAAUY,QAASsU,GAAapV,MAAO,CAACkE,OAAO,GAAGhE,MAAM,QAASiD,WAAS,GAA5G,WAqBuB,IAAnBsR,EACA,kBAACrS,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,UAAUY,QAASgU,GAAc9U,MAAO,CAACkE,OAAO,GAAGhE,MAAM,QAASiD,WAAS,IAE3F,IAAV8K,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SADzB,WAMX,KAQK,OAAVgS,EACA,kBAAC9P,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WAClD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,GAAGmH,UAAU,KAChE,kBAACpJ,EAAA,EAAD,CAAYC,QAAQ,WAAWT,MAAM,UAAUF,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASiS,WAAW,QAAzG,yBAC2BJ,KAKlC,KAEL,kBAAC9P,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,KAEzC,IAAVsL,EACA,yBAAKjO,MAAO,CAAE2C,QAAS,GAAItC,eAAgB,SAAUlB,QAAS,SAC1D,kBAACuJ,EAAA,EAAD,CAAkBxI,MAAM,aAG5B0H,IAAeA,GAAYH,OAAS,EACpC,2BAAOzH,MAAO,CAACS,MAAM,SACjB,4BACI,8CACA,8CACA,6CACA,gDACA,4CACA,sCACA,+CACA,8CACA,8BAIJ,+BAEQmH,GAAYnB,KAAI,SAAA9C,GAAC,OACb,4BACI,4BAAKA,EAAEwI,gBACP,4BAAKxI,EAAEyI,uBACP,4BAAKzI,EAAE8P,oBACP,4BAAK9P,EAAEqQ,iBACP,4BAAKrQ,EAAE+P,cACP,4BAAK/P,EAAEsR,cACP,4BAAKtR,EAAEuR,2BACP,4BAAKvR,EAAEsQ,eACP,4BAAI,kBAAC,IAAD,CAAU/T,MAAM,UAAUF,MAAO,CAAEa,OAAQ,WAAaC,QAAS,WACjEwE,GAAgB,GAChBD,EAAe1B,GACf7B,QAAQC,IAAI,IAAI4B,MAEhB,kBAAC,IAAD,CAAYzD,MAAM,UAAUF,MAAO,CAAEa,OAAQ,WAAaC,QAAS,kBA1U1F,SAAC2K,GAClB3J,QAAQC,IAAI,YAAY0J,GACxB,IACI,IAAItH,EAAMtF,eAAY,mEAA+DkP,KAAKC,UAAL,eAAmBvC,EAAnB,CAA0BuJ,SAASvJ,EAAOmJ,aAC/H9S,QAAQC,IAAI,QAAQoC,GACpB4G,GAAgB,GAChBrJ,MAAMyC,EAAI,CACNG,OAAO,SAEN3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFmJ,GAAgB,GAChBjJ,QAAQC,IAAI,oBAAqBH,GACZ,IAAjBA,EAAI2C,WACJ9E,EAAM+E,gBAAgB,uCAAwC,CAC1D7D,QAAS,SAEbyU,SAIPnT,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B6I,GAAgB,MAG1B,MAAO7I,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC6I,GAAgB,IA8S2FD,CAAanH,YAUxG,kBAAC+H,EAAA,EAAD,CAAUvD,KAAM6C,GACZ,kBAACtC,EAAA,EAAD,CAAkBxI,MAAM,cAG/B,WCvazB,SAAS2I,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAoDA+U,GA/CO,SAAA/V,GAEFX,KAAhB,IACME,EAAQ4K,cAHa,EAIDjK,IAAMC,SAAS,GAJd,mBAIpBiD,EAJoB,KAIbgH,EAJa,KAe3B,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,mBACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,sBAAyBoG,GAAU,GAA9C,CAAkDxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OAChH,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,uBAA0BoG,GAAU,GAA/C,CAAmDxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAGrH,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,W,6BCpDT6K,GA5BS,SAAC,GAAY,IAAXrQ,EAAU,EAAVA,KAItB,OAFAtD,QAAQC,IAAI,SAASqD,GAGjB,6BACI,kBAAC,KAAD,CAAQlB,OAAQ,IAAKzD,MAAO,IAAKP,MAAM,WACvC,kBAAC,KAAD,CACIwV,KAAK,IACLC,SAAS,IACTC,YAAY,WAEhB,kBAAC,KAAD,CACIF,KAAK,IACLC,SAAS,IACTC,YAAY,SAEZ,kBAAC,KAAD,CACIxQ,KAAMA,EACNpF,MAAO,QCvBrBoF,GAAO,CACT,CACIyQ,EAAG,EACHC,EAAG,IAEP,CACID,EAAG,EACHC,EAAG,oBAEP,CACID,EAAG,EACHC,EAAG,mBAEP,CACID,EAAG,EACHC,EAAG,oBAEP,CACID,EAAG,EACHC,EAAG,oBAEP,CACID,EAAG,EACHC,EAAG,oBAEP,CACID,EAAG,EACHC,EAAG,oBAEP,CACID,EAAG,EACHC,EAAG,oBAEP,CACID,EAAG,EACHC,EAAG,qBA4BIC,GAxBE,SAAAtW,GAIb,OAAO,yBAAKO,MAAO,CAAE2C,QAAS,KAC1B,kBAACqT,GAAA,EAAD,CAAOhW,MAAO,CAAC2C,QAAQ,GAAG1C,gBAAgB,YACtC,kBAACmC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI1C,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASO,WAAW,SAASqV,cAAc,WACrH,kBAACvV,EAAA,EAAD,CAAYC,QAAQ,KAAKX,MAAO,CAACoI,aAAa,KAA9C,8BACA,kBAAC8N,GAAD,CAAyB9Q,KAAMA,MAEnC,kBAAChD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI1C,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASO,WAAW,SAASqV,cAAc,WACrH,kBAACvV,EAAA,EAAD,CAAYC,QAAQ,KAAKX,MAAO,CAACoI,aAAa,KAA9C,OACA,kBAAC8N,GAAD,CAAyB9Q,KAAMA,MAEnC,kBAAChD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAAI1C,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASO,WAAW,SAASqV,cAAc,WACrH,kBAACvV,EAAA,EAAD,CAAYC,QAAQ,KAAKX,MAAO,CAACoI,aAAa,KAA9C,gCACA,kBAAC8N,GAAD,CAAyB9Q,KAAMA,UCkMpCnE,2BApPD,SAAAxB,GAAU,IAAD,EAEME,IAAMC,SAAS,IAFrB,mBAEZ0B,EAFY,KAENC,EAFM,OAGqB5B,IAAMC,UAAS,GAHpC,mBAGZ8H,EAHY,KAGEpC,EAHF,OAIU3F,IAAMC,UAAS,GAJzB,mBAIJ4B,GAJI,aAKM7B,IAAMC,SAAS,IALrB,mBAKZ6M,EALY,KAKNC,EALM,OAMQ/M,IAAMC,SAAS,IANvB,mBAMZ+M,EANY,KAMLC,EANK,OAOQjN,IAAMC,SAAS,IAPvB,mBAOZiN,EAPY,KAOLC,EAPK,OAQkBnN,IAAMC,SAAS,IARjC,mBAQZgI,EARY,KAQAC,EARA,OASiBlI,IAAMC,SAAS,IAThC,6BAWnBD,IAAM8B,WAAU,WAEZK,QAAQC,IAAI,QAAQT,GACjBA,EAAMtB,OACL0B,MAAM7C,eAAa,2DAAD,OAA4DyC,EAAMtB,QACnF2B,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,aAAaH,GACzBkL,EAAUlL,EAAImL,cAEjB9K,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAIrC,CAACZ,EAAMtB,QAETL,IAAM8B,WAAU,WAETH,EAAM0L,MACL1H,GAAgB,KAGtB,CAAChE,EAAM0L,OASTrN,IAAM8B,WAAU,WAEZC,MAAM7C,eAAa,wCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,aAAaH,GACzBgL,EAAUhL,EAAIqL,cAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAE/BR,MAAM7C,eAAa,uCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,YAAYH,GACxB8K,EAAS9K,EAAIsL,aAEhBjL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAajC,IAyDF,OACI,6BACI,kBAACgG,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAC9B,yBAAKT,MAAO,CAAC2C,QAAQ,KAArB,kBAGA,yBAAK3C,MAAO,CAAC2C,QAAQ,KACjB,kBAACC,EAAA,EAAD,CAAWM,KAAK,WAAWvC,QAAQ,WAAWyC,MAAM,WAAW+J,OAAQ7L,EAAM8L,SAAUrK,SAAU,SAAAC,GAAC,OAAEzB,EAAS,eAAID,EAAL,CAAW8L,SAASpK,EAAEC,OAAOJ,UAASM,WAAS,KAE/J,yBAAKnD,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASyJ,UAAU,KAC1D,kBAAC7F,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QA5GjC,WACjBgB,QAAQC,IAAI,eAAeT,EAAMtB,MAAMsB,EAAM8L,UAC7C9H,GAAgB,GAChBuC,GAAe,SAAAwF,GAAC,6BAAQA,GAAR,CAAU,CAACjE,GAAGkE,OAAOC,QAAQjM,EAAM0L,KAAKO,QAAQC,UAAUlM,EAAM0L,KAAKQ,UAAUJ,SAAS9L,EAAM8L,eAC9G7L,EAAS,eAAID,EAAL,CAAWiM,QAAQ,KAAKC,UAAU,KAAKJ,SAAS,SAwGiBzM,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,SAArG,iBAGA,kBAAC+D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS,kBAAIwE,GAAgB,IAAQ3E,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,SAAnH,aAMZ,kBAACkC,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWtB,MAAM2D,EAAE0H,eAC9CxH,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASsJ,EACTrJ,eAAgB,SAAAC,GAAM,OAAIA,EAAOvD,OACjCF,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAWpB,MAAMyD,MAC5CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASkJ,EACTjJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO+J,WACjCxN,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAW0L,KAAKrJ,MAC3CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,OAAOzC,QAAQ,WAAWwC,WAAS,SAO5E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAM6U,eAAgBpT,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAW6U,eAAenT,EAAEC,OAAOJ,UAASK,KAAK,gBAAgBvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,oBAEvK,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IAEnDiF,GAAeA,EAAYH,OAAS,EACpC,2BAAOzH,MAAO,CAACS,MAAM,SACjB,4BACI,oCACA,wCACA,wBAAIT,MAAO,CAAES,MAAO,WAGvBqB,QAAQC,IAAI,cAAc6F,GAC3B,+BAEQA,EAAYnB,KAAI,SAAA9C,GAAC,OACb,4BACI,4BAAKA,EAAE6J,WACP,4BAAK7J,EAAEyJ,UACP,4BAAI,kBAAC,IAAD,CAAYlN,MAAM,UAAUF,MAAO,CAAEa,OAAQ,WAAaC,QAAS,WACnE+G,GAAe,SAAA+F,GAAK,OAAIA,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAE1E,KAAOzF,EAAEyF,mBAY5E,MAIT,kBAAChH,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QA/JF,WASdgB,QAAQC,IAAI,UAAUT,GAEtBE,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,6DAAD,OAA8DyC,EAAMpB,MAAMmL,WAA1E,kBAA8F/J,EAAMpB,MAAMA,MAA1G,oBAA2HoB,EAAM6U,eAAjI,0BAAiKpI,KAAKC,UAAUpG,IACtM9F,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,SACH9E,EAAM+E,gBAAgB,yBAA0B,CAC5C7D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,yBAA0B,CAC5C7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,yBAA0B,CAC5C7D,QAAS,WA8GDwC,WAAS,GALb,gBClFLlC,I,OAAAA,wBAnJC,SAAAxB,GAAU,IAAD,EAEeE,IAAMC,SAAS,IAF9B,gCAIID,IAAMC,SAAS,KAJnB,mBAId6M,EAJc,KAIRC,EAJQ,OAMmB/M,IAAMC,UAAS,GANlC,mBAMd8H,EANc,KAMApC,EANA,OAOiB3F,IAAMC,SAAS,MAPhC,mBAOd+H,EAPc,KAODtC,EAPC,OAQiB1F,IAAMC,SAAS,MARhC,mBAQdgI,EARc,KAQDC,EARC,OASYlI,IAAMC,SAAS,IAT3B,mBASJmI,GATI,aAUQpI,IAAMC,UAAS,GAVvB,mBAUdqO,EAVc,KAUNzM,EAVM,KAgBrB7B,IAAM8B,WAAU,WAIZ,GAHAK,QAAQC,IAAI,cAAc4F,GAC1BnG,GAAW,GACXuG,EAAaJ,GACVA,EAEC,IACI,IAAIxD,EAAMtF,eAAa,8CAAD,OAA+C8I,EAAYyO,OACjFtU,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,QAAQH,GACpB8K,EAAS9K,EAAIsL,OACb1L,GAAW,MAEdS,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,8BAA+B,CACjD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,+BAAgC,CAClD7D,QAAS,YAIvB,CAACgH,IA2BH,OANAhI,IAAM8B,WAAU,YAnBK,WAEjB,IACIC,MAAM7C,eAAe,gCAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACZiG,EAAejG,EAAIyU,OAEtBpU,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,GAC/B2F,EAAe,OAEzB,MAAO3F,GACLJ,QAAQC,IAAI,oBAAqBG,GACjC2F,EAAe,KAMnBuG,KAED,IAGC,6BAEI,kBAAClG,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAE1BiH,EACI,oCACI,yBAAK1H,MAAO,CAAEsH,UAAW,SAAUc,aAAc,KAAM,kBAAC1H,EAAA,EAAD,CAAYC,QAAQ,MAApB,aAEvC,IAAZsN,EACA,yBAAKjO,MAAO,CAAC2C,QAAQ,GAAGtC,eAAe,SAASlB,QAAQ,SACpD,kBAACuJ,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,yBAAKmC,WAAS,EAACrC,MAAO,CAACsH,UAAU,WAEzBmF,GAASA,EAAMhG,KAAI,SAAA4G,GAAC,OAAK,oCAAUA,EAAEG,UAAZ,eAAmCH,EAAED,cAI1E,kBAAChL,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WAClD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUS,QAAQ,YAAYX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAAUf,WAAS,EAACrC,QAAS,kBAAMwE,GAAgB,KAA/H,WAIV,OAIlB,yBAAKtF,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAEvB,OAAhBuH,EACI,yBAAK5H,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAG5B,2BAAOF,MAAO,CAACsW,UAAW,WACtB,4BACI,wBAAItW,MAAO,CAAES,MAAO,UACpB,kCACA,wBAAIT,MAAO,CAAES,MAAO,WAExB,+BAEQmH,GAAeA,EAAYnB,KAAI,SAAC9C,EAAEsD,GAAH,OAC3B,4BACI,4BAAKA,EAAE,GACP,wBAAIjH,MAAO,CAACsH,UAAU,WAAY3D,EAAE4S,SACpC,wBAAIvW,MAAO,CAAEsH,UAAW,WACxB,kBAAC,KAAD,CAAUpH,MAAM,UAAUY,QAAS,WAC/BwE,GAAgB,GAChBD,EAAe1B,IAChB3D,MAAO,CAAEa,OAAQ,UAAWxB,YAAa,mBCpIxF,SAASwJ,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAqDA4V,GAhDJ,SAAA5W,GAESX,KAAhB,IACME,EAAQ4K,cAHE,EAIUjK,IAAMC,SAAS,GAJzB,mBAITiD,EAJS,KAIFgH,EAJE,KAehB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,OACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,UAAaoG,GAAU,GAAlC,CAAsCxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OACpG,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,WAAcoG,GAAU,GAAnC,CAAuCxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAGzG,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KAExI,kBAAC,GAAD,W,oBCuPT3J,2BAxUE,SAAAxB,GAAU,IAAD,EAEIE,IAAMC,SAAS,IAFnB,mBAEf0B,EAFe,KAERC,EAFQ,OAGQ5B,IAAMC,UAAS,GAHvB,mBAGfqO,EAHe,KAGNzM,EAHM,OAIM7B,IAAMC,SAAS,IAJrB,mBAIf+M,EAJe,KAIPC,EAJO,OAKMjN,IAAMC,SAAS,IALrB,mBAKfiN,EALe,KAKPC,EALO,OAMEnN,IAAMC,SAAS,IANjB,mBAMf4W,EANe,KAMTC,EANS,OAOA9W,IAAMC,SAAS,IAPf,mBAOf8W,EAPe,KAOVC,EAPU,OAQQhX,IAAMC,SAAS,IARvB,mBAQfgX,EARe,KAQNC,EARM,OASQlX,IAAMC,UAAS,GATvB,mBASfkX,EATe,KASNC,EATM,KAqItBpX,IAAM8B,WAAU,YAhHI,WAChB,IACI,IAAI0C,EAAMtF,eAAY,uCACtBiD,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,QAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,QAASH,GACrBgL,EAAUhL,EAAIqL,WAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,MAE9C,MAAOA,GACLJ,QAAQC,IAAI,mBAAoBG,IAiGpC8U,GA9Fa,WACb,IACI,IAAI7S,EAAMtF,eAAY,+BACtBiD,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,QAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,QAASH,GAClBA,EAAIyU,IACHM,EAAO/U,EAAIyU,OAGlBpU,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,MAE9C,MAAOA,GACLJ,QAAQC,IAAI,mBAAoBG,IA6EpC+U,KACD,IACHtX,IAAM8B,WAAU,WACTH,EAAMtB,OAxEoB,WAC7B8B,QAAQC,IAAI,QAAST,GACrB,IACI,IAAI6C,EAAMtF,eAAY,kEAA8DyC,EAAMtB,OAC1F8B,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,QAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,QAASH,GAClBA,EAAImL,QACHD,EAAUlL,EAAImL,WAGrB9K,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,MAE9C,MAAOA,GACLJ,QAAQC,IAAI,mBAAoBG,IAsDhCgV,KAEL,CAAC5V,EAAMtB,QACVL,IAAM8B,WAAU,WACZK,QAAQC,IAAI,SAAUT,GACnBA,EAAMpB,OAxDY,WACrB4B,QAAQC,IAAI,QAAST,GACrB,IACI,IAAI6C,EAAMtF,eAAY,8DAA0DyC,EAAMpB,MAAMoL,UAC5FxJ,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,QAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,YAAaH,GACtBA,EAAIuV,MACHV,EAAQ7U,EAAIuV,SAGnBlV,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,MAE9C,MAAOA,GACLJ,QAAQC,IAAI,mBAAoBG,IAsChCkV,KAEL,CAAC9V,EAAMpB,QACVP,IAAM8B,WAAU,WACZK,QAAQC,IAAI,SAAUT,GACnBA,EAAM+V,KAxCa,WACtBvV,QAAQC,IAAI,QAAST,GACrB,IACI,IAAI6C,EAAMtF,eAAY,oEAAgEyC,EAAMpB,MAAMoL,SAA5E,qBAAiGhK,EAAM+V,IAAIC,UACjIxV,QAAQC,IAAI,MAAOoC,GACnBzC,MAAMyC,EAAK,CACPG,OAAQ,QAEP3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,gBAAiBH,GAC1BA,EAAI2V,SACHV,EAAWjV,EAAI2V,YAGtBtV,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAwBG,MAE9C,MAAOA,GACLJ,QAAQC,IAAI,mBAAoBG,IAsBhCsV,KAEL,CAAClW,EAAM+V,MAEV,IAAMI,EAAS,yCAAG,+BAAA3H,EAAA,yDACdhO,QAAQC,IAAI,QAAST,IAClBA,EAAMoW,OAFK,uBAGVlW,GAAW,GAHD,SAIkB2R,QAAQC,IAAI9R,EAAMoW,OAAOjR,KAAI,SAAAkR,GAAC,MAAK,CAACC,UAAUD,EAAEC,eAJlE,OAIJC,EAJI,OAKV/V,QAAQC,IAAI,gBAAgB8V,GAC5B,IACY1T,EAAMtF,eAAa,iDAAD,OAAkDyC,EAAMwW,GAAG1B,MAA3D,oBAA4E9U,EAAMwW,GAAGvB,QAArF,oBAAwGjV,EAAMyW,QAA9G,2BAAwIhK,KAAKC,UAAU6J,IAC7K/V,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACF,IAAfA,EAAI2C,SACH9E,EAAM+E,gBAAgB,4BAA6B,CAC/C7D,QAAS,SAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,4BAA6B,CAC/C7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,4BAA6B,CAC/C7D,QAAS,SA5CX,2CAAH,qDA4Df,OACI,6BACI,kBAACyB,EAAA,EAAD,CAAMC,WAAS,GACH,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CACIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAapC,EAAHoC,EAAY,eAAKrC,EAAN,CAAatB,MAAO2D,EAAE0H,aAA4B,eAAK/J,EAAN,CAAatB,MAAO2D,MACxGE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CACIC,QAASsJ,EACTrJ,eAAgB,SAAAC,GAAM,OAAIA,EAAOvD,OACjCF,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAapB,MAAOyD,MAChDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CACIC,QAASiT,EACThT,eAAgB,SAAAC,GAAM,OAAIA,EAAO6T,SAASU,YAC1ChY,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAa+V,IAAK1T,MAC9CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,MAAMzC,QAAQ,WAAWwC,WAAS,SAI3E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CACIC,QAASmT,EACTlT,eAAgB,SAAAC,GAAM,OAAIA,EAAO8S,SACjCvW,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAawW,GAAInU,MAC7CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,KAAKzC,QAAQ,WAAWwC,WAAS,SAKtEyT,GAAWA,EAAQnP,OAAS,EAC5B,kBAACrF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAE2C,QAAS,IACzD,kBAACsV,GAAA,EAAD,CACIC,QACA,kBAACC,GAAA,EAAD,CAAUrB,QAASA,EACnB/T,SAjQb,SAAAmH,GACjBpI,QAAQC,IAAI,gBAAgBmI,EAAMjH,OAAO6T,SAC3CC,EAAW7M,EAAMjH,OAAO6T,UACE,IAAvB5M,EAAMjH,OAAO6T,QACZvV,EAAS,eAAID,EAAL,CAAWoW,OAAOd,KAE1BrV,EAAS,eAAID,EAAL,CAAWoW,OAAO,SA4PE7U,MAAM,UACNuV,WAAY,CAAE,aAAc,sBAE5BhV,MAAM,wBAGb,KAEL,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAE2C,QAAS,KAEzC,IAAZmU,EACA,kBAACpW,EAAA,EAAD,CAAYC,QAAQ,WAAWT,MAAM,UAAUF,MAAO,CAACoI,aAAa,KAApE,0BAEA,kBAAC9E,EAAA,EAAD,CACIC,QAASqT,EACTyB,UAAQ,EACRC,sBAAoB,EACpB9U,eAAgB,SAAAC,GAAM,OAAIA,EAAO8U,aACjCvY,MAAO,CAAES,MAAO,QAEhBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAaoW,OAAQ/T,MACjDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,SAASzC,QAAQ,WAAWwC,WAAS,SAKlF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAE2C,QAAS,IACzD,kBAACC,EAAA,EAAD,CACIjC,QAAQ,WACR6X,WAAS,EACT1S,KAAM,EACN3C,WAAS,EACTC,MAAM,UACNL,SAAU,SAACC,GAAD,OAAOzB,EAAS,eAAKD,EAAN,CAAayW,QAAS/U,EAAEC,OAAOJ,aAMxE,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAE2C,QAAS,IACzD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAAEE,MAAO,OAAQgE,OAAQ,QAChCpD,QAAS2W,EACTtU,WAAS,IAEC,IAAV8K,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SADzB,6BCzTxB,SAAS2I,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAkB5C,IAAMhK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAqDAgY,GAhDM,SAAAhZ,GAEDX,KAAhB,IAjBeiK,EAkBT/J,EAAQ4K,cAHY,EAIAjK,IAAMC,SAAS,GAJf,mBAInBiD,EAJmB,KAIZgH,EAJY,KAe1B,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,wBACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,iBA3CxB,CACHgG,GAAG,kBAAD,OAFSL,EA4C8C,GAzCzD,gBAAgB,uBAAhB,OAAwCA,IAyCxB,CAA6C/I,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAI/G,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,OAAO0K,uBAAuB,GAAGC,wBAAwB,UC3E7J,SAASlG,GAAT,GAIK,EAHDC,sBAGE,IAFFC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAIA,OACE,8BACE,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,eACNP,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQ/D,IAAMyN,GAAwB3O,IAAM4O,YAClC,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAahP,IAAMiP,SACnBC,EAAcL,GAAOG,EAM3B,OAJAhP,IAAM8B,WAAU,WACdoN,EAAYC,QAAQL,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,oCACE,yCAAO3C,KAAK,WAAW0C,IAAKK,GAAiBH,QAMvD,SAASxJ,GAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,KAAM2J,EAAgB,EAAhBA,aAAgB,EAsBxCxJ,YAAS,CACXJ,UACAC,QACAI,IAAgBC,IAAcuJ,KAChC,SAAAC,GACEA,EAAMC,eAAelO,MAAK,SAAAmE,GAAO,OAE/B,CACEiE,GAAI,YAGJT,OAAQ,gBAAGwG,EAAH,EAAGA,8BAAH,OACN,6BACE,kBAAC,GAA0BA,OAK/BC,KAAM,gBAAGpI,EAAH,EAAGA,IAAH,OACJ,6BACE,kBAAC,GAA0BA,EAAIqI,iCAfN,oBAmB5BlK,UA3CLO,EAH0C,EAG1CA,cACAC,EAJ0C,EAI1CA,kBACAC,EAL0C,EAK1CA,aAEAC,GAP0C,EAM1CC,KAN0C,EAO1CD,YACAE,EAR0C,EAQ1CA,aAR0C,IAS1CzE,MAAS0E,EATiC,EASjCA,UAAqBpB,GATY,EAStBqB,SATsB,EASZrB,cAC9BsB,EAV0C,EAU1CA,gBACAC,EAX0C,EAW1CA,SACAC,EAZ0C,EAY1CA,KACAC,EAb0C,EAa1CA,YAEAC,EAf0C,EAe1CA,YAEKgJ,GAjBqC,EAgB1CoJ,iBAhB0C,EAiB9CpX,MAASgO,gBACLzK,EAlB0C,EAkB1CA,gBACAF,EAnB0C,EAmB1CA,sBAnB0C,EAqB1C6B,YAuCJ,OACI,6BACI,yBAAKxG,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASyJ,UAAU,KAC5D,yBAAK9J,MAAO,CAACS,MAAM,MACf,kBAAC,GAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,MAI3B,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,mBAKxD,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAGd,OAFApB,EAAWmB,GACXlF,QAAQC,IAAI,QAAQiF,GAElB,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,sCAAIpH,MAAO,CAACsH,UAAU,WAAeF,EAAKC,gBAAiBD,EAAKL,OAAO,kBAc5F,6CAAmByI,OAAOC,KAAKH,GAAgB7H,QACzC,yBAAKzH,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,cAKAmJ,OAAOC,KAAKH,GAAgB7H,OAAS,EACrC,kBAACrF,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WACtD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAE8J,UAAU,KAC1D,kBAAC7F,EAAA,EAAD,CAAQd,WAAS,EAACxC,QAAQ,YAAYT,MAAM,UAAUY,QAAS,kBAAIiO,EAAaO,IAAiBtP,MAAO,CAACE,MAAM,OAAOgE,OAAO,KAA7H,YAGP,MAMjB,IA2OejD,2BA3OC,SAAAxB,GAAS,MAGmBE,IAAMC,UAAS,GAHlC,gCAMmBD,IAAMC,SAAS,KANlC,mBAMd+Y,EANc,KAMAC,EANA,OAOKjZ,IAAMC,SAAS,IAPpB,mBAOdqQ,EAPc,KAOP4I,EAPO,OAQiBlZ,IAAMC,SAAS,CAAC,CAACwJ,GAAG,EAAElG,KAAK,eAAe,CAACkG,GAAG,EAAElG,KAAK,iBAAiB,CAACkG,GAAG,EAAElG,KAAK,SAAS,CAACkG,GAAG,EAAElG,KAAK,gBARtH,gCASKvD,IAAMC,SAAS,KATpB,mBASd0B,EATc,KASPC,EATO,OAUS5B,IAAMC,UAAS,GAVxB,mBAUdqO,EAVc,KAULzM,EAVK,KAwCfsX,EAAmB,yCAAG,WAAOC,GAAP,sBAAAjJ,EAAA,sDAM1B,IAJAtO,GAAW,GACXM,QAAQC,IAAI,UAAUgX,GAClB/I,EAAYR,OAAOC,KAAKsJ,GACxBC,GAAQ,EALc,WAMlB/R,GACNnF,QAAQC,IAAI,cAAckO,EAAME,SAASH,EAAU/I,KAAKgS,aACxD,IACE,IAAI9U,EAAMtF,eAAa,6DAAD,OAA8DoR,EAAME,SAASH,EAAU/I,KAAKgS,aAClHnX,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,GAAkB,IAAfA,EAAI2C,SAAa,CAClB,IAAI2U,EAAWjJ,EAAMpC,QAAO,SAAAsL,GAAC,OAAIA,EAAEF,cAAgBhJ,EAAME,SAASH,EAAU/I,KAAKgS,eACjFJ,EAASK,QAETF,GAAQ,EAEVlX,QAAQC,IAAI,gDAA6CH,MAE1DK,OAAM,SAAAC,GACLJ,QAAQC,IAAI,kBAAmBG,MAEnC,MAAOA,GACLJ,QAAQC,IAAI,oBAAqBG,KAtB/B+E,EAAE,EAAGA,EAAE+I,EAAUvI,OAAOR,IAAK,EAA7BA,GA0BRzF,GAAW,IACA,IAARwX,EACDvZ,EAAM+E,gBAAgB,wBAAyB,CAC7C7D,QAAS,SAGTlB,EAAM+E,gBAAgB,4BAA6B,CACjD7D,QAAS,SAvCW,2CAAH,sDA0FzB,OAJAhB,IAAM8B,WAAU,YApBU,WACtB,IACIC,MAAM7C,eAAe,qDAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,MAAMH,GACA,IAAfA,EAAI2C,UACLqU,EAAgBhX,EAAI6O,aAGzBxO,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,MAGzC,MAAOA,GACLJ,QAAQC,IAAI,oBAAqBG,IAMvCkX,KACC,IAGC,6BACI,kBAAChX,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACK,eAAe,SAASlB,QAAQ,SACpD,kBAACiD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IAEnD,kBAACW,EAAA,EAAD,CACEC,QAASoV,EACTnV,eAAgB,SAAAC,GAAM,OAAEA,EAAOsN,cAC/B/Q,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAa+X,YAAa1V,MACtDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,gBAAgBzC,QAAQ,WAAWwC,WAAS,SAInF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACrD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYwC,WAAS,EAACjD,MAAM,UAAUF,MAAO,CAACkE,OAAO,QAASpD,QArIzE,WACjBU,GAAW,GACX,IACE,IAAI2C,EAAMtF,eAAa,gFAAD,OAAiFyC,EAAM+X,YAAY/X,EAAM+X,YAAYtI,aAAa,IACxJjP,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,UAAOH,GACD,IAAfA,EAAI2C,UACLsU,EAASjX,EAAIqP,OAEfzP,GAAW,MAEZS,OAAM,SAAAC,GACLV,GAAW,GACXM,QAAQC,IAAI,kBAAmBG,MAGnC,MAAOA,GACLV,GAAW,GACXM,QAAQC,IAAI,oBAAqBG,OAgHX,IAAV+L,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SACxB,WAMM,IAAf+P,EAAMxI,OACN,yBAAKzH,MAAO,CAAC2C,QAAQ,GAAGtC,eAAe,SAASlB,QAAQ,OAAOe,MAAM,SAArE,uBAIA,kBAAC,GAAD,CAASiF,QAAS,CACd,CACIwD,OAAQ,OACRC,SAAU,eAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,QACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,eACRC,SAAU,iBAGfxD,KAAM6K,EAAOlB,aAAc+J,QCjX5C,SAASpU,GAAT,GAIK,EAHDC,sBAGE,IAFFC,EAEC,EAFDA,aACAC,EACC,EADDA,gBAIA,OACE,8BACE,kBAACjC,EAAA,EAAD,CACIM,KAAK,cACLvC,QAAQ,WACRyC,MAAM,eACNP,MAAO+B,GAAgB,GACvB7B,SAAU,SAAAC,GAAC,OAAI6B,EAAgB7B,EAAEC,OAAOJ,YAASiC,IACjD3B,WAAS,EACT4B,WAAY,CACRC,aAAc,kBAACC,EAAA,EAAD,CAAgBlF,SAAS,OACnC,kBAAC,IAAD,CAAYG,MAAM,UAAUF,MAAO,CAAEa,OAAQ,kBAQ/D,IAAMyN,GAAwB3O,IAAM4O,YAClC,WAA6BC,GAAS,IAAnCC,EAAkC,EAAlCA,cAAkBC,EAAgB,iCAC7BC,EAAahP,IAAMiP,SACnBC,EAAcL,GAAOG,EAM3B,OAJAhP,IAAM8B,WAAU,WACdoN,EAAYC,QAAQL,cAAgBA,IACnC,CAACI,EAAaJ,IAGf,oCACE,yCAAO3C,KAAK,WAAW0C,IAAKK,GAAiBH,QAMvD,SAASxJ,GAAT,GAAmD,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,KAAM2J,EAAgB,EAAhBA,aAAgB,EAsBxCxJ,YAAS,CACXJ,UACAC,QACAI,IAAgBC,IAAcuJ,KAChC,SAAAC,GACEA,EAAMC,eAAelO,MAAK,SAAAmE,GAAO,OAE/B,CACEiE,GAAI,YAGJT,OAAQ,gBAAGwG,EAAH,EAAGA,8BAAH,OACN,6BACE,kBAAC,GAA0BA,OAK/BC,KAAM,gBAAGpI,EAAH,EAAGA,IAAH,OACJ,6BACE,kBAAC,GAA0BA,EAAIqI,iCAfN,oBAmB5BlK,UA3CLO,EAH0C,EAG1CA,cACAC,EAJ0C,EAI1CA,kBACAC,EAL0C,EAK1CA,aAEAC,GAP0C,EAM1CC,KAN0C,EAO1CD,YACAE,EAR0C,EAQ1CA,aAR0C,IAS1CzE,MAAS0E,EATiC,EASjCA,UAAqBpB,GATY,EAStBqB,SATsB,EASZrB,cAC9BsB,EAV0C,EAU1CA,gBACAC,EAX0C,EAW1CA,SACAC,EAZ0C,EAY1CA,KACAC,EAb0C,EAa1CA,YAEAC,EAf0C,EAe1CA,YAEKgJ,GAjBqC,EAgB1CoJ,iBAhB0C,EAiB9CpX,MAASgO,gBACLzK,EAlB0C,EAkB1CA,gBACAF,EAnB0C,EAmB1CA,sBAnB0C,EAqB1C6B,YAuCJ,OACI,6BACI,yBAAKxG,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASyJ,UAAU,KAC5D,yBAAK9J,MAAO,CAACS,MAAM,MACf,kBAAC,GAAD,CACIkE,sBAAuBA,EACvBC,aAAcA,EACdC,gBAAiBA,MAI3B,2CAAWa,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,mBAKxD,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAGd,OAFApB,EAAWmB,GACXlF,QAAQC,IAAI,QAAQiF,GAElB,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,sCAAIpH,MAAO,CAACsH,UAAU,WAAeF,EAAKC,gBAAiBD,EAAKL,OAAO,kBAc5F,6CAAmByI,OAAOC,KAAKH,GAAgB7H,QACzC,yBAAKzH,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,cAKAmJ,OAAOC,KAAKH,GAAgB7H,OAAS,EACrC,kBAACrF,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WACtD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAE8J,UAAU,KAC1D,kBAAC7F,EAAA,EAAD,CAAQd,WAAS,EAACxC,QAAQ,YAAYT,MAAM,UAAUY,QAAS,kBAAIiO,EAAaO,IAAiBtP,MAAO,CAACE,MAAM,OAAOgE,OAAO,KAA7H,YAGP,MAMjB,IA2OejD,2BA3OE,SAAAxB,GAAS,MAGkBE,IAAMC,UAAS,GAHjC,gCAMkBD,IAAMC,SAAS,KANjC,mBAMf+Y,EANe,KAMDC,EANC,OAOIjZ,IAAMC,SAAS,IAPnB,mBAOfqQ,EAPe,KAOR4I,EAPQ,OAQgBlZ,IAAMC,SAAS,CAAC,CAACwJ,GAAG,EAAElG,KAAK,eAAe,CAACkG,GAAG,EAAElG,KAAK,iBAAiB,CAACkG,GAAG,EAAElG,KAAK,SAAS,CAACkG,GAAG,EAAElG,KAAK,gBARrH,gCASIvD,IAAMC,SAAS,KATnB,mBASf0B,EATe,KASRC,EATQ,OAUQ5B,IAAMC,UAAS,GAVvB,mBAUfqO,EAVe,KAUNzM,EAVM,KAwChBsX,EAAmB,yCAAG,WAAOC,GAAP,sBAAAjJ,EAAA,sDAM1B,IAJAtO,GAAW,GACXM,QAAQC,IAAI,UAAUgX,GAClB/I,EAAYR,OAAOC,KAAKsJ,GACxBC,GAAQ,EALc,WAMlB/R,GACNnF,QAAQC,IAAI,cAAckO,EAAME,SAASH,EAAU/I,KAAKgS,aACxD,IACE,IAAI9U,EAAMtF,eAAa,6DAAD,OAA8DoR,EAAME,SAASH,EAAU/I,KAAKgS,aAClHnX,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACF,GAAkB,IAAfA,EAAI2C,SAAa,CAClB,IAAI2U,EAAWjJ,EAAMpC,QAAO,SAAAsL,GAAC,OAAIA,EAAEF,cAAgBhJ,EAAME,SAASH,EAAU/I,KAAKgS,eACjFJ,EAASK,QAETF,GAAQ,EAEVlX,QAAQC,IAAI,gDAA6CH,MAE1DK,OAAM,SAAAC,GACLJ,QAAQC,IAAI,kBAAmBG,MAEnC,MAAOA,GACLJ,QAAQC,IAAI,oBAAqBG,KAtB/B+E,EAAE,EAAGA,EAAE+I,EAAUvI,OAAOR,IAAK,EAA7BA,GA0BRzF,GAAW,IACA,IAARwX,EACDvZ,EAAM+E,gBAAgB,wBAAyB,CAC7C7D,QAAS,SAGTlB,EAAM+E,gBAAgB,6BAA8B,CAClD7D,QAAS,SAvCW,2CAAH,sDA0FzB,OAJAhB,IAAM8B,WAAU,YApBU,WACtB,IACIC,MAAM7C,eAAe,qDAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACM,IAAfA,EAAI2C,UACLqU,EAAgBhX,EAAI6O,aAGzBxO,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,MAGzC,MAAOA,GACLJ,QAAQC,IAAI,oBAAqBG,IAMvCkX,KACC,IAGC,6BACI,kBAAChX,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACK,eAAe,SAASlB,QAAQ,SACpD,kBAACiD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IAEnD,kBAACW,EAAA,EAAD,CACEC,QAASoV,EACTnV,eAAgB,SAAAC,GAAM,OAAEA,EAAOsN,cAC/B/Q,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAGW,GAAJ,OAAUpC,EAAS,eAAKD,EAAN,CAAa+X,YAAa1V,MACtDE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,gBAAgBzC,QAAQ,WAAWwC,WAAS,SAInF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACrD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYwC,WAAS,EAACjD,MAAM,UAAUF,MAAO,CAACkE,OAAO,QAASpD,QArIzE,WACjBU,GAAW,GACX,IACE,IAAI2C,EAAMtF,eAAa,iFAAD,OAAkFyC,EAAM+X,YAAY/X,EAAM+X,YAAYtI,aAAa,IACzJjP,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACM,IAAfA,EAAI2C,UACLsU,EAASjX,EAAIqP,OAEfzP,GAAW,MAEZS,OAAM,SAAAC,GACLV,GAAW,GACXM,QAAQC,IAAI,kBAAmBG,MAGnC,MAAOA,GACLV,GAAW,GACXM,QAAQC,IAAI,oBAAqBG,OAgHX,IAAV+L,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SACxB,WAMM,IAAf+P,EAAMxI,OACN,yBAAKzH,MAAO,CAAC2C,QAAQ,GAAGtC,eAAe,SAASlB,QAAQ,OAAOe,MAAM,SAArE,uBAIA,kBAAC,GAAD,CAASiF,QAAS,CACd,CACIwD,OAAQ,OACRC,SAAU,eAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,QACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,eACRC,SAAU,iBAGfxD,KAAM6K,EAAOlB,aAAc+J,QChX5C,SAASjQ,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAsDA6Y,GAjDK,SAAA7Z,GAEAX,KAAhB,IACME,EAAQ4K,cAHW,EAICjK,IAAMC,SAAS,GAJhB,mBAIlBiD,EAJkB,KAIXgH,EAJW,KAezB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,oBACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,YAAeoG,GAAU,GAApC,CAAwCxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OACtG,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,aAAgBoG,GAAU,GAArC,CAAyCxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAG3G,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,W,qECpBlB2O,GAAgB,CACpBnK,KA7BmB,SAAC,GAKf,IAJUoK,EAIX,EAJJpS,KAAQvE,MACDkG,EAGH,EAHJ/B,IAAO+B,MACGK,EAEN,EAFJvC,OAAUuC,GACVqQ,EACI,EADJA,aACI,EAEsB9Z,IAAMC,SAAS4Z,GAFrC,mBAEG3W,EAFH,KAEUgH,EAFV,KAmBJ,OAJAlK,IAAM8B,WAAU,WACdoI,EAAS2P,KACR,CAACA,IAEG,2BAAO3W,MAAOA,EAAOE,SAfX,SAAAC,GACf6G,EAAS7G,EAAEC,OAAOJ,QAc4B6W,OAVjC,WACX5X,QAAQC,IAAIgH,EAAMK,EAAGvG,GACvB4W,EAAa1Q,EAAOK,EAAIvG,IAQsC7C,MAAO,CAACS,MAAM,OAAOR,gBAAiB,cAAc0Z,OAAQ,YAS9H,SAASC,GAAT,GAA+E,IAA9DzU,EAA6D,EAA7DA,QAASC,EAAoD,EAApDA,KAAMqU,EAA8C,EAA9CA,aAAcI,EAAgC,EAAhCA,cAAchS,EAAkB,EAAlBA,eAAkB,EAmBxEtC,YACF,CACEJ,UACAC,OACAmU,iBAEAO,eAAgBD,EAMhBJ,gBAEFhU,KA5BAC,EAL0E,EAK1EA,cACAC,EAN0E,EAM1EA,kBACAC,EAP0E,EAO1EA,aACAC,EAR0E,EAQ1EA,WACAO,EAT0E,EAS1EA,KACAF,EAV0E,EAU1EA,gBACAG,EAX0E,EAW1EA,YACAC,EAZ0E,EAY1EA,YAGAH,GAf0E,EAa1E4T,UAb0E,EAc1ExT,SAd0E,EAe1EJ,UACAJ,EAhB0E,EAgB1EA,aAhB0E,KAiB1ES,YAjB0E,EAkB1ElF,OAAS0E,EAlBiE,EAkBjEA,UAlBiE,EAkBtDC,SAmBtB,OACE,oCACE,yCAAOjG,MAAO,CAACS,MAAM,SAAaiF,KAChC,+BACGE,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,cAEhD,kCAIR,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAGd,OAFApB,EAAWmB,GAGT,uBAAQA,EAAIE,cACTF,EAAIG,MAAMV,KAAI,SAAAW,GACb,OAAO,uBAAQA,EAAKC,eAAiBD,EAAKL,OAAO,YAEnD,4BAAI,kBAAC,IAAD,CAAY7G,MAAM,UAAUF,MAAO,CAAEa,OAAQ,WAAaC,QAAS,WACnE+G,GAAe,SAAA+F,GAAK,OAAIA,EAAMC,QAAO,SAAAC,GAAC,OAAIA,EAAE1E,KAAOpC,EAAIO,SAAS6B,mBAO9E,yBAAKpJ,MAAO,CAACb,QAAQ,OAAOkB,eAAe,gBAAgB+H,aAAa,KACpE,4BAAQtH,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eAqKK2T,OAjHf,SAAava,GACX,IAAM0F,EAAUxF,IAAMsa,SACpB,iBAAM,CACF,CACItR,OAAQ,iBACRC,SAAU,cAEd,CACID,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,QACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,MACRC,SAAU,OAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,eACRC,SAAU,gBAEd,CACID,OAAQ,UACRC,SAAU,WAEd,CACID,OAAQ,cACRC,SAAU,eAEd,CACID,OAAQ,cACRC,SAAU,kBAGlB,IApDgB,EAuDMjJ,IAAMC,SAAS,IAvDrB,mBAuDXwF,EAvDW,KAuDL8U,EAvDK,OAwDKva,IAAMC,SAASH,EAAMmI,aAxD1B,uBAyDwBjI,IAAMC,UAAS,IAzDvC,mBAyDXia,EAzDW,KAyDIM,EAzDJ,KA2DlBxa,IAAM8B,WAAU,WACXhC,EAAMmI,aACLsS,EAAQza,EAAMmI,eAElB,CAACnI,EAAMmI,cAOT,IAAM6R,EAAY,yCAAG,WAAOW,EAAUC,EAAUxX,GAA3B,gBAAAiN,EAAA,6DAGnBqK,GAAiB,GAHE,SAIHhH,QAAQC,IAAIhO,EAAKqB,KAAI,SAACO,EAAK+B,GACvC,OAAIA,IAAUqR,EACL,eACFhV,EAAKgV,GADV,gBAEGC,EAAWxX,IAGTmE,MAXQ,OAIfuN,EAJe,OAanB2F,EAAQ3F,GACR9U,EAAMoI,eAAe0M,GAdF,2CAAH,0DA6BlB,OARA5U,IAAM8B,WAAU,WACd0Y,GAAiB,KAChB,CAAC/U,IAOH,oCAEG,kBAACwU,GAAD,CACEzU,QAASA,EACTC,KAAMA,EACNqU,aAAcA,EACdI,cAAeA,EACfhS,eAAgBpI,EAAMoI,mB,UCxSxB/I,GAAYC,aAAW,CACzBub,QAAQ,CAACva,SAAS,WAAWc,OAAO,UAAUgQ,MAAM,GAAG0J,OAAO,IAAI3J,IAAI,GAAG1Q,MAAM,aAidpEe,2BA3cQ,SAAAxB,GAEHX,KAAhB,IAF4B,EAGFa,IAAMC,SAAS,MAHb,mBAGrBiD,EAHqB,KAGdgH,EAHc,OAIIlK,IAAMC,SAAS,MAJnB,mBAIrB4a,EAJqB,KAIXC,EAJW,OAeL9a,IAAMC,SAAS,OAfV,mBAehB8a,GAfgB,aAgBI/a,IAAMC,SAAS,MAhBnB,mBAgBrB+a,EAhBqB,KAgBXC,EAhBW,KAsBtBC,EAAc,WAChBD,EAAY,OAvBY,EA0BHjb,IAAMC,SAAS,IA1BZ,mBA0BrB0B,EA1BqB,KA0BfC,EA1Be,OA2Ba5B,IAAMC,UAAS,GA3B5B,mBA2BrBkb,EA3BqB,KA2BPC,EA3BO,OA4BOpb,IAAMC,SAAS,IA5BtB,gCA6BKD,IAAMC,SAAS,OA7BpB,mBA6BrBob,EA7BqB,KA6BXC,EA7BW,OA8BYtb,IAAMC,UAAS,GA9B3B,mBA8BrB8H,EA9BqB,KA8BPpC,EA9BO,OA+BC3F,IAAMC,UAAS,GA/BhB,mBA+BrBqO,EA/BqB,KA+BbzM,EA/Ba,OAgCW7B,IAAMC,UAAS,GAhC1B,mBAgCrBsb,EAhCqB,KAgCRC,EAhCQ,QAkCDxb,IAAMC,SAAS,IAlCd,qCAmCLD,IAAMC,SAAS,KAnCV,qCAoCDD,IAAMC,SAAS,KApCd,qBAoCrB+M,GApCqB,MAoCdC,GApCc,SAqCDjN,IAAMC,SAAS,IArCd,qBAqCrBiN,GArCqB,MAqCdC,GArCc,SAsCSnN,IAAMC,SAAS,IAtCxB,qBAsCrBgI,GAtCqB,MAsCTC,GAtCS,MAuEtBuT,GAAY,yCAAG,+BAAAtL,EAAA,sDAGjB,IAFAhO,QAAQC,IAAI,eAAeT,GACvB+Z,EAAS,GACLpU,EAAE,EAAGA,EAAE+T,EAAU/T,IACrBoU,EAAOra,KAAP,aAAaoI,GAAGkE,QAAUhM,IAE9BgE,GAAgB,GAChBuC,IAAe,SAAAwF,GAAC,6BAAQA,GAAKgO,MAC7B9Z,EAAS,IARQ,2CAAH,qDAWlB5B,IAAM8B,WAAU,WAEZC,MAAM7C,eAAa,wCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,aAAaH,GACzBgL,GAAUhL,EAAIqL,cAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAE/BR,MAAM7C,eAAa,oCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAI,YAAYH,GACxBkL,GAAUlL,EAAImL,cAEjB9K,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAEjC,IAEF,IAyCMuV,GAAS,yCAAG,iCAAA3H,EAAA,sDAEdhO,QAAQC,IAAI,UAAUT,GAEtBE,GAAW,GAgBXqG,GAfIyT,EAAO1T,IAgBP2T,GAAU,IAAIC,MAAOC,UACzB,IACQtX,EAAMtF,eAAa,sDACvBiD,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,OACRiM,KAAKxC,KAAKC,UAAU,CAAC0N,aAAaJ,MAErC3Z,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAGF,GAFAJ,GAAW,GACXM,QAAQC,IAAI,6FAA6FH,GACvF,IAAfA,EAAI2C,SAAa,CAEhB,IAAIoX,GAAY,IAAIH,MAAOC,UAAUF,EACrCzZ,QAAQC,IAAI,kBAAkBoO,SAASwL,EAAU,KAAM,mBAAmB/Z,EAAI4O,UAAU/I,OAAO,WAC/FhI,EAAM+E,gBAAgB,mCAAoC,CACtD7D,QAAS,aAGqB,kBAAxBiB,EAAI6C,mBACV3C,QAAQC,IAAI,gBACZtC,EAAM+E,gBAAgB,qBAAsB,CACxC7D,QAAS,UAGblB,EAAM+E,gBAAgB5C,EAAI6C,kBAAmB,CACzC9D,QAAS,YAKxBsB,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,mCAAoC,CACtD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,mCAAoC,CACtD7D,QAAS,SAhEH,2CAAH,qDAqEf,OACI,6BACI,kBAACuH,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAC9B,yBAAKT,MAAO,CAACsH,UAAU,WAAW,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,KAAKX,MAAO,CAACyN,OAAO,KAAxC,0BAClC,kBAACrL,EAAA,EAAD,CAAMC,WAAS,GAiBX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACC,EAAA,EAAD,CAAWC,MAAOmY,EAAWlP,KAAK,SAAS/I,SAAU,SAAAC,GAAC,OAAIiY,EAAajY,EAAEC,OAAOJ,QAAQK,KAAK,YAAYvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,qBAEhJ,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAASsa,GAAcza,QAAQ,YAAYX,MAAO,CAACE,MAAM,OAAOgE,OAAO,KAAzG,aAIJ,kBAAC9B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS,kBAAIwE,GAAgB,IAAQ3E,QAAQ,YAAYX,MAAO,CAACE,MAAM,OAAOgE,OAAO,KAAvH,cAYhB,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,GACX,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMsa,WAAY7Y,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWsa,WAAW5Y,EAAEC,OAAOJ,UAASK,KAAK,aAAavC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,oBAE5J,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMua,SAAU9Y,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWua,SAAS7Y,EAAEC,OAAOJ,UAASK,KAAK,WAAWvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,cAWtJ,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMuJ,MAAO9H,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWuJ,MAAM7H,EAAEC,OAAOJ,UAASK,KAAK,QAAQvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,WAY7I,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,GACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAapC,EAAHoC,EAAY,eAAIrC,EAAL,CAAW+J,WAAW1H,EAAE0H,aAA2B,eAAI/J,EAAL,CAAW+J,WAAW1H,MAC1GE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASsJ,GACTrJ,eAAgB,SAAAC,GAAM,OAAIA,EAAOvD,OACjCF,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAcpC,EAAHoC,EAAY,eAAIrC,EAAL,CAAWpB,MAAMyD,EAAEzD,QAAsB,eAAIoB,EAAL,CAAWpB,MAAMyD,MAC5FE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMwa,IAAK/Y,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWwa,IAAI9Y,EAAEC,OAAOJ,UAASK,KAAK,MAAMvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,SAGvI,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMmG,OAAQqE,KAAK,SAAS/I,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWmG,OAAOzE,EAAEC,OAAOJ,UAASK,KAAK,SAASvC,QAAQ,WAAWwC,WAAS,EAACC,MAAK,kBAAaoX,EAAb,QAG7J,kBAACpY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAMya,WAAYjQ,KAAK,SAAS/I,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAWya,WAAW/Y,EAAEC,OAAOJ,UAASK,KAAK,aAAavC,QAAQ,WAAWwC,WAAS,EAACC,MAAK,sBAAiBP,EAAjB,QAEzK,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAM0a,aAAclQ,KAAK,SAAS/I,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAW0a,aAAahZ,EAAEC,OAAOJ,UAASK,KAAK,eAAevC,QAAQ,WAAWwC,WAAS,EAACC,MAAK,wBAAmBP,EAAnB,QAG/K,kBAACT,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAM2a,YAAalZ,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAW2a,YAAYjZ,EAAEC,OAAOJ,UAASK,KAAK,cAAcvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,iBAE/J,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAM4a,QAASnZ,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAW4a,QAAQlZ,EAAEC,OAAOJ,UAASK,KAAK,UAAUvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,aAEnJ,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACC,EAAA,EAAD,CAAWC,MAAOvB,EAAM6a,YAAapZ,SAAU,SAAAC,GAAC,OAAIzB,EAAS,eAAID,EAAL,CAAW6a,YAAYnZ,EAAEC,OAAOJ,UAASK,KAAK,cAAcvC,QAAQ,WAAWwC,WAAS,EAACC,MAAM,iBAE3J,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,EAAE/B,WAAW,WAChE,kBAACwb,GAAA,EAAD,CAAY9R,aAAW,OAAOpH,KAAK,UAAUL,MAAOA,EAAOE,SAzU5C,SAAAmH,GAC3BL,EAASK,EAAMjH,OAAOJ,SAwUV,uCAEI,kBAACoV,GAAA,EAAD,CAAkBpV,MAAM,KAAKqV,QAAS,kBAACmE,GAAA,EAAD,MAAWjZ,MAAM,cACvD,kBAAC6U,GAAA,EAAD,CAAkBpV,MAAM,KAAKqV,QAAS,kBAACmE,GAAA,EAAD,MAAWjZ,MAAM,aAG/D,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,EAAE/B,WAAW,WAChE,kBAACwb,GAAA,EAAD,CAAY9R,aAAW,OAAOpH,KAAK,SAASL,MAAO2X,EAAUzX,SA7U9C,SAAAmH,GAC3BuQ,EAAYvQ,EAAMjH,OAAOJ,SA4Ub,uCAEI,kBAACoV,GAAA,EAAD,CAAkBpV,MAAM,IAAIqV,QAAS,kBAACmE,GAAA,EAAD,MAAWjZ,MAAM,WACtD,kBAAC6U,GAAA,EAAD,CAAkBpV,MAAM,KAAKqV,QAAS,kBAACmE,GAAA,EAAD,MAAWjZ,MAAM,YAG/D,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,YAAYF,MAAO,CAACkE,OAAO,QAASpD,QAAS,kBAAIwE,GAAgB,IAAOnC,WAAS,GAAnH,kBAQJ,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACjC,EAAA,EAAD,CAAYI,QA/TA,WACxBia,GAAkBD,IA8ToCna,QAAQ,YAAYT,MAAM,UAAUF,MAAO,CAACsS,WAAW,MAAMzR,OAAO,YAA9G,+BAEoB,IAAhBia,EACA,2BAAO1R,GAAG,SAAS0C,KAAK,OAAO/I,SAnQ1B,SAACC,GACtBmY,GAAgB,GAIhB,IAEI7G,aAAatR,EAAEC,OAAOoR,MAAM,IAAI1S,KAAhC,yCAAqC,WAAOmE,GAAP,oBAAAgK,EAAA,sDAGjC,IAFIyE,EAAM,GAEFtN,EAAE,EAAGA,EAAEnB,EAAK2B,OAAQR,IACpBoJ,EAAM,CACNuL,WAAW9V,EAAKmB,GAAG,GACnB4U,SAAS/V,EAAKmB,GAAG,GACjB4D,MAAM/E,EAAKmB,GAAG,GACdoE,WAAWvF,EAAKmB,GAAG,GACnB/G,MAAM4F,EAAKmB,GAAG,GACd6U,IAAIhW,EAAKmB,GAAG,GACZQ,OAAO3B,EAAKmB,GAAG,GACf8U,WAAWjW,EAAKmB,GAAG,GACnB+U,aAAalW,EAAKmB,GAAG,GACrBiV,QAAQpW,EAAKmB,GAAG,GAChBkV,YAAYrW,EAAKmB,GAAG,IACpBgV,YAAYnW,EAAKmB,GAAG,IACpBmC,GAAGkE,QAEPiH,EAAIvT,KAAKqP,GAEbvO,QAAQC,IAAI,MAAMwS,GAClB1M,GAAe0M,GACf4G,GAAgB,GAvBiB,2CAArC,uDA2BH,MAAMjZ,GACHJ,QAAQC,IAAI,OAAOG,GACnBiZ,GAAgB,OAgOH,MAGc,IAAfD,EACA,kBAACxS,EAAA,EAAD,CAAkBxI,MAAM,UAAU8M,KAAM,KACvC,MAGT,kBAAC5K,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IAEnDiF,IAAeA,GAAYH,OAAS,EACpC,kBAAC,GAAD,CAAOI,eAAgBA,GAAgBD,YAAaA,KACnD,MAoDT,kBAAC0U,GAAA,EAAD,CACIlT,GAAG,cACHuR,SAAUA,EACV4B,aAAW,EACXpU,KAAMqU,QAAQ7B,GACd8B,QAAS5B,GAET,kBAAC6B,GAAA,EAAD,CAAU5b,QAAS,WAAK4Z,EAAQ,OAAOG,MAAvC,aACA,kBAAC6B,GAAA,EAAD,CAAU5b,QAAS,WAAK4Z,EAAQ,OAAOG,MAAvC,UAEJ,kBAACzY,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,IACvD,kBAACsB,EAAA,EAAD,CACI/D,MAAM,UACNS,QAAQ,YACRX,MAAO,CAACE,MAAM,OAAOgE,OAAO,QAC5BpD,QAAS2W,GACTtU,WAAS,IAGO,IAAZ8K,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAM,SADxB,6B,OC9a5B,SAASgF,GAAT,GAAiG,IAA9EC,EAA6E,EAA7EA,QAASC,EAAoE,EAApEA,KAAoE,KAA/DC,eAA+D,EAAhDC,gBAAgD,EAAhCwF,aAAgC,EAAnBC,gBAqBnExF,YAAS,CACXJ,UACAC,QACAI,IAAgBC,MArBhBC,EAHwF,EAGxFA,cACAC,EAJwF,EAIxFA,kBACAC,EALwF,EAKxFA,aAEAC,GAPwF,EAMxFC,KANwF,EAOxFD,YACAE,EARwF,EAQxFA,aARwF,IASxFzE,MAAS0E,EAT+E,EAS/EA,UACTE,GAVwF,EASpED,SAToE,EAS1DrB,aAT0D,EAUxFsB,iBACAC,EAXwF,EAWxFA,SACAC,EAZwF,EAYxFA,KACAC,EAbwF,EAaxFA,YAEAC,EAfwF,EAexFA,YAfwF,EAgBxFC,SAhBwF,EAiBxF1B,gBAjBwF,EAkBxFF,sBAlBwF,EAoBxF6B,YAgBJ,OACI,yBAAKxG,MAAO,CAACS,MAAM,QAQf,2CAAWiF,IAAX,CAA4B1F,MAAO,CAACS,MAAM,UAC9C,+BACGmF,EAAaa,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,uBAAQA,EAAOC,iBAAmBD,EAAOE,OAAO,mBAMxD,0BAAWpB,IACRS,EAAKK,KAAI,SAACO,EAAKC,GAEd,OADApB,EAAWmB,GAET,uBAAQA,EAAIE,cAETF,EAAIG,MAAMV,KAAI,SAAAW,GACX,OAAO,sCAAIpH,MAAO,CAACuP,SAAS,KAASnI,EAAKC,gBAAiBD,EAAKL,OAAO,kBAc/E,yBAAK/G,MAAO,CAACb,QAAQ,OAAOkB,eAAe,kBACvC,4BAAQS,QAAS,kBAAMiF,KAAgByB,UAAWtB,GAAlD,iBAGA,oCACS,IACL,4BACKF,EAAY,EADjB,OACwBM,EAAYmB,SAGxC,4BAAQ3G,QAAS,kBAAMqF,KAAYqB,UAAWnB,GAA9C,eAQhB,IAmPepF,2BAnPU,SAAAxB,GAAU,IAAD,EAEME,IAAMC,SAAS,IAFrB,gCAGUD,IAAMC,UAAS,IAHzB,mBAGvB8H,EAHuB,aAIU/H,IAAMC,UAAS,IAJzB,mBAIvBoL,EAJuB,aAKarL,IAAMC,SAAS,KAL5B,mBAKvB8P,EALuB,KAKRC,EALQ,OAOQhQ,IAAMC,SAAS,MAPvB,gCAQQD,IAAMC,SAAS,KARvB,mBAQvBgI,EARuB,KAQVC,EARU,OASIlI,IAAMC,SAAS,IATnB,gCAUJD,IAAMC,SAAS,KAVX,mBAUvB0B,EAVuB,KAUhBC,EAVgB,OAWA5B,IAAMC,UAAS,GAXf,mBAWd4B,GAXc,WAoH9B,OAPA7B,IAAM8B,WAAU,YApBY,WACxB,IACIC,MAAM7C,eAAe,qDAChB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFE,QAAQC,IAAIH,GACTA,EAAI6O,UACHd,EAAkB/N,EAAI6O,aAG7BxO,OAAM,SAAAC,GACHJ,QAAQC,IAAI,kBAAmBG,MAGzC,MAAOA,GACLJ,QAAQC,IAAI,oBAAqBG,IAMrCwO,KACD,IAMC,oCAGI,kBAACxI,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAAlC,SA+BA,kBAAC2B,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WACtD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACW,EAAA,EAAD,CAEIC,QAASmM,EACTlM,eAAgB,SAAAC,GAAM,OAAIA,EAAOsN,cACjC/Q,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAH,OAASpC,EAAS,eAAID,EAAL,CAAW0P,QAAQrN,MAC9CE,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,UAAUzC,QAAQ,WAAWwC,WAAS,SAI/E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAE2C,QAAS,IACrD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,UAAUY,QAtJ5C,WAEhBgB,QAAQC,IAAI,UAAUT,GACtBQ,QAAQC,IAAI,gBAAgB6F,GAC5BC,EAAe,MAEfrG,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,+EAAD,OAAgFyC,EAAM0P,QAAQ1P,EAAM0P,QAAQD,aAAa,IAC/IjP,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GACFJ,GAAW,GACXM,QAAQC,IAAI,QAAQH,GACjBA,EAAI+a,cACH9U,EAAejG,EAAI+a,iBAG1B1a,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,gCAAiC,CACnD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,gCAAiC,CACnD7D,QAAS,WAsHiEX,MAAO,CAACE,MAAM,OAAOgE,OAAO,SAA9F,WAOR,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAEb,QAAS,OAAQkB,eAAgB,WAGlC,OAAhBuH,EACA,yBAAK5H,MAAO,CAAE2C,QAAS,GAAIxD,QAAS,OAAQkB,eAAgB,WACxD,kBAACqI,EAAA,EAAD,CAAkBxI,MAAM,aAGL,IAAvB0H,EAAYH,OACZ,KAEA,kBAAC,GAAD,CAAStC,QAAS,CACd,CACIwD,OAAQ,WACRC,SAAU,YAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,QACRC,SAAU,cAEd,CACID,OAAQ,QACRC,SAAU,SAEd,CACID,OAAQ,MACRC,SAAU,OAEd,CACID,OAAQ,UACRC,SAAU,cAEd,CACID,OAAQ,UACRC,SAAU,WAEd,CACID,OAAQ,SACRC,SAAU,eAEd,CACID,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,aACRC,SAAU,cAEd,CACID,OAAQ,eACRC,SAAU,iBAEfxD,KAAMwC,EAAaA,YAAaA,KAK3C,kBAAC8D,EAAA,EAAD,CAAUvD,KAAM6C,GACZ,kBAACtC,EAAA,EAAD,CAAkBxI,MAAM,iBCrW5C,SAAS2I,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAW5C,SAASU,GAAUT,GACf,MAAO,CACHK,GAAG,kBAAD,OAAoBL,GACtB,gBAAgB,uBAAhB,OAAwCA,IAIhD,IAAMjK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAqDA6Y,GAhDK,SAAA7Z,GAEAX,KAAhB,IACME,EAAQ4K,cAHW,EAICjK,IAAMC,SAAS,GAJhB,mBAIlBiD,EAJkB,KAIXgH,EAJW,KAezB,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,iBACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,oBAAuBoG,GAAU,GAA5C,CAAgDxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,OAC9G,kBAAC0H,EAAA,EAAD,eAAKnH,MAAM,qBAAwBoG,GAAU,GAA7C,CAAiDxJ,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAGnH,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,OAGJ,kBAAC,GAAD,CAAU/H,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,W,4KCuWlBgS,GAAS,SAAAnd,GAEX,OADAqC,QAAQC,IAAI,iBAActC,GACnB,kBAACod,GAAA,EAAD,CAASC,QAAS,aACpB,kBAAC,KAAWF,OAAWnd,KAIjBwB,2BAhbM,SAAAxB,GAAU,IAAD,EAEDE,IAAMC,SAAS,IAFd,mBAEnB0B,EAFmB,KAEbC,EAFa,OAGS5B,IAAMC,SAAS,CAC9Cmd,cAAc,IACdC,kBAAkB,MALI,mBAGnBC,EAHmB,KAGRC,EAHQ,OAOcvd,IAAMC,UAAS,GAP7B,mBAOnB8H,EAPmB,KAOLpC,EAPK,OAQA3F,IAAMC,SAAS,MARf,mBAQnBsS,EARmB,KAQZC,EARY,OASsBxS,IAAMC,UAAS,GATrC,mBASD8U,GATC,aAUY/U,IAAMC,SAAS,MAV3B,mBAUnB+H,EAVmB,KAUNtC,EAVM,OAWc1F,IAAMC,UAAS,GAX7B,mBAWnBoL,EAXmB,aAYGrL,IAAMC,UAAS,IAZlB,mBAYnBqO,EAZmB,KAYXzM,EAZW,OAcC7B,IAAMC,SAAS,IAdhB,mBAcnB+M,EAdmB,KAcZC,EAdY,OAeSjN,IAAMC,SAAS,IAfxB,mBAenBmT,EAfmB,KAeRC,EAfQ,OAgBarT,IAAMC,SAAS,IAhB5B,mBAgBnBqT,EAhBmB,KAgBNC,GAhBM,QAkBWvT,IAAMC,SAAS,IAlB1B,qBAkBnBgI,GAlBmB,MAkBPC,GAlBO,SAoBAlI,IAAMC,SAAS,UApBf,qBAoBnBiD,GApBmB,MAoBZgH,GApBY,MA0B1BlK,IAAM8B,WAAU,WACZ0b,GAAYvV,MACd,CAAC/E,KAEHlD,IAAM8B,WAAU,WAGZC,MAAM7C,eAAa,wCAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,MAAK,SAAAC,GAEFgL,EAAUhL,EAAIqL,cAEjBhL,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,4CAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,KADY,yCACP,WAAMC,GAAN,gBAAAkO,EAAA,6DACFhO,QAAQC,IAAI,iBAAiBH,GAD3B,SAEcuR,QAAQC,IAAIxR,EAAIsK,WAAWzF,KAAI,SAAA4M,GAAC,MAAK,CAAC9G,aAAa8G,EAAE9G,aAAa+G,UAAUD,EAAElH,eAAe,MAAMkH,EAAEjH,sBAAsBD,eAAekH,EAAElH,eAAeC,sBAAsBiH,EAAEjH,2BAFjM,OAEEmH,EAFF,OAGFP,EAAcO,GAHZ,2CADO,0DAMZtR,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,MAG/BR,MAAM7C,eAAa,kDAClB8C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,OAChBF,KADY,yCACP,WAAMC,GAAN,UAAAkO,EAAA,sDACFhO,QAAQC,IAAI,oBAAoBH,GAChCsR,GAAgBtR,EAAI4R,eAFlB,2CADO,0DAKZvR,OAAM,SAAAC,GACHJ,QAAQC,IAAI,eAAeG,QAKjC,IAGF,IAAMyS,GAAiB,yCAAG,6BAAA7E,EAAA,sEAGAqD,QAAQC,IAAIxL,GAAYnB,KAAI,SAAA9C,GAC9C,OAAGA,EAAEiR,WAAWjN,EAAYiN,SACjBjN,EAEAhE,MAPO,OAGlBkR,EAHkB,OAUtB/S,QAAQC,IAAI,WAAW8S,GACvBhN,GAAegN,GACfH,GAAoB,GACpBpP,GAAgB,GAbM,2CAAH,qDAyDjB8X,GAAqB,yCAAG,WAAOxb,GAAP,gBAAAkO,EAAA,sEACRqD,QAAQC,IAAIxR,EAAIyT,eAAe5O,IAAnB,yCAAuB,WAAM4G,GAAN,kBAAAyC,EAAA,6DAE7C3L,EAAMtF,eAAa,8DAAD,OAA+DwO,EAAEd,cACvFzK,QAAQC,IAAI,MAAMoC,GAH+B,SAItBzC,MAAMyC,EAAI,CACjCG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,KAJ0B,yCAIrB,WAAMwX,GAAN,gBAAArJ,EAAA,yDACFhO,QAAQC,IAAI,aAAUoX,IACnBA,EAAEkE,KAFH,gCAI6BlK,QAAQC,IAAI+F,EAAEkE,KAAK5W,KAAI,SAAA8C,GAAC,sBAASA,EAAT,CAAWnG,MAAMmG,EAAEjB,YAAY,UAAUiB,EAAE+T,IAAI,cAAc,EAAEC,WAAWhU,EAAE+T,MAAME,QAAQ,GAAG3a,MAAM0G,EAAEhB,gBAJ1J,cAIMkV,EAJN,wCAKapQ,EALb,CAKeqQ,wBAAwBD,EAAeE,gBAAgB,MALtE,+CAOatQ,EAPb,CAOeqQ,wBAAwB,GAAGC,gBAAgB,MAP1D,2CAJqB,uDAJsB,cAI7CC,EAJ6C,yBAkB1CA,GAlB0C,2CAAvB,wDADJ,OACtBC,EADsB,OAuB1B1L,EAAS0L,EAAMpW,QACfjG,GAAW,GACX2b,GAAYU,GAzBc,2CAAH,sDAuErBC,GAAY,yCAAG,WAAO3Q,EAAOnG,GAAd,gBAAA8I,EAAA,sEAEUqD,QAAQC,IAAIxL,GAAYnB,KAAI,SAAAsX,GACnD,OAAGA,EAAGxR,eAAevF,EAAIuF,aACd,eAAKwR,EAAZ,CAAeJ,gBAAgBxQ,IAExB4Q,MANE,OAEbC,EAFa,OASjBb,GAAYa,GATK,2CAAH,wDAYZb,GAAW,yCAAG,WAAOvV,GAAP,gBAAAkI,EAAA,sEACWqD,QAAQC,IAAIxL,EAAYnB,IAAZ,yCAAgB,WAAMsX,GAAN,kBAAAjO,EAAA,6DAE/CmO,EAAa,EACbC,EAAU,EAHqC,SAI7C/K,QAAQC,IAAI2K,EAAGJ,gBAAgBlX,KAAI,SAAA0X,GACrCF,GAA0BE,EAAGb,QALkB,aAOxC,YAARza,IACCqb,EAAUjB,EAAWF,cACrBkB,GAAeA,EAAaV,WAAWN,EAAWF,gBAAiBS,QAAQ,KAE3E1b,QAAQC,IAAI,iBAAiBkc,GAC7BC,EAAyB,IAAfD,EAAkB,GAAK,EAAEA,EAAaV,WAAWN,EAAWF,gBAAgBS,QAAQ,GAC9FS,EAAahB,EAAWF,eAE5Bjb,QAAQC,IAAI,uDAAoDkc,GAfb,iCAgBvCF,EAhBuC,CAgBpCE,aAAWC,aAhByB,2CAAhB,wDADvB,OACZF,EADY,OAmBhBnW,GAAemW,GAnBC,2CAAH,sDAsBXI,GAAmB,SAACpb,EAAE0S,GACxBwH,EAAc,eAAID,EAAL,gBAAiBvH,EAAM1S,EAAEC,OAAOJ,SAC7Csa,GAAYvV,KAEhB,OACI,6BACI,kBAACM,EAAA,EAAD,CACIC,KAAMT,GAEN,yBAAK1H,MAAO,CAAE2C,QAAS,GAAIlC,MAAO,MAC9B,yBAAKT,MAAO,CAAC2C,QAAQ,KAArB,8CAIIgF,EACA,kBAACvF,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAAC2C,QAAQ,KAExBb,QAAQC,IAAI,qBAAqB4F,GAEzC,kBAACvF,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASwP,EACTvP,eAAgB,SAAAC,GAAM,OAAIA,EAAO6P,WACjCtT,MAAO,CAAES,MAAO,QAChB6U,aAAc,kBAAIvC,EAAWlF,QAAO,SAAAwF,GAAC,OAAIA,EAAElH,iBAAiBxE,EAAYwE,kBAAgB,IACxFpJ,SAAU,SAACC,EAAEW,GAAUA,GAAG0B,EAAe,eAAIsC,EAAL,CAAiB4E,aAAa5I,EAAE4I,aAAaJ,eAAexI,EAAEwI,eAAeC,sBAAsBzI,EAAEyI,0BAC7IvI,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,YAAYzC,QAAQ,WAAWwC,WAAS,SAIjF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAAS0P,EACTzP,eAAgB,SAAAC,GAAM,OAAIA,EAAOiQ,cACjC1T,MAAO,CAAES,MAAO,QAChB6U,aAAc,CAAC5B,aAAa/L,EAAY+L,cAGxC3Q,SAAU,SAACC,EAAEW,GAAUA,GAAG0B,EAAe,eAAIsC,EAAL,CAAiB+L,aAAa/P,EAAE+P,iBACxE7P,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,eAAezC,QAAQ,WAAWwC,WAAS,SAIpF,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,WAAW4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,WAAWP,MAAO8E,EAAY8L,mBAAoB1Q,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiB8L,mBAAmB8B,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAE1N,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,SAAS4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,SAASP,MAAO8E,EAAYsN,aAAclS,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBsN,aAAaM,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAE1M,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgB4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,kBAAkBP,MAAO8E,EAAYuN,0BAA2BnS,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBuN,0BAA0BK,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAEpP,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,gBAAgB4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,kBAAkBP,MAAO8E,EAAYqM,gBAAiBjR,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBqM,gBAAgBuB,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,KAEhO,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACC,EAAA,EAAD,CAAWM,KAAK,cAAc4I,KAAK,SAASnL,QAAQ,WAAWyC,MAAM,gBAAgBP,MAAO8E,EAAYsM,cAAelR,SAAU,SAAAC,GAAC,OAAEqC,EAAe,eAAIsC,EAAL,CAAiBsM,cAAcsB,OAAOvS,EAAEC,OAAOJ,WAAUM,WAAS,MAG3N,KAED,yBAAKnD,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,kBAAC4D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS6T,GAAmBhU,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,OAAOgE,OAAO,MAEpG,IAAZ+J,EACA,kBAACvF,EAAA,EAAD,CAAkBxI,MAAO,SADzB,UAMR,kBAAC+D,EAAA,EAAD,CAAQ/D,MAAM,UAAUiD,WAAS,EAACrC,QAAS,kBAAIwE,GAAgB,IAAQ3E,QAAQ,YAAYX,MAAO,CAACyN,OAAO,GAAGvN,MAAM,OAAOgE,OAAO,KAAjI,aAMZ,kBAAC9B,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WAClD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACW,EAAA,EAAD,CAEIC,QAASoJ,EACTnJ,eAAgB,SAAAC,GAAM,OAAIA,EAAO4H,YACjCrL,MAAO,CAAES,MAAO,QAChBsC,SAAU,SAACC,EAAEW,GAAUA,GAAGpC,EAAS,eAAID,EAAL,CAAWtB,MAAM2D,EAAE0H,eACrDxH,YAAa,SAAAC,GAAM,OACf,kBAAClB,EAAA,EAAD,iBAAekB,EAAf,CAAuBV,MAAM,QAAQzC,QAAQ,WAAWwC,WAAS,SAI7E,kBAACf,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,IACnD,kBAACsB,EAAA,EAAD,CAAQtD,QAAQ,YAAYT,MAAM,UAAUY,QAzKxC,WAChBqR,EAAS,MAETrQ,QAAQC,IAAI,UAAUT,GACtBQ,QAAQC,IAAI,gBAAgB6F,IAE5BpG,GAAW,GACX,IACI,IAAI2C,EAAMtF,eAAa,kEAAD,OAAmEyC,EAAMtB,OAC/F8B,QAAQC,IAAI,MAAMoC,GAClBzC,MAAMyC,EAAI,CACNG,OAAQ,SAEX3C,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,KAJD,yCAIM,WAAMC,GAAN,UAAAkO,EAAA,sDAEFhO,QAAQC,IAAI,QAAQH,GAEjBA,EAAIyT,eACJ+H,GAAsBxb,GAErBJ,GAAW,GAPb,2CAJN,uDAeCS,OAAM,SAAAC,GACHJ,QAAQC,IAAI,uBAAuBG,GACnCV,GAAW,GACX/B,EAAM+E,gBAAgB,kCAAmC,CACrD7D,QAAS,YAGpB,MAAMuB,GACHJ,QAAQC,IAAI,mBAAmBG,GAC/BV,GAAW,GACX/B,EAAM+E,gBAAgB,kCAAmC,CACrD7D,QAAS,WAqI6DX,MAAO,CAACkE,OAAO,GAAGhE,MAAM,QAASiD,WAAS,GAA5G,UAgBU,OAAV+O,EACA,kBAAC9P,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WAClD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,GAAGmH,UAAU,KAChE,kBAACpJ,EAAA,EAAD,CAAYC,QAAQ,WAAWT,MAAM,UAAUF,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASiS,WAAW,QAAzG,qBACuBJ,KAK9B,KAEL,kBAAC9P,EAAA,EAAD,CAAMC,WAAS,EAACrC,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WAClD,kBAAC+B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,GAAGmH,UAAU,GAAGxC,UAAU,QAC7E,kBAAC+W,GAAA,EAAD,CAAapV,UAAU,YACnB,kBAACmT,GAAA,EAAD,CAAY9R,aAAW,SAASpH,KAAK,UAAUL,MAAOA,GAAOE,SA7UhE,SAACmH,GAClBL,GAASK,EAAMjH,OAAOJ,QA4UmF7C,MAAO,CAACY,WAAW,SAASqV,cAAc,QAC3H,kBAACqI,GAAA,EAAD,CAAWrV,UAAU,SAASjJ,MAAO,CAACX,YAAY,KAAlD,WACA,kBAAC4Y,GAAA,EAAD,CAAkBpV,MAAM,SAASqV,QAAS,kBAACmE,GAAA,EAAD,MAAWjZ,MAAM,WAC3D,kBAAC6U,GAAA,EAAD,CAAkBpV,MAAM,UAAUqV,QAAS,kBAACmE,GAAA,EAAD,MAAWjZ,MAAM,eAIxE,kBAAChB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,GAAGmH,UAAU,KAChE,kBAAClH,EAAA,EAAD,CAAWO,WAAS,EAACC,MAAO,aAAaP,GAAOlC,QAAQ,WAAWmL,KAAK,SAASjJ,MAAOoa,EAAWF,cAAeha,SAAU,SAAAC,GAAC,OAAEob,GAAiBpb,EAAE,qBAEtJ,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAG1C,MAAO,CAAC2C,QAAQ,GAAGmH,UAAU,KAChE,kBAAClH,EAAA,EAAD,CAAWO,WAAS,EAACC,MAAM,qBAAqBzC,QAAQ,WAAWmL,KAAK,SAASjJ,MAAOoa,EAAWD,kBAAmBja,SAAU,SAAAC,GAAC,OAAEob,GAAiBpb,EAAE,0BAI9J,kBAACZ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAI1C,MAAO,CAAC2C,QAAQ,KAEzC,IAAVsL,EACA,yBAAKjO,MAAO,CAAE2C,QAAS,GAAItC,eAAgB,SAAUlB,QAAS,SAC1D,kBAACuJ,EAAA,EAAD,CAAkBxI,MAAM,aAG5B0H,IAAeA,GAAYH,OAAS,EACpC,2BAAOzH,MAAO,CAACS,MAAM,SACjB,4BACI,wBAAIT,MAAO,CAACS,MAAM,MAAlB,WACA,oCACA,oCACA,mCACA,0CACA,wCAEJ,+BAEQmH,GAAYnB,KAAI,SAAA9C,GAAC,OACb,4BACI,4BACI,kBAAC,KAAD,CACI4a,SAAO,EACP5R,OAAQ,CAAElJ,OAAQ,SAAC+a,GAAD,sBAAgBA,EAAhB,CAAsB7E,OAAO,kBAAoBzV,OAAQ,WAC3EnB,SAAU,SAAAoK,GAAM,OAAI2Q,GAAa3Q,EAAOxJ,IACxCJ,QAASI,GAAEA,EAAE+Z,wBAAwB/Z,EAAE+Z,wBAA2B,GAClEe,WAAY,CAAC7B,cAGrB,4BAAKjZ,EAAEwI,gBACP,4BAAKxI,EAAEyI,uBACP,4BAAKzI,EAAE8P,oBACP,4BAAK9P,EAAEsa,YACP,4BAAKta,EAAEua,cAOvB,kBAACxS,EAAA,EAAD,CAAUvD,KAAM6C,GACZ,kBAACtC,EAAA,EAAD,CAAkBxI,MAAM,cAG/B,WC1azB,SAAS2I,GAASpJ,GAAQ,IACdqJ,EAAqCrJ,EAArCqJ,SAAUjG,EAA2BpD,EAA3BoD,MAAOkG,EAAoBtJ,EAApBsJ,MAAUC,EADd,YACwBvJ,EADxB,8BAGrB,OACI,kBAACiB,EAAA,EAAD,eACIuI,UAAU,MACVC,KAAK,WACLC,OAAQtG,IAAUkG,EAClBK,GAAE,8BAAyBL,GAC3BM,kBAAA,yBAAmCN,IAC/BC,GAEHnG,IAAUkG,GAAS,kBAACO,EAAA,EAAD,CAAKC,EAAG,GAAIT,IAkB5C,IAAMhK,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACnCC,KAAM,CACFgB,gBAAiBjB,EAAMyK,QAAQC,WAAWC,MAC1ClJ,MAAO,SAmDA+U,GA9CO,SAAA/V,GAEFX,KAAhB,IAjBeiK,EAkBT/J,EAAQ4K,cAHa,EAIDjK,IAAMC,SAAS,GAJd,mBAIpBiD,EAJoB,KAIbgH,EAJa,KAe3B,OACI,yBAAK7J,MAAO,CAAE2C,QAAS,KACnB,yBAAK3C,MAAO,CAAEsH,UAAW,WAAY,kBAAC5G,EAAA,EAAD,CAAYC,QAAQ,MAApB,kBACrC,yBAAKX,MAAO,CAACb,QAAQ,OAAOkB,eAAe,WACvC,yBAAKL,MAAO,CAACS,MAAM,SACf,kBAACX,EAAA,EAAD,CAAQC,SAAS,SAASG,MAAM,YAAYF,MAAO,CAAC8J,UAAU,GAAGC,oBAAoB,GAAGC,qBAAqB,KACzG,kBAACC,EAAA,EAAD,CACApH,MAAOA,EACPE,SAjBC,SAACmH,EAAOC,GACzBN,EAASM,IAiBOC,eAAe,OACfC,UAAU,UACV1J,QAAQ,YACR2J,aAAW,2BAEX,kBAACC,EAAA,EAAD,eAAKnH,MAAM,YA3CxB,CACHgG,GAAG,kBAAD,OAFSL,EA4CyC,GAzCpD,gBAAgB,uBAAhB,OAAwCA,IAyCxB,CAAwC/I,MAAO,CAACE,MAAM,OAAOsK,aAAqB,IAAR3H,EAAU,kBAAkB,SAI1G,kBAAC,GAAD,CAAUA,MAAOA,EAAOkG,MAAO,EAAG0B,IAAKzL,EAAM0L,UAAW1K,MAAO,CAACC,gBAAgB,UAAU0K,uBAAuB,GAAGC,wBAAwB,KACxI,kBAAC,GAAD,WC7ClB9L,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJE,QAAS,QAEXuf,OAAQ,CACNnE,OAAQvb,EAAMub,OAAOoE,OAAS,GAEhCA,OAAQ,CACNle,MAVgB,IAWhBme,WAAY,GAEdC,YAAa,CACXpe,MAdgB,IAehBR,gBAAgB,WAElB6c,QAAS,CACP5d,SAAU,EACVyD,QAAS3D,EAAMM,QAAQ,IAEzBwf,QAAS9f,EAAM+f,OAAOD,YAyKTE,UAtKY,SAAAvf,GACvB,IAAMC,EAAUZ,KADgB,EAGCa,IAAMC,SAAS,IAHhB,mBAGzBqf,EAHyB,KAGfC,EAHe,KAKhC,OAAO,6BAEH,yBAAKlf,MAAO,CAACmf,YAAY,IAAIlf,gBAAgB,SAE7C,kBAACmf,GAAA,EAAD,CACAvf,UAAWH,EAAQif,OACnBhe,QAAQ,YACRjB,QAAS,CACPiK,MAAOjK,EAAQmf,cAIb,yBAAK7e,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASJ,gBAAgB,UAAUoS,WAAW,GAAGgN,cAAc,KACtG,yBAAK/e,IAAKC,EAAQ,KAAiCC,IAAI,OAAOR,MAAO,CAACS,MAAM,QAEhF,kBAAC6e,GAAA,EAAD,MAYJ,yBAAKtf,MAAO,CAAC8J,UAAU,GAAGqV,YAAY,GAAGhgB,QAAQ,OAAOyB,WAAW,WAC/D,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,WAA/B,iBAGA,kBAAC,KAAD,CAAUA,MAAM,aAEpB,kBAACqf,GAAA,EAAD,CAAMvf,MAAO,CAAC2C,QAAQ,KAClB,kBAAC6c,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,gBAAgBO,QAAM,EAACC,IAAK,cAAe1f,MAAO,CAACC,gBAA8B,gBAAdgf,EAA4B,UAAU,GAAG/e,MAAM,SACpJ,kBAACyf,GAAA,EAAD,CAAcC,QAAS,kBAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,mBAAmBO,QAAM,EAACC,IAAK,iBAAkB1f,MAAO,CAACC,gBAA8B,mBAAdgf,EAA+B,UAAU,GAAG/e,MAAM,SAC7J,kBAACyf,GAAA,EAAD,CAAcC,QAAS,qBAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,iBAAiBO,QAAM,EAACC,IAAK,eAAgB1f,MAAO,CAACC,gBAA8B,iBAAdgf,EAA6B,UAAU,GAAG/e,MAAM,SACvJ,kBAACyf,GAAA,EAAD,CAAcC,QAAS,oBAG7B,kBAACN,GAAA,EAAD,MACA,yBAAKtf,MAAO,CAAC8J,UAAU,GAAGqV,YAAY,GAAGhgB,QAAQ,OAAOyB,WAAW,WAC/D,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,WAA/B,eAGA,kBAAC,KAAD,CAAYA,MAAM,aAEtB,kBAACqf,GAAA,EAAD,CAAMvf,MAAO,CAAC2C,QAAQ,KAClB,kBAAC6c,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,WAAWO,QAAM,EAACC,IAAK,SAAU1f,MAAO,CAACC,gBAA8B,WAAdgf,EAAuB,UAAU,GAAG/e,MAAM,SACrI,kBAACyf,GAAA,EAAD,CAAcC,QAAS,YAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,OAAOO,QAAM,EAACC,IAAK,KAAM1f,MAAO,CAACC,gBAA8B,OAAdgf,EAAmB,UAAU,GAAG/e,MAAM,SACzH,kBAACyf,GAAA,EAAD,CAAcC,QAAS,QAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,WAAWO,QAAM,EAACC,IAAK,SAAU1f,MAAO,CAACC,gBAA8B,WAAdgf,EAAuB,UAAU,GAAG/e,MAAM,SACrI,kBAACyf,GAAA,EAAD,CAAcC,QAAS,aAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,cAAcO,QAAM,EAACC,IAAK,YAAa1f,MAAO,CAACC,gBAA8B,cAAdgf,EAA0B,UAAU,GAAG/e,MAAM,SAC9I,kBAACyf,GAAA,EAAD,CAAcC,QAAS,gBAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,aAAaO,QAAM,EAACC,IAAK,WAAY1f,MAAO,CAACC,gBAA8B,aAAdgf,EAAyB,UAAU,GAAG/e,MAAM,SAC3I,kBAACyf,GAAA,EAAD,CAAcC,QAAS,0BAG7B,kBAACN,GAAA,EAAD,MACA,yBAAKtf,MAAO,CAAC8J,UAAU,GAAGqV,YAAY,GAAGhgB,QAAQ,OAAOyB,WAAW,WAC/D,kBAACF,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,WAA/B,YAGA,kBAAC,KAAD,CAAcA,MAAM,aAExB,kBAACqf,GAAA,EAAD,CAAMvf,MAAO,CAAC2C,QAAQ,KAClB,kBAAC6c,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,YAAYO,QAAM,EAACC,IAAK,UAAW1f,MAAO,CAACC,gBAA8B,YAAdgf,EAAwB,UAAU,GAAG/e,MAAM,SACxI,kBAACyf,GAAA,EAAD,CAAcC,QAAS,aAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,WAAWO,QAAM,EAACC,IAAK,SAAU1f,MAAO,CAACC,gBAA8B,WAAdgf,EAAuB,UAAU,GAAG/e,MAAM,SACrI,kBAACyf,GAAA,EAAD,CAAcC,QAAS,YAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,eAAeO,QAAM,EAACC,IAAK,aAAc1f,MAAO,CAACC,gBAA8B,eAAdgf,EAA2B,UAAU,GAAG/e,MAAM,SACjJ,kBAACyf,GAAA,EAAD,CAAcC,QAAS,gBAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,kBAAkBO,QAAM,EAACC,IAAK,gBAAiB1f,MAAO,CAACC,gBAA8B,kBAAdgf,EAA8B,UAAU,GAAG/e,MAAM,SAC1J,kBAACyf,GAAA,EAAD,CAAcC,QAAS,oBAEzB,kBAACJ,GAAA,EAAD,CAAU1e,QAAS,kBAAIoe,EAAa,iBAAiBO,QAAM,EAACC,IAAK,eAAgB1f,MAAO,CAACC,gBAA8B,iBAAdgf,EAA6B,UAAU,GAAG/e,MAAM,SACvJ,kBAACyf,GAAA,EAAD,CAAcC,QAAS,qBAI/B,yBAAK5f,MAAO,CAAC2C,QAAQ,iBAAiBxD,QAAQ,OAAOkB,eAAe,gBAAgBO,WAAW,aAC/F,kBAACF,EAAA,EAAD,CAAYR,MAAM,UAAUF,MAAO,CAACsS,WAAW,OAAQ3R,QAAQ,MAA/D,WACA,kBAAC,KAAD,CAAMkf,GAAG,KACP,kBAACnf,EAAA,EAAD,CAAYR,MAAM,UAAUF,MAAO,CAACsS,WAAW,OAAQ3R,QAAQ,YAA/D,YAGF,yBAAKX,MAAO,CAACyN,OAAO,gBAAgBjD,aAAa,yBAK7B,YAAdyU,EACA,kBAAC,EAAD,MAEc,eAAdA,EACA,kBAAC,GAAD,MAEc,WAAdA,EACA,kBAAC,EAAD,MAEc,WAAdA,EACA,kBAAC,GAAD,MAEc,WAAdA,EACA,kBAAC,GAAD,MAEc,cAAdA,EACA,kBAAC,GAAD,MAEc,kBAAdA,EACA,kBAAC,GAAD,MAEc,aAAdA,EACA,kBAACa,GAAD,MAEc,OAAdb,EACA,kBAAC,GAAD,MAEc,gBAAdA,EACA,kBAAC,GAAD,MAEc,mBAAdA,EACA,kBAACc,GAAD,MAEc,iBAAdd,EACA,kBAAC,GAAD,MAEc,aAAdA,EACA,kBAAC,GAAD,MAEc,iBAAdA,EACA,kBAAC,GAAD,MAEA,yBAAKjf,MAAO,CAACb,QAAQ,OAAOkB,eAAe,SAASO,WAAW,SAASsD,OAAO,MAC3E,6BACI,yBAAKlE,MAAO,CAACsH,UAAU,SAASc,aAAa,KAAK,kBAAC,KAAD,CAAUlI,MAAM,UAAUF,MAAO,CAACuP,SAAS,OAC7F,6BACI,kBAAC7O,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,aAA/B","file":"static/js/1.97741c79.chunk.js","sourcesContent":["module.exports = {\n    basic_url: 'https://api.myjson.com/bins/1etsk2',\n    random_string: \"Random String\",\n    // api_endpoint:'http://192.168.88.237',\n    api_endpoint:'http://192.168.1.4:4334'\n  }","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n//import Button from '@material-ui/core/Button';\n//import IconButton from '@material-ui/core/IconButton';\nimport HomeIcon from '@material-ui/icons/HomeWork';\nimport DeviceIcon from '@material-ui/icons/DeviceHub';\nimport SignoutIcon from '@material-ui/icons/LastPage';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Menu from '@material-ui/core/Menu';\nimport { withRouter } from 'react-router-dom'\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    display:'flex'\n    //zIndex:2000\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst ButtonAppBar = props => {\n  const classes = useStyles();\n  const [anchorElSPTS, setAnchorElSPTS] = React.useState(null);\n  const [anchorElWarehouse, setAnchorElWarehouse] = React.useState(null);\n  const [anchorElCut, setAnchorElCut] = React.useState(null);\n\n  const handleClick = (event,arg) => {\n    console.log('asdaf',event,arg)\n    if(arg === 'spts'){\n      setAnchorElSPTS(event.currentTarget);\n    }else if(arg === 'cutting'){\n      setAnchorElCut(event.currentTarget);\n    }else if(arg === 'warehouse'){\n      setAnchorElWarehouse(event.currentTarget);\n    }\n  };\n\n  const handleCloseSPTS = () => {\n    setAnchorElSPTS(null);\n  };\n  const handleCloseCut = () => {\n    setAnchorElCut(null);\n  };\n  const handleCloseWarehouse = () => {\n    setAnchorElWarehouse(null);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" style={{backgroundColor:'#fff',color:'#418832'}}>\n        <CssBaseline />\n        <Toolbar style={{display:'flex',justifyContent:'space-between'}}>\n            <div>\n                <img src={require('../../assets/WiMetrix.png')} alt=\"Logo\" style={{width:120}}/>\n            </div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n              <Typography color='secondary' variant=\"h5\">Rainbow</Typography>\n            {/* <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'warehouse')}>\n                    <HomeIcon />&nbsp;\n                    <Typography variant=\"subtitle1\">Warehouse</Typography>\n                </div>\n                <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'cutting')}>\n                    <DeviceIcon/>&nbsp;\n                    <Typography variant=\"subtitle1\">Cutting</Typography>\n                </div>\n                <div style={{margin:15,display:'flex',justifyContent:'center',cursor:'pointer'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={e => handleClick(e,'spts')}>\n                    <SettingsIcon/>&nbsp;\n                    <Typography variant=\"subtitle1\">SPTS</Typography>\n                </div> */}\n                {/* <Menu\n                    id=\"simple-menu-spts\"\n                    anchorEl={anchorElSPTS}\n                    //keepMounted\n                    open={Boolean(anchorElSPTS)}\n                    onClose={handleCloseSPTS}\n                >\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('workers')\n                        handleCloseSPTS()\n                    }}>Workers</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('orders')\n                        handleCloseSPTS()\n                    }}>Orders</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('operations')\n                        handleCloseSPTS()\n                    }}>Operations</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('styleBulletin')\n                        handleCloseSPTS()\n                    }}>Style Bulletin</MenuItem>\n                </Menu>\n                <Menu\n                    id=\"simple-menu-cut\"\n                    anchorEl={anchorElCut}\n                    //keepMounted\n                    open={Boolean(anchorElCut)}\n                    onClose={handleCloseCut}\n                >\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('marker')\n                        handleCloseCut()\n                    }}>Marker</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('po')\n                        handleCloseCut()\n                    }}>PO</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('cutJob')\n                        handleCloseCut()\n                    }}>Cut Job</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('cutReport')\n                        handleCloseSPTS()\n                    }}>Cut Report</MenuItem>\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('assignPO')\n                        handleCloseCut()\n                    }}>Assign PO to Bundle</MenuItem>\n                </Menu>\n                <Menu\n                    id=\"simple-menu-cut\"\n                    anchorEl={anchorElWarehouse}\n                    //keepMounted\n                    open={Boolean(anchorElWarehouse)}\n                    onClose={handleCloseWarehouse}\n                >\n                    <MenuItem onClick={()=>{\n                        props.setSptsValue('packingList')\n                        handleCloseWarehouse()\n                    }}>Packing List</MenuItem>\n                </Menu> */}\n            </div>\n            <div style={{display:'flex',alignItems:'center',cursor:'pointer'}} onClick={()=>props.history.push('/')}>\n                <Typography variant=\"subtitle1\" style={{cursor:'pointer'}}>Logout</Typography>\n                <SignoutIcon />\n            </div>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\nexport default withRouter(ButtonAppBar)","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\n//import axios from 'axios'\nimport { withSnackbar } from 'notistack';\n\nconst AddWorkers = props => {\n\n    const [designations,setDesignations] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n    const [state,setState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/worker/insertWorker.php?worker_code=${state.workerId}&worker_name=${state.workerName}&designator_id=${state.designation.designation_id}&designator_code=${state.designation.designation_code}&department_id=${state.department.department_id}&department_code=${state.department.department_code}`;\n            console.log('url: ',url)\n            // alert(url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully added Worker!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n                //console.log('generate qrcode response',res)\n                //setQrCode(res.code)\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                props.enqueueSnackbar('Error While Adding Worker!', { \n                    variant: 'info',\n                })\n                setLoading(false)\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            props.enqueueSnackbar('Error While Adding Worker!', { \n                variant: 'info',\n            })\n            setLoading(false)\n        }\n\n    }\n\n    React.useEffect(()=>{\n\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDepartments.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res departments',res)\n            setDepartments(res.Departments)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res designations',res)\n            setDesignations(res.Designations)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n    },[])\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.workerId} onChange={e => setState({...state,workerId:e.target.value})} name=\"workerId\" variant=\"outlined\" fullWidth label=\"Worker ID\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.workerName} onChange={e => setState({...state,workerName:e.target.value})} name=\"workerName\" variant=\"outlined\" fullWidth label=\"Worker Name\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={deparments}\n                        getOptionLabel={option => option.department_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,department:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Department\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                    {/* <TextField name=\"department\" variant=\"outlined\" fullWidth label=\"Department\"/> */}\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={designations}\n                        getOptionLabel={option => option.designation_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,designation:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Designation\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                    {/* <TextField name=\"designation\" variant=\"outlined\" fullWidth label=\"Designation\"/> */}\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Worker</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddWorkers)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Worker\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(row.original)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                {/* <td style={{textAlign:'center'}}>\n                    <InfoIcon color=\"primary\" style={{cursor:'pointer'}} onClick={()=>{\n                    setModalVisible(true)\n                    console.log('row',row)\n                    setModalValues(row.original)\n                }}/></td> */}\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            {/* <table {...getTableProps()} style={{width:'100%'}}>\n                \n                <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n                <tbody  {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                        </tr>\n                    )\n                    })}\n\n                </tbody>\n            </table> */}\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n                {/* <div>Go to page:</div>\n                <input\n                    type=\"number\"\n                    defaultValue={pageIndex + 1 || 1}\n                    onChange={e => {\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\n                        gotoPage(page)\n                    }}\n                /> */}\n                {/* <select\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                >\n                    {pageSizeOptions.map(pageSize => (\n             <option key={pageSize} value={pageSize}>\n               Show {pageSize}\n             </option>\n           ))}\n                </select> */}\n            </div>\n        </div>\n    )\n}\n\nconst WorkersTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [designations,setDesignations] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    React.useEffect(()=>{\n        console.log('modalValues',modalValues)\n        setEditState(modalValues)\n    },[modalValues])\n\n    const handleUpdate = () => {\n        console.log('editState',editState)\n        \n        try{\n            let url = api_endpoint+`/Jordan/SPTS/worker/updateWorker.php?worker_id=${editState.worker_id}&worker_code=${editState.worker_code}&worker_name=${editState.worker_name}&department_id=${editState.department_id}&department_code=${editState.department_code}&designator_id=${editState.designator_id}&designator_code=${editState.designator_code}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Updated Worker!', { \n                        variant: 'info',\n                    })\n                    fetchWorkers()\n                    setModalVisible(false)\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Updating Worker!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Updating Worker!', { \n                variant: 'info',\n            })\n        }\n    }\n\n    const fetchWorkers = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/worker/getWorkers.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Workers)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchWorkers()\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDepartments.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res departments',res)\n            setDepartments(res.Departments)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res designations',res)\n            setDesignations(res.Designations)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n    }, [])\n\n    return (\n        <div>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid>\n            </div> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Worker</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField value={editState.worker_code} onChange={e => setEditState({...editState,worker_code:e.target.value})} name=\"workerId\" variant=\"outlined\" fullWidth label=\"Worker ID\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField value={editState.worker_name} onChange={e => setEditState({...editState,worker_name:e.target.value})} name=\"workerName\" variant=\"outlined\" fullWidth label=\"Worker Name\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Autocomplete\n                                            //id=\"combo-box-demo\"\n                                            options={deparments}\n                                            getOptionLabel={option => option.department_code}\n                                            style={{ width: '100%' }}\n                                            disabled={true}\n                                            //onChange={(e,v) => setState({...state,department:v})}\n                                            //defaultValue={departments.filter}\n                                            renderInput={params => (\n                                                <TextField {...params} label=\"Department\" variant=\"outlined\" fullWidth />\n                                            )}\n                                        />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Autocomplete\n                                        //id=\"combo-box-demo\"\n                                            options={designations}\n                                            getOptionLabel={option => option.designation_code}\n                                            style={{ width: '100%' }}\n                                            disabled={true}\n                                            //onChange={(e,v) => setState({...state,designation:v})}\n                                            renderInput={params => (\n                                                <TextField {...params} label=\"Designation\" variant=\"outlined\" fullWidth />\n                                            )}\n                                        />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Worker ID',\n                                accessor: 'worker_id',\n                            },\n                            {\n                                Header: 'Code',\n                                accessor: 'worker_code',\n                            },\n                            {\n                                Header: 'Name',\n                                accessor: 'worker_name',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\n                        //     <tr>\n                        //         <th>Worker ID</th>\n                        //         <th>Worker Code</th>\n                        //         <th>Name</th>\n                        //         <th style={{ width: '70px' }}></th>\n                        //     </tr>\n                        //     <tbody>\n                        //         {\n                        //             tableValues.map(v => (\n                        //                 <tr>\n                        //                     <td>{v.worker_id}</td>\n                        //                     <td>{v.worker_code}</td>\n                        //                     <td>{v.worker_name}</td>\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                        //                         setModalVisible(true)\n                        //                         setModalValues(v)\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                        //                 </tr>\n                        //             ))\n                        //         }\n                                \n                        //     </tbody>\n                        // </table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(WorkersTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddWorkers from '../AddWorkers'\nimport WorkersTable from '../WorkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Workers = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Workers</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Workers\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Workers\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddWorkers />\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <WorkersTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Workers","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\n//import Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\n\nconst AddOrders = props => {\n\n    const [state,setState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/order/insertOrder.php?buyer=${state.buyer}&style_code=${state.style}&color=${state.color}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Order!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Order!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Order!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.buyer} onChange={e => setState({...state,buyer:e.target.value})} name=\"buyer\" variant=\"outlined\" fullWidth label=\"Buyer\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.style} onChange={e => setState({...state,style:e.target.value})} name=\"style\" variant=\"outlined\" fullWidth label=\"Style\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.color} onChange={e => setState({...state,color:e.target.value})} name=\"color\" variant=\"outlined\" fullWidth label=\"Color\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Order</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddOrders)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Order\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td>\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst OrdersTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState, setEditState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    React.useEffect(() => {\n        console.log('modalValues', modalValues)\n        setEditState(modalValues)\n    }, [modalValues])\n\n    const handleUpdate = () => {\n        console.log('editState', editState)\n        //operation_id operation_code operation_description operation_smv\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/order/updateOrder.php?order_id=${editState.order_id}&order_description=${editState.order_description}&otn=${editState.otn}&buyer=${editState.buyer_code}&style_code=${editState.style_code}&color=${editState.color}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'post',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    setLoading(false)\n                    console.log('res: ', res)\n                    if (res.Error_No === 0) {\n                        props.enqueueSnackbar('Successfully Updated Order!', {\n                            variant: 'info',\n                        })\n                        fetchOrders()\n                        setModalVisible(false)\n                    } else {\n                        if (typeof res.Error_Description === 'object') {\n                            console.log('objecttypeee')\n                            props.enqueueSnackbar('Validation Errors!', {\n                                variant: 'info',\n                            })\n                        } else {\n                            props.enqueueSnackbar(res.Error_Description, {\n                                variant: 'info',\n                            })\n                        }\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Error While Updating Order!', {\n                        variant: 'info',\n                    })\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Updating Order!', {\n                variant: 'info',\n            })\n        }\n    }\n\n    const handleDelete = (record) => {\n\n        try {\n            setDeleteLoader(true)\n            setOpenBackdrop(true)\n            fetch(api_endpoint + `/Jordan/SPTS/order/closeOrder.php?order_id=${record.order_id}`)\n                .then(res => res.json())\n                .then(res => {\n                    setDeleteLoader(false)\n                    setOpenBackdrop(false)\n                    console.log('delete response: ', res)\n                    if (res.Error_No === 0) {\n                        props.enqueueSnackbar('Successfully deleted order!', {\n                            variant: 'info',\n                        })\n                        fetchOrders()\n                    }\n                    //setTableValues(res.Orders)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setDeleteLoader(false)\n                    setOpenBackdrop(false)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setDeleteLoader(false)\n            setOpenBackdrop(false)\n            //setTableValues([])\n        }\n    }\n\n    const fetchOrders = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/order/getOrders.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Orders)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchOrders()\n    }, [])\n\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Style',\n                                accessor: 'style_code',\n                            },\n                            {\n                                Header: 'Buyer',\n                                accessor: 'buyer_code',\n                            },\n                            {\n                                Header: 'Color',\n                                accessor: 'color',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop} />\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\n                        //     <tr>\n                        //         <th>Color</th>\n                        //         <th>Style</th>\n                        //         <th>Buyer</th>\n                        //         <th style={{ width: '70px' }}></th>\n                        //     </tr>\n                        //     <tbody>\n                        //         {\n                        //             tableValues.map(v => (\n                        //                 <tr>\n                        //                     <td>{v.color}</td>\n                        //                     <td>{v.style_code}</td>\n                        //                     <td>{v.buyer_code}</td>\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                        //                         setModalVisible(true)\n                        //                         setModalValues(v)\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                        //                         handleDelete(v); setOpenBackdrop(true); console.log('delete row: ', v);\n                        //                     }} style={{ cursor: 'pointer' }} /></td>\n                        //                 </tr>\n                        //             ))\n                        //         }\n\n                        //     </tbody>\n                            \n                        // </table>\n                }\n                <Backdrop open={openBackdrop}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(OrdersTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddOrders from '../AddOrders'\nimport OrdersTable from '../OrdersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Orders = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Orders</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Order\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Orders\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddOrders />\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <OrdersTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Orders","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\n//import Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\n\nconst AddOperations = props => {\n\n    const [state,setState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    const handleAdd = () => {\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/operation/insertOperation.php?operation_code=${state.operationCode}&operation_description=${state.operationDescription}&operation_smv=${state.operationSMV}&piece_rate=${state.pieceRate}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Operation!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Operation!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Operation!', { \n                variant: 'info',\n            })\n        }\n\n    }\n\n    return (\n        <div>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.operationCode} onChange={e => setState({...state,operationCode:e.target.value})} name=\"operationCode\" variant=\"outlined\" fullWidth label=\"Operation Code\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.operationDescription} onChange={e => setState({...state,operationDescription:e.target.value})} name=\"operationDescription\" variant=\"outlined\" fullWidth label=\"Operation Description\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.operationSMV} type=\"number\" min={0} onChange={e => setState({...state,operationSMV:e.target.value})} name=\"operationSMV\" variant=\"outlined\" fullWidth label=\"Operation SMV\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.pieceRate} type=\"number\" min={0} onChange={e => setState({...state,pieceRate:e.target.value})} name=\"pieceRate\" variant=\"outlined\" fullWidth label=\"Piece Rate\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Operation</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddOperations)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Operation\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst OperationsTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    React.useEffect(()=>{\n        console.log('modalValues',modalValues)\n        setEditState(modalValues)\n    },[modalValues])\n\n    const handleUpdate = () => {\n        console.log('editState',editState)\n        //operation_id operation_code operation_description operation_smv\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/operation/updateOperation.php?operation_id=${editState.operation_id}&operation_code=${editState.operation_code}&operation_description=${editState.operation_description}&operation_smv=${editState.operation_smv}&piece_rate=${editState.piece_rate}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Updated Operation!', { \n                        variant: 'info',\n                    })\n                    fetchOperations()\n                    setModalVisible(false)\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Updating Operation!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Updating Operation!', { \n                variant: 'info',\n            })\n        }\n    }\n\n    const fetchOperations = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/operation/getOperations.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Operations)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchOperations()\n    }, [])\n\n    return (\n        <div>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Operation\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid>\n            </div> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Operation</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"operationCode\" value={editState.operation_code} onChange={e => setEditState({...editState,operation_code:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation Code\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"operationDescription\" value={editState.operation_description} onChange={e => setEditState({...editState,operation_description:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation Description\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"operationSMV\" type=\"number\" value={editState.operation_smv} onChange={e => setEditState({...editState,operation_smv:e.target.value})} variant=\"outlined\" fullWidth label=\"Operation SMV\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"pieceRate\" type=\"number\" value={editState.piece_rate} onChange={e => setEditState({...editState,piece_rate:e.target.value})} variant=\"outlined\" fullWidth label=\"Piece Rate\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Operation ID',\n                                accessor: 'operation_id',\n                            },\n                            {\n                                Header: 'Operation Code',\n                                accessor: 'operation_code',\n                            },\n                            {\n                                Header: 'Description',\n                                accessor: 'operation_description',\n                            },\n                            {\n                                Header: 'SMV',\n                                accessor: 'operation_smv',\n                            },\n                            {\n                                Header: 'Piece Rate',\n                                accessor: 'piece_rate',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\n                        // <table style={{ height: 400, overflowY: 'scroll' }}>\n                        //     <tr>\n                        //         <th>Operation Code</th>\n                        //         <th>operation Description</th>\n                        //         <th>Operation SMV</th>\n                        //         <th>Piece Rate</th>\n                        //         <th style={{ width: '70px' }}></th>\n                        //     </tr>\n                        //     <tbody>\n                        //         {\n                        //             tableValues.map(v => (\n                        //                 <tr>\n                        //                     <td>{v.operation_code}</td>\n                        //                     <td>{v.operation_description}</td>\n                        //                     <td>{v.operation_smv}</td>\n                        //                     <td>{v.piece_rate}</td>\n                        //                     <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                        //                         setModalVisible(true)\n                        //                         setModalValues(v)\n                        //                     }} style={{ cursor: 'pointer', marginRight: 15 }} /></td>\n                        //                 </tr>\n                        //             ))\n                        //         }\n                                \n                        //     </tbody>\n                        // </table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(OperationsTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddOperation from '../AddOperation'\nimport OperationsTable from '../OperationsTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Operations = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Operations</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Operation\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Operations\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddOperation />\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <OperationsTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Operations","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst AddMarkers = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        console.log('state',state)\n        if(state.style){\n            fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n            .then(res => res.json()\n            .then(res => {\n                console.log('res colors',res)\n                setColors(res.Colors)\n            }))\n            .catch(err => {\n                console.log('err in fetch',err)\n            })\n\n        }\n    },[state.style])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        if(state.size){\n            setModalVisible(true)\n        }\n        \n    },[state.size])\n\n    const handleAppend = () => {\n        console.log('handleAppend',state.style,state.quantity)\n        setModalVisible(false)\n        setTableValues(s => [...s,{id:uuid(),size_id:state.size.size_id,size_code:state.size.size_code,quantity:state.quantity}])\n        setState({...state,size_id:null,size_code:null,quantity:null})\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        fetch(api_endpoint+'/Jordan/Cutting/Marker/getSizes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res sized',res)\n            setSizes(res.Sizes)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        // fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        // .then(res => res.json()\n        // .then(res => {\n        //     console.log('res designations',res)\n        //     setDesignations(res.Designations)\n        // }))\n        // .catch(err => {\n        //     console.log('err in fetch',err)\n        // })\n\n    },[])\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        console.log('state: ',state)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${JSON.stringify(tableValues)}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Marker!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Marker!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Marker!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Enter Quantity\n                    </div>\n                    <div style={{padding:10}}>\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\n                    </div>\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            Save Quantity\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={sizes}\n                        getOptionLabel={option => option.size_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,size:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Size</th>\n                                <th>Quantity</th>\n                                <th style={{ width: '40px' }}></th>\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            {console.log('tableValues',tableValues)}\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.size_code}</td>\n                                            <td>{v.quantity}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Marker</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddMarkers)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Marker\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th style={{width:'40px'}}></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{textAlign:'center'}}><InfoIcon color=\"primary\" style={{cursor:'pointer'}} onClick={()=>{\n                    setModalVisible(true)\n                    console.log('row',row)\n                    setModalValues(row.original)\n                }}/></td>\n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            {/* <table {...getTableProps()} style={{width:'100%'}}>\n                \n                <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n            ))}\n          </tr>\n        ))}\n      </thead>\n                <tbody  {...getTableBodyProps()}>\n                {rows.map((row, i) => {\n                    prepareRow(row)\n                    return (\n                        <tr {...row.getRowProps()}>\n                        {row.cells.map(cell => {\n                            return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                        })}\n                        </tr>\n                    )\n                    })}\n\n                </tbody>\n            </table> */}\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n                {/* <div>Go to page:</div>\n                <input\n                    type=\"number\"\n                    defaultValue={pageIndex + 1 || 1}\n                    onChange={e => {\n                        const page = e.target.value ? Number(e.target.value) - 1 : 0\n                        gotoPage(page)\n                    }}\n                /> */}\n                {/* <select\n                    value={pageSize}\n                    onChange={e => {\n                        setPageSize(Number(e.target.value))\n                    }}\n                >\n                    {pageSizeOptions.map(pageSize => (\n             <option key={pageSize} value={pageSize}>\n               Show {pageSize}\n             </option>\n           ))}\n                </select> */}\n            </div>\n        </div>\n    )\n}\n\nconst MarkersTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [sizes, setSizes] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState, setEditState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    // React.useEffect(()=>{\n    //     console.log('modalValues',modalValues)\n    //     setEditState(modalValues)\n    // },[modalValues])\n    React.useEffect(() => {\n        console.log('modalValues', modalValues)\n        setLoading(true)\n        setEditState(modalValues)\n        if (modalValues) {\n\n            try {\n                let url = api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${modalValues.marker_id}`;\n                console.log('url', url)\n                fetch(url, {\n                    method: 'post',\n                })\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log('res: ', res)\n                        setSizes(res.Sizes)\n                        setLoading(false)\n                        // if(res.Error_No===0){\n                        //     props.enqueueSnackbar('Successfully Updated Worker!', { \n                        //         variant: 'info',\n                        //     })\n                        //     //fetchWorkers()\n                        //     setModalVisible(false)\n                        // }else{\n                        //     if(typeof res.Error_Description==='object'){\n                        //         console.log('objecttypeee')\n                        //         props.enqueueSnackbar('Validation Errors!', { \n                        //             variant: 'info',\n                        //         })\n                        //     }else{\n                        //         props.enqueueSnackbar(res.Error_Description, { \n                        //             variant: 'info',\n                        //         })\n                        //     }\n                        // }\n                    })\n                    .catch(err => {\n                        console.log('error while fetching', err)\n                        setLoading(false)\n                        props.enqueueSnackbar('Error While Getting Styles!', {\n                            variant: 'info',\n                        })\n                    })\n            } catch (err) {\n                console.log('err in try catch', err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Fetching Styles!', {\n                    variant: 'info',\n                })\n            }\n        }\n    }, [modalValues])\n\n\n    const fetchMarkers = () => {\n\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/Marker/getMarkers.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.Markers)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n\n        fetchMarkers()\n\n    }, [])\n\n    return (\n        <div>\n            {/* <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid>\n            </div> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true ?\n                                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\n                                            <CircularProgress color='primary' />\n                                        </div>\n                                        :\n                                        <div container style={{ textAlign: 'center' }}>\n                                            {\n                                                sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                            }\n                                        </div>\n                                }\n                                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Marker',\n                                accessor: 'marker_description',\n                            }\n                        ]} data={tableValues} tableValues={tableValues} setModalValues={setModalValues} setModalVisible={setModalVisible} />\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(MarkersTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddMarkers from '../AddMarkers'\nimport MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst Marker = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Marker</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Markers\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Markers\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddMarkers />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        {/* <div>ghgk</div> */}\n                        <MarkersTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default Marker","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport SearchIcon from '@material-ui/icons/Search'\nimport CloseIcon from '@material-ui/icons/Close'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\n//import './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter, useRowSelect } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n}) {\n    //const count = preGlobalFilteredRows.length\n\n    return (\n        <span>\n            <TextField\n                name='searchValue'\n                variant=\"outlined\"\n                label=\"Search\"\n                value={globalFilter || ''}\n                onChange={e => setGlobalFilter(e.target.value || undefined)}\n                fullWidth\n                InputProps={{\n                    endAdornment: <InputAdornment position=\"end\">\n                        <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                    </InputAdornment>\n                }}\n            />\n        </span>\n    )\n}\nconst IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n        const defaultRef = React.useRef()\n        const resolvedRef = ref || defaultRef\n\n        React.useEffect(() => {\n            resolvedRef.current.indeterminate = indeterminate\n        }, [resolvedRef, indeterminate])\n\n        return (\n            <>\n                <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n            </>\n        )\n    }\n)\nfunction MyTable({ columns, data, handleUpload }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter, selectedRowIds },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n    } = useTable({\n        columns,\n        data,\n    }, useGlobalFilter, usePagination, useRowSelect,\n        hooks => {\n            hooks.visibleColumns.push(columns => [\n                // Let's make a column for selection\n                {\n                    id: 'selection',\n                    // The header can use the table's getToggleAllRowsSelectedProps method\n                    // to render a checkbox\n                    Header: ({ getToggleAllRowsSelectedProps }) => (\n                        <div>\n                            <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n                        </div>\n                    ),\n                    // The cell can use the individual row's getToggleRowSelectedProps method\n                    // to the render a checkbox\n                    Cell: ({ row }) => (\n                        <div>\n                            <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n                        </div>\n                    ),\n                },\n                ...columns,\n            ])\n        })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{ width: '90%' }}>\n            <div style={{ display: 'flex', justifyContent: 'center', marginTop: 20 }}>\n                <div style={{ width: 400 }}>\n                    <GlobalFilter\n                        preGlobalFilteredRows={preGlobalFilteredRows}\n                        globalFilter={globalFilter}\n                        setGlobalFilter={setGlobalFilter}\n                    />\n                </div>\n            </div>\n            <table {...getTableProps()} style={{ width: '100%' }}>\n                <thead>\n                    {headerGroups.map(headerGroup => (\n                        <tr {...headerGroup.getHeaderGroupProps()}>\n                            {headerGroup.headers.map(column => (\n                                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n                            ))}\n                            {/* <th></th> */}\n                        </tr>\n                    ))}\n                </thead>\n                <tbody {...getTableBodyProps()}>\n                    {page.map((row, i) => {\n                        prepareRow(row)\n                        return (\n                            <tr {...row.getRowProps()}>\n                                {/* <td>{i+1}</td> */}\n                                {row.cells.map(cell => {\n                                    return <td style={{ fontSize: 12 }} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                                })}\n                                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </table>\n            <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {\n                Object.keys(selectedRowIds).length > 0 ?\n                    <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop: 20 }}>\n                            <Button fullWidth variant=\"contained\" color='primary' onClick={() => handleUpload(selectedRowIds)} style={{ color: '#fff', height: 55 }} >UPLOAD</Button>\n                        </Grid>\n                    </Grid>\n                    : null\n            }\n        </div>\n    )\n}\n\nconst AddRollIssuance = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [invoiceNumbers, setInvoiceNumbers] = React.useState([])\n    const [departments, setDepartments] = React.useState([])\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState([])\n    // const [editState, setEditState] = React.useState({})\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    // React.useEffect(() => {\n    //     console.log('modalValues', modalValues)\n    //     setEditState(modalValues)\n    // }, [modalValues])\n\n    const handleFetch = () => {\n\n        console.log('state: ', state)\n        console.log('tableValues: ', tableValues)\n        setTableValues(null)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try {\n            let url = api_endpoint + `/Jordan/Warehouse/Issuance/getRollsForInvoiceIssuance.php?invoice_no=${state.invoice ? state.invoice.invoice_code : ''}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'post',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    setLoading(false)\n                    console.log('res: ', res)\n                    if (res.Rolls) {\n                        setTableValues(res.Rolls)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Failed to Fetch Packing List!', {\n                        variant: 'info',\n                    })\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Fetch Packing List!', {\n                variant: 'info',\n            })\n        }\n\n    }\n\n    const handleUpload = async (args) => {\n        if (state.department) {\n            console.log('args', args, Object.keys(args), state.department.allowed_movement_id)\n            let keysArray = Object.keys(args)\n            let rolls = []\n            setLoading(true)\n            for (let i = 0; i < keysArray.length; i++) {\n                rolls.push({\n                    item_id: tableValues[parseInt(keysArray[i])].item_id,\n                    new_length: tableValues[parseInt(keysArray[i])].length\n                })\n            }\n            console.log('rolls', rolls)\n            let obj = {\n                rolls_list: rolls,\n                allowed_movement_id: state.department.allowed_movement_id\n            }\n            console.log('obj ---> ', obj)\n            try {\n                let url = api_endpoint + `/Jordan/Warehouse/Issuance/insertDepartmentMovement.php`\n                //invoice_no=${state.invoice?state.invoice.invoice_code:''}\n                console.log('url', url)\n                fetch(url, {\n                    method: 'post',\n                    body: JSON.stringify(obj)\n                })\n                    .then(res => res.json())\n                    .then(async res => {\n                        setLoading(false)\n                        console.log('response Roll Insertion: ', res)\n                        if (res.Error_No === 0) {\n                            props.enqueueSnackbar('Roll Intention Inserted successfully!', {\n                                variant: 'info',\n                            })\n                            let keys = []\n                            if (res.Responses && res.Responses.length > 0) {\n                                setModalValues(res.Responses)\n                                setModalVisible(true)\n                            }\n                            // await Promise.all(keysArray.map(kI => keys.push(tableValues[parseInt(kI)].item_id)))\n                            // console.log('keys => ',keys)\n                            // let tempTableValues = tableValues\n                            // for(let i=0;i<keys.length;i++){\n                            //     tempTableValues = tempTableValues.filter(tV => tV.item_id === keys[i])\n                            //     // tableValues[parseInt(keysArray[i])].item_id\n                            // }\n                            setTableValues([])\n\n                        } else {\n                            props.enqueueSnackbar('Failed to Insert roll!', {\n                                variant: 'info',\n                            })\n                        }\n                        // if(res.Packing_List){\n                        //     setTableValues(res.Packing_List)\n                        // }\n                    })\n                    .catch(err => {\n                        console.log('error while fetching', err)\n                        setLoading(false)\n                        props.enqueueSnackbar('Failed to Insert roll!', {\n                            variant: 'info',\n                        })\n                    })\n            } catch (err) {\n                console.log('err in try catch', err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Insert roll!', {\n                    variant: 'info',\n                })\n            }\n        } else {\n            props.enqueueSnackbar('Select Department First!', {\n                variant: 'info',\n            })\n        }\n\n\n\n    }\n\n    const fetchInvoiceNumbers = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Warehouse/PackingList/getInvoiceCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.Invoices) {\n                        setInvoiceNumbers(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            //setTableValues([])\n        }\n        try {\n            fetch(api_endpoint + '/Jordan/Warehouse/Issuance/getDepartments.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.Departments) {\n                        setDepartments(res.Departments)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            //setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchInvoiceNumbers()\n    }, [])\n    // React.useEffect(() => {\n    //     fetchPackingListForInvoice()\n    // }, [state.invoice])\n\n    return (\n        <>\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\n            <Dialog\n                open={modalVisible}\n                onBackdropClick={() => setModalVisible(false)}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalValues && modalValues.length > 0 ?\n                            <div style={{ width: '100%', textAlign: 'center', position: 'relative' }}>\n                                <CloseIcon color={'lightgrey'} size={25} style={{ position: 'absolute', top: 5, right: 5, cursor: 'pointer' }} onClick={() => setModalVisible(false)} />\n                                <Typography variant=\"h6\" color='primary' style={{ textAlign: 'center' }}>\n                                    Issuance Summary\n                            </Typography>\n                                <table style={{ width: '100%', marginTop: 15 }}>\n                                    <thead>\n                                        <tr>\n                                            <th style={{ fontSize: 13 }}>Roll Rfid</th>\n                                            <th style={{ fontSize: 13 }}>Status</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {\n                                            modalValues.map(mV => (\n                                                <tr>\n                                                    <td style={{ fontSize: 12 }}>{mV.item_id}</td>\n                                                    <td style={{ fontSize: 12 }}>{mV.Error_Description}</td>\n                                                </tr>\n                                            ))\n                                        }\n                                    </tbody>\n                                </table>\n                            </div>\n                            : 'Nothing to Display'\n                    }\n                </div>\n            </Dialog>\n\n            <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid item lg={4} md={4} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={invoiceNumbers}\n                        getOptionLabel={option => option.invoice_code}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, invoice: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\n                    <Button fullWidth variant=\"contained\" color='primary' onClick={handleFetch} style={{ color: '#fff', height: '100%' }} >\n                        {\n                            loading === true ?\n                                <CircularProgress color={'#fff'} />\n                                :\n                                `Fetch`\n                        }\n                    </Button>\n                </Grid>\n                <Grid item lg={4} md={4} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={departments}\n                        getOptionLabel={option => option.department_code}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, department: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Departments\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n            </Grid>\n            <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n\n                {\n                    // tableValues === null ?\n                    // <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                    //     <CircularProgress color='primary' />\n                    // </div>\n                    // :\n                    tableValues === null || tableValues.length === 0 ?\n                        null\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Rfid',\n                                accessor: 'rfid_tag_id',\n                            },\n                            {\n                                Header: 'ID',\n                                accessor: 'item_id',\n                            },\n                            {\n                                Header: 'Supplier',\n                                accessor: 'supplier',\n                            },\n                            {\n                                Header: 'Buyer',\n                                accessor: 'buyer',\n                            },\n                            {\n                                Header: 'Style',\n                                accessor: 'style_code',\n                            },\n                            {\n                                Header: 'Color',\n                                accessor: 'color',\n                            },\n                            {\n                                Header: 'Roll No',\n                                accessor: 'roll_no',\n                            },\n                            {\n                                Header: 'Fabric',\n                                accessor: 'fabric_type',\n                            },\n                            {\n                                Header: 'Length',\n                                accessor: 'length',\n                            },\n                            {\n                                Header: 'Net Weight',\n                                accessor: 'net_weight',\n                            },\n                            {\n                                Header: 'Gross Weight',\n                                accessor: 'gross_weight',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} handleUpload={handleUpload}\n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\n                        />\n                }\n            </Grid>\n            <Backdrop open={openBackdrop}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        </>\n    )\n}\n\nexport default withSnackbar(AddRollIssuance)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddRollIssuance from '../AddRollIssuance'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst RollIssuance = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Roll Issuance</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add roll Issuance\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        {/* <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddRollIssuance/>\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    {/* <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewPackingList/>\n                        <MarkersTable />\n                    </TabPanel> */}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default RollIssuance","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst AddCutJob = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [sizes,setSizes] = React.useState([])\n    // const [styles,setStyles] = React.useState([])\n    // const [colors,setColors] = React.useState([])\n    // const [tableValues,setTableValues] = React.useState([])\n    const [markers,setMarkers] = React.useState([])\n\n    \n    React.useEffect(()=>{\n        fetchMarkers()\n    },[])\n\n    React.useEffect(()=>{\n        \n        if(state.marker){\n            //console.log('satte',state)\n            try {\n                fetch(api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${state.marker.marker_id}`)\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res)\n                        setSizes(res.Sizes)\n                    })\n                    .catch(err => {\n                        console.log('err in fetching', err)\n                        setSizes([])\n                    })\n            } catch (err) {\n                console.log('try catch error: ', err)\n                setSizes([])\n            }\n        }\n\n    },[state.marker])\n\n    const fetchMarkers = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/Marker/getMarkers.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setMarkers(res.Markers)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setMarkers([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setMarkers([])\n        }\n    }\n\n    const handleAdd = () => {\n\n        setLoading(true)\n        console.log('satet',state)\n        try{\n            let url = api_endpoint+`/Jordan/Cutting/CutJob/insertCutJobForMarker.php?marker_id=${state.marker.marker_id}&no_of_layers=${state.no_of_layers}&cut_description=${state.cut_description}&part_name=${state.part_name}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added Cut Job!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Cut Job!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Cut Job!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Enter Quantity\n                    </div>\n                    <div style={{padding:10}}>\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\n                    </div>\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            Save Quantity\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog> */}\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={markers}\n                        getOptionLabel={option => option.marker_description}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,marker:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Marker\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={sizes}\n                        getOptionLabel={option => option.size_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,size:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid> */}\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField name='cut_description' variant=\"outlined\" label=\"Cut Description\" values={state.cut_description} onChange={e=>setState({...state,cut_description:e.target.value})} fullWidth />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField name='no_of_layers' variant=\"outlined\" label=\"No Of Layers\" values={state.no_of_layers} onChange={e=>setState({...state,no_of_layers:e.target.value})} fullWidth />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField name='part_name' variant=\"outlined\" label=\"Part Name\" values={state.part_name} onChange={e=>setState({...state,part_name:e.target.value})} fullWidth />\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add Cut job</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddCutJob)","import React from 'react'\nimport { Grid, TextField, Button, Typography } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst ExecuteCutJob = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    // const [sizes,setSizes] = React.useState([])\n    // const [styles,setStyles] = React.useState([])\n    // const [colors,setColors] = React.useState([])\n    // const [tableValues,setTableValues] = React.useState([])\n    const [cutJobs,setCutJobs] = React.useState([])\n\n    \n    React.useEffect(()=>{\n        fetchCutJobs()\n    },[])\n\n    // React.useEffect(()=>{\n        \n    //     if(state.marker){\n    //         //console.log('satte',state)\n    //         try {\n    //             fetch(api_endpoint + `/Jordan/Cutting/Marker/getSizesForMarker.php?marker_id=${state.marker.marker_id}`)\n    //                 .then(res => res.json())\n    //                 .then(res => {\n    //                     console.log(res)\n    //                     setSizes(res.Sizes)\n    //                 })\n    //                 .catch(err => {\n    //                     console.log('err in fetching', err)\n    //                     setSizes([])\n    //                 })\n    //         } catch (err) {\n    //             console.log('try catch error: ', err)\n    //             setSizes([])\n    //         }\n    //     }\n\n    // },[state.marker])\n\n    const fetchCutJobs = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/CutJob/getCutJobs.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setCutJobs(res.CutJobs)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setCutJobs([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setCutJobs([])\n        }\n    }\n\n    const handleAdd = () => {\n\n        setLoading(true)\n        console.log('satet',state)\n        try{\n            \n            let url = api_endpoint+`/Jordan/Cutting/CutJob/executeCutJob.php?cut_job_id=${state.cutJob.cut_job_id}&no_of_bundles=${state.no_of_bundles}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Executed Cut Job!', { \n                        variant: 'info',\n                    })\n                    setModalVisible(true)\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Executing Cut Job!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Executing Cut Job!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{width:200,padding:20,display:'flex',justifyContent:'center'}}>\n                    <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Cut Job Executed Successfully!</Typography>\n                </div>\n                <div style={{width:200,padding:'0px 20px',display:'flex',justifyContent:'center'}}>\n                    Cut Job ID: {state.cutJob?state.cutJob.cut_job_id:null}\n                    </div>\n                <div style={{width:200,padding:20,display:'flex',justifyContent:'center'}}>\n                    <Button style={{marginTop:20}} variant=\"contained\" fullWidth onClick={()=>setModalVisible(false)}>Okay</Button>\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={cutJobs}\n                        getOptionLabel={option => option.cut_job_description}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,cutJob:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Cut Job\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField name='no_of_bundles' variant=\"outlined\" label=\"No Of Bundles\" values={state.no_of_bundles} onChange={e=>setState({...state,no_of_bundles:e.target.value})} fullWidth />\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Execute Cut Job</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(ExecuteCutJob)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddCutJob from '../AddCutJob'\nimport ExecuteCutJob from '../ExecuteCutJob'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst CutJob = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Cut Job</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Cut Job\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"Execute Cut Job\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddCutJob />\n                        \n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ExecuteCutJob />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CutJob","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search\"\n            style={{marginTop:30}}\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,handleDelete }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              <th></th>\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                <td style={{ textAlign: 'center' }}>\n                    <DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={() => handleDelete(row.original)} />\n                </td>\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst CutReportTable = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [styles, setStyles] = React.useState([])\n    const [count, setCount] = React.useState(null)\n    const [colors, setColors] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [state, setState] = React.useState({})\n    const [tableValues, setTableValues] = React.useState(null)\n    // const [editState,setEditState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    React.useEffect(() => {\n\n        if (state.style) {\n            try {\n                fetch(api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style.style_code}`)\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res)\n                        setColors(res.Colors)\n                    })\n                    .catch(err => {\n                        console.log('err in fetching', err)\n                        setColors([])\n                    })\n            } catch (err) {\n                console.log('try catch error: ', err)\n                setColors([])\n            }\n        }\n\n\n    }, [state.style])\n\n\n    const handleFetch = () => {\n        setCount(null)\n        console.log('Stat', state)\n        setLoading(true)\n        let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutReportForOrder.php?order_id=${state.color.order_id}`;\n        console.log('url', url)\n        try {\n            fetch(url)\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if (res.Cut_Report) {\n                        setTableValues(res.Cut_Report)\n                        setCount(res.Cut_Report.length)\n                        setLoading(false)\n                    } else {\n                        setTableValues([])\n                        setLoading(false)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                    setLoading(false)\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n            setLoading(false)\n        }\n    }\n\n    React.useEffect(() => {\n        try {\n            //fetch(api_endpoint + '/Jordan/SPTS/style/getUploadedStyleCodes.php')\n            fetch(api_endpoint + '/Jordan/SPTS/order/getStyleCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setStyles(res.Styles)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setStyles([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setStyles([])\n        }\n        //fetchMarkers()\n\n    }, [])\n\n    const handleDelete = (record) => {\n        console.log('record: ', record)\n        alert('In progress!')\n        // let url = api_endpoint + `/Jordan/SPTS/cutReport/deleteBundles.php?bundle_ids=${record.bundle_id}`;\n        // console.log('url',url)\n        // try {\n        //     fetch(url,{\n        //         method:'post'\n        //     })\n        //         .then(res => res.json())\n        //         .then(res => {\n        //             console.log(res)\n        //             if(res.Cut_Report){\n        //                 setTableValues(res.Cut_Report)\n        //                 setLoading(false)\n        //             }else{\n        //                 setTableValues([])\n        //                 setLoading(false)\n        //             }\n        //         })\n        //         .catch(err => {\n        //             console.log('err in fetching', err)\n        //             setTableValues([])\n        //             setLoading(false)\n        //         })\n        //     } catch (err) {\n        //         console.log('try catch error: ', err)\n        //         setTableValues([])\n        //         setLoading(false)\n        // }\n\n\n    }\n\n    return (\n        <div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                <Grid lg={5} md={5} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, style: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid lg={5} md={5} sm={5} xs={5} style={{ padding: 5 }}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e, v) => setState({ ...state, color: v })}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid lg={2} md={2} sm={2} xs={2} style={{ padding: 5 }}>\n                    <Button variant=\"contained\" color='primary' style={{ width: '100%', height: 55, color: '#fff' }} onClick={handleFetch}>\n                        {\n                            loading===true?\n                            <CircularProgress color={'#fff'}/>\n                            :`Fetch`\n                        }\n                    </Button>\n                </Grid>\n                {/* <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid> */}\n            </div>\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true?\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\n                                        <CircularProgress color='primary'/>\n                                    </div>\n                                    :\n                                    <div container style={{textAlign:'center'}}>\n                                        {\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                        }\n                                    </div>\n                                }\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            {\n                tableValues === null ?\n                    null\n                    :\n                    <>\n                    {\n                        count !== null?\n                        <Grid lg={12} md={12} sm={12} xs={12} style={{paddingTop:15,marginTop:15}}>\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\n                                No Of Cuts: {count}\n                            </Typography>\n\n                        </Grid>\n                        :null\n                    }\n                    <div style={{ display: 'flex', justifyContent: 'center' }}>\n                        {\n                            loading === true ?\n                                <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                                    <CircularProgress color='primary' />\n                                </div>\n                                :\n                                 <MyTable columns={[\n                                        {\n                                            Header: 'Cut',\n                                            accessor: 'cut_code',\n                                        },\n                                        {\n                                            Header: 'Bundle',\n                                            accessor: 'bundle_code',\n                                        },\n                                        {\n                                            Header: 'Piece Size',\n                                            accessor: 'piece_size',\n                                        },\n                                        {\n                                            Header: 'Color',\n                                            accessor: 'color',\n                                        },\n                                        {\n                                            Header: 'Qty',\n                                            accessor: 'quantity',\n                                        },\n                                        {\n                                            Header: 'Pay Order',\n                                            accessor: 'pay_order_code',\n                                        },\n                                        {\n                                            Header: 'Seq Start',\n                                            accessor: 'seq_start',\n                                        },\n                                        {\n                                            Header: 'Seq End',\n                                            accessor: 'seq_end',\n                                        },\n                                        {\n                                            Header: 'Part Name',\n                                            accessor: 'part_name',\n                                        },\n                                        {\n                                            Header: 'Remarks',\n                                            accessor: 'remarks',\n                                        },\n                                    ]} data={tableValues} tableValues={tableValues} handleDelete={handleDelete} />\n\n                                // <table style={{ height: 400, overflowY: 'scroll' }}>\n                                //     <tr>\n                                //         {/* <th style={{ width: '40px' }}></th> */}\n                                //         <th>OTN</th>\n                                //         <th>Cut</th>\n                                //         <th>Bundle</th>\n                                //         <th>Piece Size</th>\n                                //         <th>Color</th>\n                                //         <th>Quantity</th>\n                                //         <th>Seq Start</th>\n                                //         <th>Seq End</th>\n                                //         <th>Part Name</th>\n                                //         <th style={{ width: '40px' }}></th>\n                                //         {/* <th style={{ width: '70px' }}></th> */}\n                                //     </tr>\n                                //     <tbody>\n                                //         {\n                                //             tableValues && tableValues.map((v, i) => (\n                                //                 <tr>\n                                //                     <td>{v.otn}</td>\n                                //                     <td>{v.cut_code}</td>\n                                //                     <td>{v.bundle_code}</td>\n                                //                     <td>{v.piece_size}</td>\n                                //                     <td>{v.color}</td>\n                                //                     <td>{v.quantity}</td>\n                                //                     <td>{v.seq_start}</td>\n                                //                     <td>{v.seq_end}</td>\n                                //                     <td>{v.part_name}</td>\n                                                    \n                                //                 </tr>\n                                //             ))\n                                //         }\n\n                                //     </tbody>\n                                // </table>\n                        }\n                    </div>\n                    </>\n\n            }\n        </div>\n    )\n}\n\nexport default withSnackbar(CutReportTable)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search\"\n            style={{marginTop:30}}\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data}) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n\n    return (\n        <div style={{width:'90%'}}>\n            <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              {/* <th></th> */}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}>\n                    <DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={() => handleDelete(row.original)} />\n                </td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst CutReportMappingTable = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [state, setState] = React.useState({})\n    const [tableValues, setTableValues] = React.useState(null)\n    // const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    React.useEffect(()=>{\n\n        if(state.style){\n            try {\n                fetch(api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style.style_code}`)\n                    .then(res => res.json())\n                    .then(res => {\n                        console.log(res)\n                        setColors(res.Colors)\n                    })\n                    .catch(err => {\n                        console.log('err in fetching', err)\n                        setColors([])\n                    })\n            } catch (err) {\n                console.log('try catch error: ', err)\n                setColors([])\n            }\n        }\n\n\n    },[state.style])\n    \n    const handleFetch = () => {\n        console.log('Stat',state)\n        setLoading(true)\n        let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutReportMappingForOrder.php?order_id=${state.color.order_id}`;\n        console.log('url',url)\n        try {\n                    fetch(url)\n                        .then(res => res.json())\n                        .then(res => {\n                            console.log(res)\n                            if(res.Cut_Report){\n                                setTableValues(res.Cut_Report)\n                                setLoading(false)\n                            }else{\n                                setTableValues([])\n                                setLoading(false)\n                            }\n                        })\n                        .catch(err => {\n                            console.log('err in fetching', err)\n                            setTableValues([])\n                            setLoading(false)\n                        })\n                    } catch (err) {\n                        console.log('try catch error: ', err)\n                        setTableValues([])\n                        setLoading(false)\n                }\n    }\n    \n    React.useEffect(() => {\n        try {\n            fetch(api_endpoint + '/Jordan/SPTS/order/getStyleCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setStyles(res.Styles)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setStyles([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setStyles([])\n        }\n        \n\n    }, [])\n\n    return (\n        <div>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n            <Grid lg={5} md={5} sm={5} xs={5} style={{padding:5}}>\n                <Autocomplete\n                    //id=\"combo-box-demo\"\n                    options={styles}\n                    getOptionLabel={option => option.style_code}\n                    style={{ width: '100%' }}\n                    onChange={(e,v) => setState({...state,style:v})}\n                    renderInput={params => (\n                        <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                    )}\n                />\n            </Grid>\n            <Grid lg={5} md={5} sm={5} xs={5} style={{padding:5}}>\n                <Autocomplete\n                    //id=\"combo-box-demo\"\n                    options={colors}\n                    getOptionLabel={option => option.color}\n                    style={{ width: '100%' }}\n                    onChange={(e,v) => setState({...state,color:v})}\n                    renderInput={params => (\n                        <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                    )}\n                />\n            </Grid>\n            <Grid lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                <Button variant=\"contained\" color='primary' style={{width:'100%',height:55,color:'#fff'}} onClick={handleFetch}>\n                    {\n                        loading===true?\n                        <CircularProgress color={'#fff'}/>\n                        :`Fetch`\n                    }\n                </Button>\n            </Grid>\n                {/* <Grid lg={6} md={6} sm={6} xs={6}>\n                    <TextField\n                        name='searchValue'\n                        variant=\"outlined\"\n                        label=\"Search Worker\"\n                        value={searchText}\n                        onChange={e => setSearchText(e.target.value)}\n                        fullWidth\n                        InputProps={{\n                            endAdornment: <InputAdornment position=\"end\">\n                                <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                            </InputAdornment>\n                        }}\n                    // endAdornment={\n                    //     <InputAdornment position=\"end\">\n                    //       <SearchIcon/>\n                    //     </InputAdornment>\n                    //   }\n                    />\n                </Grid> */}\n            </div>\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true?\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\n                                        <CircularProgress color='primary'/>\n                                    </div>\n                                    :\n                                    <div container style={{textAlign:'center'}}>\n                                        {\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                        }\n                                    </div>\n                                }\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            {\n                tableValues === null ?\n                null\n                :\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                    {\n                        loading === true ?\n                            <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                                <CircularProgress color='primary' />\n                            </div>\n                            :\n                            <MyTable columns={[\n                                {\n                                    Header: 'Cut',\n                                    accessor: 'cut_code',\n                                },\n                                {\n                                    Header: 'Bundle',\n                                    accessor: 'bundle_code',\n                                },\n                                {\n                                    Header: 'Piece Size',\n                                    accessor: 'piece_size',\n                                },\n                                {\n                                    Header: 'Color',\n                                    accessor: 'color',\n                                },\n                                {\n                                    Header: 'Qty',\n                                    accessor: 'quantity',\n                                },\n                                {\n                                    Header: 'RFID',\n                                    accessor: 'rfid',\n                                },\n                                {\n                                    Header: 'Seq Start',\n                                    accessor: 'seq_start',\n                                },\n                                {\n                                    Header: 'Seq End',\n                                    accessor: 'seq_end',\n                                },\n                                {\n                                    Header: 'Part Name',\n                                    accessor: 'part_name',\n                                },\n                            ]} data={tableValues} tableValues={tableValues} />\n                            // <table style={{ height: 400, overflowY: 'scroll' }}>\n                            //     <tr>\n                            //         {/* <th style={{ width: '40px' }}></th> */}\n                            //         <th>OTN</th>\n                            //         <th>Cut</th>\n                            //         <th>Bundle</th>\n                            //         <th>RFID</th>\n                            //         <th>Piece Size</th>\n                            //         <th>Color</th>\n                            //         <th>Quantity</th>\n                            //         <th>Seq Start</th>\n                            //         <th>Seq End</th>\n                            //         <th>Part Name</th>\n                            //         {/* <th style={{ width: '70px' }}></th> */}\n                            //     </tr>\n                            //     <tbody>\n                            //         {\n                            //             tableValues && tableValues.map((v,i) => (\n                            //                 <tr>\n                            //                     <td>{v.otn}</td>\n                            //                     <td>{v.cut_code}</td>\n                            //                     <td>{v.bundle_code}</td>\n                            //                     <td>{v.rfid}</td>\n                            //                     <td>{v.piece_size}</td>\n                            //                     <td>{v.color}</td>\n                            //                     <td>{v.quantity}</td>\n                            //                     <td>{v.seq_start}</td>\n                            //                     <td>{v.seq_end}</td>\n                            //                     <td>{v.part_name}</td>\n                            //                     {/* <td style={{ textAlign: 'center' }}>\n                            //                     <InfoIcon color='primary' onClick={() => {\n                            //                         setModalVisible(true)\n                            //                         setModalValues(v)\n                            //                     }} style={{ cursor: 'pointer', marginRight: 15 }} />\n                            //                         <DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                            //                 </tr>\n                            //             ))\n                            //         }\n                                    \n                            //     </tbody>\n                            // </table>\n                    }\n                </div>\n\n            }\n        </div>\n    )\n}\n\nexport default withSnackbar(CutReportMappingTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport CutReportTable from '../CutReportTable'\nimport CutReportMappingTable from '../CutReportMappingTable'\n// import OrdersTable from '../OrdersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst CutReport = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Cut Report</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"View Cut Report\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Cut Report Mapping\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <CutReportTable />\n                        \n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <CutReportMappingTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default CutReport","import React from 'react'\nimport { Grid, TextField, Button, Typography, CircularProgress } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport readXlsxFile from 'read-excel-file'\n\n\n\nconst AddStyleBulletin = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [spreadSheetButtonVisible, setSpreadSheetButtonVisible] = React.useState(false)\n    const [modalVisible2, setModalVisible2] = React.useState(false)\n    const [responses, setResponses] = React.useState([])\n    const [loading,setLoading] = React.useState(false)\n    //const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [operations,setOperations] = React.useState([])\n    const [machineTypes,setMachineTypes] = React.useState([])\n    //const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    //const [deparments,setDepartments] = React.useState([])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        console.log('state',state)\n        // if(state.style){\n        //     fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n        //     .then(res => res.json()\n        //     .then(res => {\n        //         console.log('res colors',res)\n        //         setColors(res.Colors)\n        //     }))\n        //     .catch(err => {\n        //         console.log('err in fetch',err)\n        //     })\n\n        // }\n    },[state.style])\n\n\n    const handleAppend = () => {\n        console.log('handleAppend',state)\n        setModalVisible(false)\n        setTableValues(s => [...s,{id:uuid(),operation_code:state.operation?state.operation.operation_code:'',operation_description:state.operation?state.operation.operation_description:'',operation_sequence:state.sequence,no_of_operators:state.noOfOperators,no_of_helpers:state.noOfHelpers,machine_type:state.machineType?state.machineType.machine_type:'',target:state.target,time_for_target:state.timeForTarget}])\n        //setState({...state,size_id:null,size_code:null,quantity:null})\n    }\n\n    const handleFileUpload = (e) => {\n        // setExcelLoading(true)\n        console.log('e ',e)\n        console.log('e.target.files ',e.target.files)\n        //setFilesState()\n        try{\n\n            readXlsxFile(e.target.files[0]).then(async (rows) => {\n                let arr = []\n                console.log('rows: ',rows)\n                for(let i=1; i<rows.length; i++){\n                    let obj = {\n                        operation_code:rows[i][0],\n                        operation_description:rows[i][1],\n                        operation_sequence:rows[i][2],\n                        no_of_operators:rows[i][3],\n                        machine_type:rows[i][4],\n                        target:rows[i][5],\n                        time_for_target:rows[i][6],\n                        no_of_helpers:rows[i][7],\n                        id:uuid()\n                    }\n                    arr.push(obj)\n                }\n                console.log('arr',arr)\n                setTableValues(arr)\n                // setExcelLoading(false)\n                // `rows` is an array of rows\n                // each row being an array of cells.\n              })\n        }catch(err){\n            console.log('errr',err)\n            // setExcelLoading(false)\n        }\n\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res operations',res)\n\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\n\n            setOperations(ops)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res machine Types',res)\n            // let s = await Promise.all(res.Machi.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description})))\n\n            // setOperations(ops)\n            setMachineTypes(res.machine_types)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        \n    },[])\n\n    const handleUpload = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        console.log('state: ',state)\n        console.log('tableValues: ',tableValues)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/style/insertStyleBulletin.php`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n                body: JSON.stringify({styleBulletin:tableValues,style_code:state.style})\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Responses){\n                    setResponses(res.Responses)\n                    setModalVisible2(true)\n                }\n                if(res.Error_No===0){\n                    props.enqueueSnackbar(res.Error_Description?res.Error_Description:'Successfully Added Style Bulletin!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Style Bulletin!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Style Bulletin!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible2}\n            >\n                <div style={{ padding: 20, width: 543 }}>\n                    <div style={{padding:10,textAlign:'center'}}>\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Summary of Insertion</Typography>\n                    </div>\n                    <Grid container style={{padding:10}}>\n                        {\n                            responses && responses.length && responses.length>0?\n                            <table style={{width:'100%'}}>\n                                <tr>\n                                    <th>Style</th>\n                                    <th>Operation Code</th>\n                                    <th>Operation Desc</th>\n                                    <th>Operation Seq</th>\n                                    <th>Status</th>\n                                </tr>\n                                <tbody>\n                                    {\n                                        responses && responses.map(v => (\n                                            <tr>\n                                                <td>{v.style_code}</td>\n                                                <td>{v.operation_code}</td>\n                                                <td>{v.operation_description}</td>\n                                                <td>{v.operation_sequence}</td>\n                                                <td style={{color:v.Error_Description==='Failed'?'red':''}}>{v.Error_Description}</td>\n                                            </tr>\n                                        ))\n                                    }\n                                </tbody>\n                            </table>\n                            :null\n                        }\n                    \n                    </Grid>\n                        <div style={{display:'flex',justifyContent:'center'}}>\n                            <Button color='primary' fullWidth onClick={()=>setModalVisible2(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                                Okay\n                            </Button>\n                        </div>\n                    </div>\n            </Dialog>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10,textAlign:'center'}}>\n                        <Typography variant=\"h6\" color='primary' style={{textAlign:'center'}}>Provide The Following Information For Style</Typography>\n                    </div>\n                    <Grid container style={{padding:10}}>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={operations}\n                                getOptionLabel={option => option.operation}\n                                style={{ width: '100%' }}\n                                onChange={(e,v) => setState({...state,operation:v})}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={machineTypes}\n                                getOptionLabel={option => option.machine_type}\n                                style={{ width: '100%' }}\n                                onChange={(e,v) => setState({...state,machineType:v})}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" values={state.sequence} onChange={e=>setState({...state,sequence:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" values={state.target} onChange={e=>setState({...state,target:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" values={state.timeForTarget} onChange={e=>setState({...state,timeForTarget:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" values={state.noOfOperators} onChange={e=>setState({...state,noOfOperators:e.target.value})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" values={state.noOfHelpers} onChange={e=>setState({...state,noOfHelpers:e.target.value})} fullWidth />\n                        </Grid>\n                    </Grid>\n                    <div style={{display:'flex',justifyContent:'center'}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            Okay\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => {if(v){setState({...state,style:v.style_code})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                    <Button variant=\"contained\" color='primary' onClick={()=>setModalVisible(true)} style={{height:55,color:'#fff'}} fulLWidth>\n                        Add\n                    </Button>\n                    {/* <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    /> */}\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5,justifyContent:'center',display:'flex'}}>\n                    <Typography variant=\"subtitle1\" color='primary' style={{cursor:'pointer',textAlign:'center',fontWeight:'700'}} onClick={()=>setSpreadSheetButtonVisible(!spreadSheetButtonVisible)}>Upload from Spreadsheet</Typography>\n                    {spreadSheetButtonVisible === true?\n                    <input type='file' style={{marginLeft:15}} onChange={handleFileUpload}/>\n                    :null\n                    }\n                </Grid>\n                    {/* {\n                        spreadSheetButtonVisible === true?\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5,justifyContent:'center',display:'flex'}}>\n                            <input type='file'/>\n                        </Grid>\n                        :null\n                    } */}\n                \n                \n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\n                </Grid> */}\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Operation Code</th>\n                                <th>Operation Desc</th>\n                                <th>Operation Seq</th>\n                                <th>No. of Operators</th>\n                                <th>Machine Type</th>\n                                <th>Target</th>\n                                <th>Time For Target</th>\n                                <th>No. of Helpers</th>\n                                <th style={{ width: '40px' }}></th>\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.operation_code}</td>\n                                            <td>{v.operation_description}</td>\n                                            <td>{v.operation_sequence}</td>\n                                            <td>{v.no_of_operators}</td>\n                                            <td>{v.machine_type}</td>\n                                            <td>{v.target}</td>\n                                            <td>{v.time_for_target}</td>\n                                            <td>{v.no_of_operators}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleUpload}\n                        fullWidth\n                    >{\n                        loading===true?\n                        <CircularProgress color='#fff'/>\n                        :`Upload Style Bulletin`   \n                    }</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddStyleBulletin)","import React from 'react'\nimport { Grid, TextField, Button,Backdrop,CircularProgress, Typography } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport EditIcon from '@material-ui/icons/Edit'\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst ViewStyleBulletin = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [count, setCount] = React.useState(null)\n    const [somethingChanged, setSomethingChanged] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    //const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [operations,setOperations] = React.useState([])\n    const [machineTypes,setMachineTypes] = React.useState([])\n    //const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    //const [deparments,setDepartments] = React.useState([])\n\n    // React.useEffect(()=>{\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n    //     console.log('state',state)\n    //     // if(state.style){\n    //     //     fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n    //     //     .then(res => res.json()\n    //     //     .then(res => {\n    //     //         console.log('res colors',res)\n    //     //         setColors(res.Colors)\n    //     //     }))\n    //     //     .catch(err => {\n    //     //         console.log('err in fetch',err)\n    //     //     })\n\n    //     // }\n    // },[state.style])\n\n\n    // const handleAppend = () => {\n    //     console.log('handleAppend',state)\n    //     setModalVisible(false)\n    //     setTableValues(s => [...s,{id:uuid(),operation_code:state.operation.operation_code,operation_description:state.operation.operation_description,operation_sequence:state.sequence,no_of_operators:state.noOfOperators,no_of_helpers:state.noOfHelpers,machine_type:state.machineType.machine_description,target:state.target,time_for_target:state.timeForTarget}])\n    //     //setState({...state,size_id:null,size_code:null,quantity:null})\n    // }\n\n    React.useEffect(()=>{\n        \n        //__________________________________________________________________________________________________________//\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        //__________________________________________________________________________________________________________//\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res operations',res)\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\n            setOperations(ops)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        //__________________________________________________________________________________________________________//\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\n        .then(res => res.json()\n        .then(async res => {\n            console.log('res machine Types',res)\n            setMachineTypes(res.machine_types)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        //__________________________________________________________________________________________________________//\n\n        \n    },[])\n\n    const handleDelete = (record) => {\n        console.log('toDelete:',record)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/style/deleteStyleBulletin.php?styleBulletin=${JSON.stringify({...record,Style_id:record.style_id})}`\n            console.log('url: ',url)\n            setOpenBackdrop(true)\n            fetch(url,{\n                method:'post'\n            })\n                .then(res => res.json())\n                .then(res => {\n                    setOpenBackdrop(false)\n                    console.log('delete response: ', res)\n                    if (res.Error_No === 0) {\n                        props.enqueueSnackbar('Successfully deleted style bulletin!', {\n                            variant: 'info',\n                        })\n                        handleFetch()\n                    }\n                    //setTableValues(res.Orders)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setOpenBackdrop(false)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setOpenBackdrop(false)\n            //setTableValues([])\n        }\n        // try{\n        //     let url = api_endpoint+`/Jordan/SPTS/style/deleteStyleBulletin.php?styleBulletin=${record}`;\n        //     console.log('url',url)\n        //     fetch(url,{\n        //         method: 'post',\n        //     })\n        //     .then(res => res.json())\n        //     .then(res => {\n        //         setLoading(false)\n        //         console.log('res: ',res)\n        //         setTableValues(res.Style_Bulletin)\n        //     })\n        //     .catch(err => {\n        //         console.log('error while fetching',err)\n        //         setLoading(false)\n        //         props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n        //             variant: 'info',\n        //         })\n        //     })\n        // }catch(err){\n        //     console.log('err in try catch',err)\n        //     setLoading(false)\n        //     props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n        //         variant: 'info',\n        //     })\n        // }\n    }\n    const handleUpdateTable = async () => {\n        // console.log('modalValues',modalValues)\n        // console.log('tableVlaue',tableValues)\n        let tempTable = await Promise.all(tableValues.map(v => {\n            if(v.style_id===modalValues.style_id){\n                return modalValues\n            }else{\n                return v\n            }\n        }))\n        console.log('newTable',tempTable)\n        setTableValues(tempTable)\n        setSomethingChanged(true)\n        setModalVisible(false)\n\n        //let \n\n    }\n\n    const handleUpdate = async () => {\n        console.log('tableValues',tableValues)\n        setLoading(true)\n        let table = await Promise.all(tableValues.map(t => ({...t,Style_id:t.style_id,target:t.order_target,time_for_target:t.allocated_time_for_target})))\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/style/updateStyleBulletin.php`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n                body: JSON.stringify({styleBulletin:table})\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                setTableValues([])\n                setSomethingChanged(false)\n                props.enqueueSnackbar('Updated Style Bulletin Successfully!', { \n                    variant: 'info',\n                })\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Update Style Bulletin!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Update Style Bulletin!', { \n                variant: 'info',\n            })\n        }\n\n    }\n\n    const handleFetch = () => {\n        setCount(null)\n\n        console.log('state: ',state)\n        console.log('tableValues: ',tableValues)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/SPTS/style/getStyleBulletinForStyleCode.php?style_code=${state.style}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                setTableValues(res.Style_Bulletin)\n                setCount(res.Style_Bulletin.length)\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Update The Following Information For Style\n                    </div>\n                    {\n                        modalValues?\n                        <Grid container style={{padding:10}}>\n                            {\n                                console.log('modalValues ====> ',modalValues)\n                            }\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={operations}\n                                getOptionLabel={option => option.operation}\n                                style={{ width: '100%' }}\n                                defaultValue={()=>operations.filter(o => o.operation_code===modalValues.operation_code)[0]}\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,operation_id:v.operation_id,operation_code:v.operation_code,operation_description:v.operation_description})}}}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <Autocomplete\n                                //id=\"combo-box-demo\"\n                                options={machineTypes}\n                                getOptionLabel={option => option.machine_type}\n                                style={{ width: '100%' }}\n                                defaultValue={{machine_type:modalValues.machine_type}}\n                                //value={modalValues.machine_type}\n                                //defaultValue={() => machineTypes.filter(t => t.)}\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,machine_type:v.machine_type})}}}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" value={modalValues.operation_sequence} onChange={e=>setModalValues({...modalValues,operation_sequence:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" value={modalValues.order_target} onChange={e=>setModalValues({...modalValues,order_target:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" value={modalValues.allocated_time_for_target} onChange={e=>setModalValues({...modalValues,allocated_time_for_target:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" value={modalValues.no_of_operators} onChange={e=>setModalValues({...modalValues,no_of_operators:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" value={modalValues.no_of_helpers} onChange={e=>setModalValues({...modalValues,no_of_helpers:Number(e.target.value)})} fullWidth />\n                        </Grid>\n                    </Grid>\n                    :null\n                    }\n                    <div style={{display:'flex',justifyContent:'center'}}>\n                        <Button color='primary' fullWidth onClick={handleUpdateTable} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            {\n                                loading === true?\n                                <CircularProgress color={'#fff'}/>\n                                :\n                                `Update`\n                            }\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                    <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{height:55,color:'#fff'}} fullWidth>\n                        fetch\n                    </Button>\n                    \n                    {/* <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                            )}\n                        /> */}\n                </Grid>\n                {/* <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                            <Button variant=\"contained\" color='primary' onClick={handleUpdate} style={{height:55,color:'#fff'}} fullWidth>\n                                Save changes\n                            </Button>\n                        </Grid> */}\n                {\n                        somethingChanged===true?\n                        <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\n                            <Button variant=\"contained\" color='primary' onClick={handleUpdate} style={{height:55,color:'#fff'}} fullWidth>\n                                {\n                                    loading===true?\n                                    <CircularProgress color={'#fff'}/>\n                                    :`Update`\n                                }\n                            </Button>\n                        </Grid>\n                        :null\n                    }\n                \n                \n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.marker_description} onChange={e => setState({...state,marker_description:e.target.value})} name=\"markerDescription\" variant=\"outlined\" fullWidth label=\"Marker Description\"/>\n                </Grid> */}\n                {\n                    count !== null?\n                    <Grid container style={{display:'flex',justifyContent:'center'}}>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:15,marginTop:15}}>\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\n                                No Of Style Bulletin: {count}\n                            </Typography>\n\n                        </Grid>\n                    </Grid>\n                    :null\n                }\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        loading===true?\n                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Operation Code</th>\n                                <th>Operation Desc</th>\n                                <th>Operation Seq</th>\n                                <th>No. of Operators</th>\n                                <th>Machine Type</th>\n                                <th>Target</th>\n                                <th>Time For Target</th>\n                                <th>No. of Helpers</th>\n                                <th></th>\n                                {/* <th style={{ width: '40px' }}></th> */}\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.operation_code}</td>\n                                            <td>{v.operation_description}</td>\n                                            <td>{v.operation_sequence}</td>\n                                            <td>{v.no_of_operators}</td>\n                                            <td>{v.machine_type}</td>\n                                            <td>{v.order_target}</td>\n                                            <td>{v.allocated_time_for_target}</td>\n                                            <td>{v.no_of_helpers}</td>\n                                            <td><EditIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                                console.log('v',v)\n                                                //setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>handleDelete(v)} /></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                            <Backdrop open={openBackdrop}>\n                                <CircularProgress color=\"inherit\" />\n                            </Backdrop>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                {/* <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleUpload}\n                        fullWidth\n                    >Upload Style Bulletin</Button>\n                </Grid> */}\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(ViewStyleBulletin)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddStyleBulletin from '../AddStyleBulletin'\nimport ViewStyleBulletin from '../ViewStyleBulletin'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst StyleBulletin = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Style Bulletin</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Style Bulletin\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Style Bulletin\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddStyleBulletin/>\n                        \n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewStyleBulletin />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default StyleBulletin","import React from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\nimport { XYPlot, VerticalBarSeries,XAxis,YAxis } from 'react-vis'\r\n// make sure parent container have a defined height when using\r\n// responsive component, otherwise height will be 0 and\r\n// no chart will be rendered.\r\n// website examples showcase many properties,\r\n// you'll often use just a few of them.\r\nconst MyResponsiveBar = ({data}) => {\r\n    \r\n    console.log('data: ',data)\r\n    \r\n    return(\r\n        <div>\r\n            <XYPlot height={300} width={300} color=\"#418832\">\r\n            <XAxis\r\n                attr=\"x\"\r\n                attrAxis=\"y\"\r\n                orientation=\"bottom\"\r\n            />\r\n            <YAxis\r\n                attr=\"y\"\r\n                attrAxis=\"x\"\r\n                orientation=\"left\"\r\n            />\r\n                <VerticalBarSeries\r\n                    data={data}\r\n                    style={{}}\r\n                />\r\n            </XYPlot>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default MyResponsiveBar","import React from 'react'\r\nimport { Paper,Typography, Grid } from '@material-ui/core'\r\nimport LineWiseTotalProduction from '../LineWiseTotalProduction'\r\n\r\nconst data = [\r\n    {\r\n        x: 0,\r\n        y: 10\r\n    },\r\n    {\r\n        x: 1,\r\n        y: 11.248257034033035\r\n    },\r\n    {\r\n        x: 2,\r\n        y: 12.20577945795663\r\n    },\r\n    {\r\n        x: 3,\r\n        y: 12.801326795474443\r\n    },\r\n    {\r\n        x: 4,\r\n        y: 13.132807927572742\r\n    },\r\n    {\r\n        x: 5,\r\n        y: 15.841383594752223\r\n    },\r\n    {\r\n        x: 6,\r\n        y: 15.732741198841865\r\n    },\r\n    {\r\n        x: 7,\r\n        y: 13.287092723327687\r\n    },\r\n    {\r\n        x: 8,\r\n        y: 11.113246356017706\r\n    }\r\n    ]\r\n\r\nconst IECharts = props => {\r\n\r\n\r\n\r\n    return(<div style={{ padding: 20 }}>\r\n        <Paper style={{padding:20,backgroundColor:'#f6f6f6'}}>\r\n            <Grid container>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>Line Wise Total Production</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>WIP</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n                <Grid item lg={4} md={4} sm={6} xs={12} style={{display:'flex',justifyContent:'center',alignItems:'center',flexDirection:'column'}}>\r\n                    <Typography variant=\"h6\" style={{marginBottom:20}}>Worker Wise Fault Monitoring</Typography>\r\n                    <LineWiseTotalProduction data={data} />\r\n                </Grid>\r\n            </Grid>\r\n        </Paper>\r\n        </div>)\r\n}\r\n\r\nexport default IECharts","import React from 'react'\nimport { Grid, TextField, Button } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\n\nconst AddPO = props => {\n\n    const [state,setState] = React.useState({})\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [sizes,setSizes] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n    const [deparments,setDepartments] = React.useState([])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        console.log('state',state)\n        if(state.style){\n            fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n            .then(res => res.json()\n            .then(res => {\n                console.log('res colors',res)\n                setColors(res.Colors)\n            }))\n            .catch(err => {\n                console.log('err in fetch',err)\n            })\n\n        }\n    },[state.style])\n\n    React.useEffect(()=>{\n        //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n        if(state.size){\n            setModalVisible(true)\n        }\n        \n    },[state.size])\n\n    const handleAppend = () => {\n        console.log('handleAppend',state.style,state.quantity)\n        setModalVisible(false)\n        setTableValues(s => [...s,{id:uuid(),size_id:state.size.size_id,size_code:state.size.size_code,quantity:state.quantity}])\n        setState({...state,size_id:null,size_code:null,quantity:null})\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        fetch(api_endpoint+'/Jordan/Cutting/Marker/getSizes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res sized',res)\n            setSizes(res.Sizes)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n\n        // fetch(api_endpoint+'/Jordan/SPTS/worker/getDesignations.php')\n        // .then(res => res.json()\n        // .then(res => {\n        //     console.log('res designations',res)\n        //     setDesignations(res.Designations)\n        // }))\n        // .catch(err => {\n        //     console.log('err in fetch',err)\n        // })\n\n    },[])\n\n    const handleAdd = () => {\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        console.log('state: ',state)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/Cutting/PO/insertPOAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&PO_code=${state.po_description}&size_mappings=${JSON.stringify(tableValues)}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Error_No===0){\n                    props.enqueueSnackbar('Successfully Added PO!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding PO!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding PO!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    <div style={{padding:10}}>\n                        Enter Quantity\n                    </div>\n                    <div style={{padding:10}}>\n                        <TextField name='quantity' variant=\"outlined\" label=\"Quantity\" values={state.quantity} onChange={e=>setState({...state,quantity:e.target.value})} fullWidth />\n                    </div>\n                    <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n                        <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            Save Quantity\n                        </Button>\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff'}}>\n                            cancel\n                        </Button>\n                    </div>\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,style:v.style_code})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,color:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={sizes}\n                        getOptionLabel={option => option.size_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,size:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Size\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\n                </Grid> */}\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.po_description} onChange={e => setState({...state,po_description:e.target.value})} name=\"poDescription\" variant=\"outlined\" fullWidth label=\"PO Description\"/>\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Size</th>\n                                <th>Quantity</th>\n                                <th style={{ width: '40px' }}></th>\n                                {/* <th style={{ width: '70px' }}></th> */}\n                            </tr>\n                            {console.log('tableValues',tableValues)}\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.size_code}</td>\n                                            <td>{v.quantity}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' style={{ cursor: 'pointer' }} /></td> */}\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >Add PO</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddPO)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport InfoIcon from '@material-ui/icons/Info'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\n\nconst POTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    // const [designations,setDesignations] = React.useState([])\n    const [sizes,setSizes] = React.useState([])\n    // const [deparments,setDepartments] = React.useState([])\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState(null)\n    const [editState,setEditState] = React.useState({})\n    const [loading,setLoading] = React.useState(false)\n\n    // React.useEffect(()=>{\n    //     console.log('modalValues',modalValues)\n    //     setEditState(modalValues)\n    // },[modalValues])\n    React.useEffect(()=>{\n        console.log('modalValues',modalValues)\n        setLoading(true)\n        setEditState(modalValues)\n        if(modalValues){\n\n            try{\n                let url = api_endpoint+`/Jordan/Cutting/PO/getSizesForPO.php?PO_id=${modalValues.po_id}`;\n                console.log('url',url)\n                fetch(url,{\n                    method: 'post',\n                })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ',res)\n                    setSizes(res.Sizes)\n                    setLoading(false)\n                })\n                .catch(err => {\n                    console.log('error while fetching',err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Error While Getting Styles!', { \n                        variant: 'info',\n                    })\n                })\n            }catch(err){\n                console.log('err in try catch',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Fetching Styles!', { \n                    variant: 'info',\n                })\n            }\n        }\n    },[modalValues])\n\n    const fetchMarkers = () => {\n\n        try {\n            fetch(api_endpoint + '/Jordan/Cutting/PO/getPO.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    setTableValues(res.PO)\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        \n        fetchMarkers()\n\n    }, [])\n\n    return (\n        <div>\n            \n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        modalVisible ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Styles</Typography></div>\n                                {\n                                    loading === true?\n                                    <div style={{padding:20,justifyContent:'center',display:'flex'}}>\n                                        <CircularProgress color='primary'/>\n                                    </div>\n                                    :\n                                    <div container style={{textAlign:'center'}}>\n                                        {\n                                            sizes && sizes.map(s => (<p>Size: {s.size_code}, Quantity: {s.quantity}</p>))\n                                        }\n                                    </div>\n                                }\n                                <Grid container style={{display:'flex',justifyContent:'center'}}>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Okay</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog>\n            <div style={{ display: 'flex', justifyContent: 'center' }}>\n                {\n                    tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        <table style={{overflowY: 'scroll' }}>\n                            <tr>\n                                <th style={{ width: '40px' }}></th>\n                                <th>PO</th>\n                                <th style={{ width: '40px' }}></th>\n                            </tr>\n                            <tbody>\n                                {\n                                    tableValues && tableValues.map((v,i) => (\n                                        <tr>\n                                            <td>{i+1}</td>\n                                            <td style={{textAlign:'center'}}>{v.po_code}</td>\n                                            <td style={{ textAlign: 'center' }}>\n                                            <InfoIcon color='primary' onClick={() => {\n                                                setModalVisible(true)\n                                                setModalValues(v)\n                                            }} style={{ cursor: 'pointer', marginRight: 15 }} />\n                                                {/* <DeleteIcon color='primary' style={{ cursor: 'pointer' }} /> */}\n                                                </td>\n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default withSnackbar(POTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddPO from '../AddPO'\nimport POTable from '../POTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst PO = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">PO</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add PO\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View PO\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddPO />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        {/* <div>ghgk</div> */}\n                        <POTable />\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default PO","import React from 'react'\nimport { Grid, TextField, Button, CircularProgress,Typography } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nconst AssignPO = props => {\n\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n    const [styles, setStyles] = React.useState([])\n    const [colors, setColors] = React.useState([])\n    const [cuts, setCuts] = React.useState([])\n    const [pos, setPOs] = React.useState([])\n    const [bundles, setBundles] = React.useState([])\n    const [checked, setChecked] = React.useState(false);\n\n  const handleChange = event => {\n      console.log('check value: ',event.target.checked)\n    setChecked(event.target.checked);\n    if(event.target.checked===true){\n        setState({...state,bundle:bundles})\n    }else{\n        setState({...state,bundle:null})\n    }\n  };\n\n    const fetchStyles = () => {\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/order/getStyleCodes.php`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ', res)\n                    setStyles(res.Styles)\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    const fetchPOs = () => {\n        try {\n            let url = api_endpoint + `/Jordan/Cutting/PO/getPO.php`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ', res)\n                    if(res.PO){\n                        setPOs(res.PO)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    // const handleSelectAll = () => {\n    //     //set\n    //     setState({...state,bundle:null})\n    //     console.log('state',state,bundles)\n    // }\n    const fetchColorsForStyleCodes = () => {\n        console.log('state', state)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res: ', res)\n                    if(res.Colors){\n                        setColors(res.Colors)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    const fetchCutForOrder = () => {\n        console.log('state', state)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/cutReport/getCutsForOrder.php?order_id=${state.color.order_id}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res cut: ', res)\n                    if(res.Cuts){\n                        setCuts(res.Cuts)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n    const fetchBundleForCut = () => {\n        console.log('state', state)\n        try {\n            let url = api_endpoint + `/Jordan/SPTS/cutReport/getBundlesForOrderCut.php?order_id=${state.color.order_id}&cut_code=${state.cut.cut_code}`;\n            console.log('url', url)\n            fetch(url, {\n                method: 'get',\n            })\n                .then(res => res.json())\n                .then(res => {\n                    console.log('res bundles: ', res)\n                    if(res.Bundles){\n                        setBundles(res.Bundles)\n                    }\n                })\n                .catch(err => {\n                    console.log('error while fetching', err)\n                })\n        } catch (err) {\n            console.log('err in try catch', err)\n        }\n    }\n\n    React.useEffect(() => {\n        fetchStyles()\n        fetchPOs()\n    }, [])\n    React.useEffect(() => {\n        if(state.style){\n            fetchColorsForStyleCodes()\n        }\n    }, [state.style])\n    React.useEffect(() => {\n        console.log('statte', state)\n        if(state.color){\n            fetchCutForOrder()\n        }\n    }, [state.color])\n    React.useEffect(() => {\n        console.log('statte', state)\n        if(state.cut){\n            fetchBundleForCut()\n        }\n    }, [state.cut])\n\n    const handleAdd = async () => {\n        console.log('state', state)\n        if(state.bundle){\n            setLoading(true)\n            const bundlesToSend = await Promise.all(state.bundle.map(b => ({bundle_id:b.bundle_id})))\n            console.log('bundlesToSend',bundlesToSend)\n            try{\n                    let url = api_endpoint+`/Jordan/Cutting/PO/assignPOtoBundle.php?PO_id=${state.po.po_id}&PO_code=${state.po.po_code}&remarks=${state.remarks}&bundle_mapping=${JSON.stringify(bundlesToSend)}`;\n                    console.log('url',url)\n                    fetch(url,{\n                        method: 'post',\n                    })\n                    .then(res => res.json())\n                    .then(res => {\n                        setLoading(false)\n                        console.log('res: ',res)\n                        if(res.Error_No===0){\n                            props.enqueueSnackbar('Successfully Added Order!', { \n                                variant: 'info',\n                            })\n                        }else{\n                            if(typeof res.Error_Description==='object'){\n                                console.log('objecttypeee')\n                                props.enqueueSnackbar('Validation Errors!', { \n                                    variant: 'info',\n                                })\n                            }else{\n                                props.enqueueSnackbar(res.Error_Description, { \n                                    variant: 'info',\n                                })\n                            }\n                        }\n                    })\n                    .catch(err => {\n                        console.log('error while fetching',err)\n                        setLoading(false)\n                        props.enqueueSnackbar('Error While Adding Order!', { \n                            variant: 'info',\n                        })\n                    })\n                }catch(err){\n                    console.log('err in try catch',err)\n                    setLoading(false)\n                    props.enqueueSnackbar('Error While Adding Order!', { \n                        variant: 'info',\n                    })\n                }\n        }\n        // console.log({ \n        //     worker_code: state.workerId, \n        //     worker_name: state.workerName, \n        //     designator_id:state.designation.designation_id,\n        //     designator_code:state.designation.designation_code,\n        //     department_id:state.department.department_id,\n        //     department_code:state.department.department_code\n        // })\n        \n        // \n\n    }\n    return (\n        <div>\n            <Grid container>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={styles}\n                                getOptionLabel={option => option.style_code}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => {if(v){setState({ ...state, style: v.style_code })}else{setState({ ...state, style: v })}}}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={colors}\n                                getOptionLabel={option => option.color}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => setState({ ...state, color: v })}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={cuts}\n                                getOptionLabel={option => option.cut_code.toString()}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => setState({ ...state, cut: v })}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"Cut\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                            </Grid>\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                            <Autocomplete\n                                options={pos}\n                                getOptionLabel={option => option.po_code}\n                                style={{ width: '100%' }}\n                                onChange={(e, v) => setState({ ...state, po: v })}\n                                renderInput={params => (\n                                    <TextField {...params} label=\"PO\" variant=\"outlined\" fullWidth />\n                                )}\n                            />\n                        </Grid>\n                        {\n                            bundles && bundles.length > 0?\n                            <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                                <FormControlLabel\n                                    control={\n                                    <Checkbox checked={checked}\n                                    onChange={handleChange}\n                                    value=\"primary\"\n                                    inputProps={{ 'aria-label': 'primary checkbox' }} />\n                                    }\n                                    label=\"Select All Bundles\"\n                                />\n                            </Grid>\n                            :null\n                        }\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                            {\n                                checked === true?\n                                <Typography variant=\"subtitle\" color='primary' style={{marginBottom:10}}>* All Bundles Selected</Typography>\n                                :\n                                <Autocomplete\n                                    options={bundles}\n                                    multiple\n                                    disableCloseOnSelect\n                                    getOptionLabel={option => option.bundle_code}\n                                    style={{ width: '100%' }}\n                                    //value={state.bundle}\n                                    onChange={(e, v) => setState({ ...state, bundle: v })}\n                                    renderInput={params => (\n                                        <TextField {...params} label=\"Bundle\" variant=\"outlined\" fullWidth />\n                                    )}\n                                />\n                            }\n                        </Grid>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                            <TextField\n                                variant=\"outlined\"\n                                multiline\n                                rows={2}\n                                fullWidth\n                                label=\"Remarks\"\n                                onChange={(e) => setState({ ...state, remarks: e.target.value })}\n                                // renderInput={params => (\n                                //     <TextField {...params} label=\"Bundle\" variant=\"outlined\" fullWidth />\n                                // )}\n                            />\n                        </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{ padding: 5 }}>\n                    <Button\n                        color='primary'\n                        variant='contained'\n                        style={{ color: '#fff', height: '50px' }}\n                        onClick={handleAdd}\n                        fullWidth\n                    >{\n                        loading===true?\n                        <CircularProgress color={'#fff'} />\n                        :\n                        `Assign PO to Bundle`\n                    }</Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AssignPO)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AssignPO from '../AssignPO'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst AssignBundle = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Assign PO to Bundle</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Assign Bundle\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        {/* <Tab label=\"View Markers\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AssignPO />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#fff',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        {/* <div>ghgk</div> */}\n                        {/* <MarkersTable /> */}\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default AssignBundle","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n//import './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter,useRowSelect } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Rolls\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef()\n      const resolvedRef = ref || defaultRef\n  \n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate\n      }, [resolvedRef, indeterminate])\n  \n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      )\n    }\n  )\n\nfunction MyTable({ columns, data, handleUpload }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        selectedFlatRows,\n    state: { selectedRowIds },\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination,useRowSelect,\n      hooks => {\n        hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n    })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div >\n            <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n              <div style={{width:300}}>\n                  <GlobalFilter\n                      preGlobalFilteredRows={preGlobalFilteredRows}\n                      globalFilter={globalFilter}\n                      setGlobalFilter={setGlobalFilter}\n                  />\n              </div>\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            console.log('row: ',row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{textAlign:'center'}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {\n                Object.keys(selectedRowIds).length > 0?\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\n                    </Grid>\n                </Grid>\n                :null\n            }\n        </div>\n    )\n}\n\nconst StockIn = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    // const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    // const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [invoiceCodes, setInvoiceCodes] = React.useState([])\n    const [rolls, setRolls] = React.useState([])\n    const [tableValues, setTableValues] = React.useState([{id:1,name:\"Hamza Iqbal\"},{id:2,name:\"Ahmad Mujtaba\"},{id:3,name:\"Ahsan\"},{id:4,name:\"Anas Jamil\"}])\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n    \n\n    const fetchRolls = () => {\n      setLoading(true)\n      try {\n        let url = api_endpoint+`/Jordan/Warehouse/ManualStocking/getRollsForInvoiceStockingIn.php?invoice_no=${state.invoiceCode?state.invoiceCode.invoice_code:''}`;\n        console.log('url',url)\n        fetch(url,{\n            method: 'post',\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log('--->',res)\n            if(res.Error_No===0){\n              setRolls(res.Rolls)\n            }\n            setLoading(false)\n          })\n          .catch(err => {\n            setLoading(false)\n            console.log('err in fetching', err)\n            // setTableValues([])\n          })\n      } catch (err) {\n          setLoading(false)\n          console.log('try catch error: ', err)\n          // setTableValues([])\n      }\n    }\n    const handleRollIntention = async (array) => {\n\n      setLoading(true)\n      console.log('array: ',array)\n      let keysArray = Object.keys(array)\n      let error = false\n      for(let i=0; i<keysArray.length;i++){\n        console.log('Working on ',rolls[parseInt(keysArray[i])].rfid_tag_id)\n        try {\n          let url = api_endpoint+`/Jordan/Warehouse/Issuance/insertRollIntention.php?tag_id=${rolls[parseInt(keysArray[i])].rfid_tag_id}`;\n          console.log('url',url)\n          fetch(url,{\n              method: 'post',\n          })\n          .then(res => res.json())\n          .then(res => {\n              if(res.Error_No===0){\n                let newRolls = rolls.filter(r => r.rfid_tag_id !== rolls[parseInt(keysArray[i])].rfid_tag_id)\n                setRolls(newRolls)\n              }else{\n                error = true\n              }\n              console.log('roll intetntion insertion response -----> ',res)\n            })\n            .catch(err => {\n              console.log('err in fetching', err)\n            })\n        } catch (err) {\n            console.log('try catch error: ', err)\n        }\n        \n      }\n      setLoading(false)\n      if(error===true){\n        props.enqueueSnackbar('Something Went Wrong!', { \n          variant: 'info',\n        })\n      }else{\n          props.enqueueSnackbar('Manual Stockin succeeded!', { \n            variant: 'info',\n          })\n      }\n      // await Promise.all()\n    }\n\n    // const insertRollIntention = (tag_id) => {\n      \n    //   try {\n    //     let url = api_endpoint+`/Jordan/Warehouse/Issuance/insertRollIntention.php?tag_id=${tag_id}`;\n    //     console.log('url',url)\n    //     fetch(url,{\n    //         method: 'post',\n    //     })\n    //     .then(res => res.json())\n    //     .then(res => {\n    //         console.log('roll intetntion insertion response -----> ',res)\n    //       })\n    //       .catch(err => {\n    //         console.log('err in fetching', err)\n    //       })\n    //   } catch (err) {\n    //       console.log('try catch error: ', err)\n    //   }\n\n    // }\n\n    const fetchInvoiceCodes = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Warehouse/PackingList/getInvoiceCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log('=> ',res)\n                    if(res.Error_No===0){\n                      setInvoiceCodes(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    // setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            // setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n      fetchInvoiceCodes()\n    }, [])\n\n    return (\n        <div>\n            <Grid container style={{justifyContent:'center',display:'flex'}}>\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\n                    <Autocomplete\n                      options={invoiceCodes}\n                      getOptionLabel={option=>option.invoice_code}\n                      style={{ width: '100%' }}\n                      onChange={(e, v) => setState({ ...state, invoiceCode: v })}\n                      renderInput={params => (\n                          <TextField {...params} label=\"Invoice Codes\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\n                    {\n                      loading===true?\n                      <CircularProgress color={'#fff'}/>\n                      :'Fetch'\n                    }\n                  </Button>\n                </Grid>\n            </Grid>\n            {\n              rolls.length===0?\n              <div style={{padding:50,justifyContent:'center',display:'flex',color:'grey'}}>\n                Nothing to display.\n              </div>\n              :\n              <MyTable columns={[\n                  {\n                      Header: 'RFID',\n                      accessor: 'rfid_tag_id',\n                  },\n                  {\n                      Header: 'Supplier',\n                      accessor: 'supplier',\n                  },\n                  {\n                      Header: 'Buyer',\n                      accessor: 'buyer',\n                  },\n                  {\n                      Header: 'Style',\n                      accessor: 'style_code',\n                  },\n                  {\n                      Header: 'Color',\n                      accessor: 'color',\n                  },\n                  {\n                      Header: 'Length',\n                      accessor: 'length',\n                  },\n                  {\n                      Header: 'Net Weight',\n                      accessor: 'net_weight',\n                  },\n                  {\n                      Header: 'Gross Weight',\n                      accessor: 'gross_weight',\n                  },\n                  \n              ]} data={rolls} handleUpload={handleRollIntention} />\n\n            }\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            \n        </div>\n    )\n}\n\nexport default withSnackbar(StockIn)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\n//import './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter,useRowSelect } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Rolls\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\n  const IndeterminateCheckbox = React.forwardRef(\n    ({ indeterminate, ...rest }, ref) => {\n      const defaultRef = React.useRef()\n      const resolvedRef = ref || defaultRef\n  \n      React.useEffect(() => {\n        resolvedRef.current.indeterminate = indeterminate\n      }, [resolvedRef, indeterminate])\n  \n      return (\n        <>\n          <input type=\"checkbox\" ref={resolvedRef} {...rest} />\n        </>\n      )\n    }\n  )\n\nfunction MyTable({ columns, data, handleUpload }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        selectedFlatRows,\n    state: { selectedRowIds },\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination,useRowSelect,\n      hooks => {\n        hooks.visibleColumns.push(columns => [\n          // Let's make a column for selection\n          {\n            id: 'selection',\n            // The header can use the table's getToggleAllRowsSelectedProps method\n            // to render a checkbox\n            Header: ({ getToggleAllRowsSelectedProps }) => (\n              <div>\n                <IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\n              </div>\n            ),\n            // The cell can use the individual row's getToggleRowSelectedProps method\n            // to the render a checkbox\n            Cell: ({ row }) => (\n              <div>\n                <IndeterminateCheckbox {...row.getToggleRowSelectedProps()} />\n              </div>\n            ),\n          },\n          ...columns,\n        ])\n    })\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div >\n            <div style={{display:'flex',justifyContent:'center',marginTop:20}}>\n              <div style={{width:300}}>\n                  <GlobalFilter\n                      preGlobalFilteredRows={preGlobalFilteredRows}\n                      globalFilter={globalFilter}\n                      setGlobalFilter={setGlobalFilter}\n                  />\n              </div>\n            </div>\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            console.log('row: ',row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{textAlign:'center'}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n      <p>Selected Rows: {Object.keys(selectedRowIds).length}</p>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n            {\n                Object.keys(selectedRowIds).length > 0?\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={12} md={12} sm={12} xs={12} style={{ marginTop:20 }}>\n                        <Button fullWidth variant=\"contained\" color='primary' onClick={()=>handleUpload(selectedRowIds)} style={{color:'#fff',height:55}} >UPLOAD</Button>\n                    </Grid>\n                </Grid>\n                :null\n            }\n        </div>\n    )\n}\n\nconst StockOut = props => {\n\n    // const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    // const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    // const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [invoiceCodes, setInvoiceCodes] = React.useState([])\n    const [rolls, setRolls] = React.useState([])\n    const [tableValues, setTableValues] = React.useState([{id:1,name:\"Hamza Iqbal\"},{id:2,name:\"Ahmad Mujtaba\"},{id:3,name:\"Ahsan\"},{id:4,name:\"Anas Jamil\"}])\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n    \n\n    const fetchRolls = () => {\n      setLoading(true)\n      try {\n        let url = api_endpoint+`/Jordan/Warehouse/ManualStocking/getRollsForInvoiceStockingOut.php?invoice_no=${state.invoiceCode?state.invoiceCode.invoice_code:''}`;\n        console.log('url',url)\n        fetch(url,{\n            method: 'post',\n        })\n        .then(res => res.json())\n        .then(res => {\n            console.log(res)\n            if(res.Error_No===0){\n              setRolls(res.Rolls)\n            }\n            setLoading(false)\n          })\n          .catch(err => {\n            setLoading(false)\n            console.log('err in fetching', err)\n            // setTableValues([])\n          })\n      } catch (err) {\n          setLoading(false)\n          console.log('try catch error: ', err)\n          // setTableValues([])\n      }\n    }\n    const handleRollIntention = async (array) => {\n\n      setLoading(true)\n      console.log('array: ',array)\n      let keysArray = Object.keys(array)\n      let error = false\n      for(let i=0; i<keysArray.length;i++){\n        console.log('Working on ',rolls[parseInt(keysArray[i])].rfid_tag_id)\n        try {\n          let url = api_endpoint+`/Jordan/Warehouse/Issuance/insertRollIntention.php?tag_id=${rolls[parseInt(keysArray[i])].rfid_tag_id}`;\n          console.log('url',url)\n          fetch(url,{\n              method: 'post',\n          })\n          .then(res => res.json())\n          .then(res => {\n              if(res.Error_No===0){\n                let newRolls = rolls.filter(r => r.rfid_tag_id !== rolls[parseInt(keysArray[i])].rfid_tag_id)\n                setRolls(newRolls)\n              }else{\n                error = true\n              }\n              console.log('roll intetntion insertion response -----> ',res)\n            })\n            .catch(err => {\n              console.log('err in fetching', err)\n            })\n        } catch (err) {\n            console.log('try catch error: ', err)\n        }\n        \n      }\n      setLoading(false)\n      if(error===true){\n        props.enqueueSnackbar('Something Went Wrong!', { \n          variant: 'info',\n        })\n      }else{\n          props.enqueueSnackbar('Manual StockOut succeeded!', { \n            variant: 'info',\n          })\n      }\n      // await Promise.all()\n    }\n\n    // const insertRollIntention = (tag_id) => {\n      \n    //   try {\n    //     let url = api_endpoint+`/Jordan/Warehouse/Issuance/insertRollIntention.php?tag_id=${tag_id}`;\n    //     console.log('url',url)\n    //     fetch(url,{\n    //         method: 'post',\n    //     })\n    //     .then(res => res.json())\n    //     .then(res => {\n    //         console.log('roll intetntion insertion response -----> ',res)\n    //       })\n    //       .catch(err => {\n    //         console.log('err in fetching', err)\n    //       })\n    //   } catch (err) {\n    //       console.log('try catch error: ', err)\n    //   }\n\n    // }\n\n    const fetchInvoiceCodes = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Warehouse/PackingList/getInvoiceCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if(res.Error_No===0){\n                      setInvoiceCodes(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    // setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            // setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n      fetchInvoiceCodes()\n    }, [])\n\n    return (\n        <div>\n            <Grid container style={{justifyContent:'center',display:'flex'}}>\n                <Grid item lg={5} md={5} sm={6} xs={6} style={{padding:5}}>\n                    {/* <TextField name=\"roll\" value={state.roll} onChange={e => setState({ ...state, roll: e.target.value })} variant=\"outlined\" fullWidth label=\"Roll\" /> */}\n                    <Autocomplete\n                      options={invoiceCodes}\n                      getOptionLabel={option=>option.invoice_code}\n                      style={{ width: '100%' }}\n                      onChange={(e, v) => setState({ ...state, invoiceCode: v })}\n                      renderInput={params => (\n                          <TextField {...params} label=\"Invoice Codes\" variant=\"outlined\" fullWidth />\n                      )}\n                    />\n                </Grid>\n                <Grid item lg={2} md={2} sm={6} xs={6} style={{padding:5}}>\n                  <Button variant=\"contained\" fullWidth color='primary' style={{height:'100%'}} onClick={fetchRolls}>\n                    {\n                      loading===true?\n                      <CircularProgress color={'#fff'}/>\n                      :'Fetch'\n                    }\n                  </Button>\n                </Grid>\n            </Grid>\n            {\n              rolls.length===0?\n              <div style={{padding:50,justifyContent:'center',display:'flex',color:'grey'}}>\n                Nothing to display.\n              </div>\n              :\n              <MyTable columns={[\n                  {\n                      Header: 'RFID',\n                      accessor: 'rfid_tag_id',\n                  },\n                  {\n                      Header: 'Supplier',\n                      accessor: 'supplier',\n                  },\n                  {\n                      Header: 'Buyer',\n                      accessor: 'buyer',\n                  },\n                  {\n                      Header: 'Style',\n                      accessor: 'style_code',\n                  },\n                  {\n                      Header: 'Color',\n                      accessor: 'color',\n                  },\n                  {\n                      Header: 'Length',\n                      accessor: 'length',\n                  },\n                  {\n                      Header: 'Net Weight',\n                      accessor: 'net_weight',\n                  },\n                  {\n                      Header: 'Gross Weight',\n                      accessor: 'gross_weight',\n                  },\n                  \n              ]} data={rolls} handleUpload={handleRollIntention} />\n\n            }\n            {/* <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    }\n                </div>\n            </Dialog> */}\n            \n        </div>\n    )\n}\n\nexport default withSnackbar(StockOut)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport StockIn from '../StockIn'\nimport StockOut from '../StockOut'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst PackingList = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Manual Stocking</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Stock in\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"Stock out\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <StockIn />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <StockOut />\n                        {/* <ViewPackingList/> */}\n                        {/* <MarkersTable /> */}\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default PackingList","import React from 'react'\r\n//import styled from 'styled-components'\r\nimport { useTable, usePagination } from 'react-table'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\n//import makeData from './makeData'\r\n\r\n// const Styles = styled.div`\r\n//   padding: 1rem;\r\n//   table {\r\n//     border-spacing: 0;\r\n//     border: 1px solid black;\r\n//     tr {\r\n//       :last-child {\r\n//         td {\r\n//           border-bottom: 0;\r\n//         }\r\n//       }\r\n//     }\r\n//     th,\r\n//     td {\r\n//       margin: 0;\r\n//       padding: 0.5rem;\r\n//       border-bottom: 1px solid black;\r\n//       border-right: 1px solid black;\r\n//       :last-child {\r\n//         border-right: 0;\r\n//       }\r\n//       input {\r\n//         font-size: 1rem;\r\n//         padding: 0;\r\n//         margin: 0;\r\n//         border: 0;\r\n//       }\r\n//     }\r\n//   }\r\n//   .pagination {\r\n//     padding: 0.5rem;\r\n//   }\r\n// `\r\n\r\n// Create an editable cell renderer\r\nconst EditableCell = ({\r\n  cell: { value: initialValue },\r\n  row: { index },\r\n  column: { id },\r\n  updateMyData, // This is a custom function that we supplied to our table instance\r\n}) => {\r\n  // We need to keep and update the state of the cell normally\r\n  const [value, setValue] = React.useState(initialValue)\r\n\r\n  const onChange = e => {\r\n    setValue(e.target.value)\r\n  }\r\n\r\n  // We'll only update the external data when the input is blurred\r\n  const onBlur = () => {\r\n      console.log(index,id,value)\r\n    updateMyData(index, id, value)\r\n  }\r\n\r\n  // If the initialValue is changed external, sync it up with our state\r\n  React.useEffect(() => {\r\n    setValue(initialValue)\r\n  }, [initialValue])\r\n\r\n  return <input value={value} onChange={onChange} onBlur={onBlur} style={{width:'100%',backgroundColor: 'transparent',border: 'none'}} />\r\n}\r\n\r\n// Set our editable cell renderer as the default Cell renderer\r\nconst defaultColumn = {\r\n  Cell: EditableCell,\r\n}\r\n\r\n// Be sure to pass our updateMyData and the skipPageReset option\r\nfunction Table({ columns, data, updateMyData, skipPageReset,setTableValues }) {\r\n  // For this example, we're using pagination to illustrate how to stop\r\n  // the current page from resetting when our data changes\r\n  // Otherwise, nothing is different here.\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    prepareRow,\r\n    page,\r\n    canPreviousPage,\r\n    canNextPage,\r\n    pageOptions,\r\n    pageCount,\r\n    gotoPage,\r\n    nextPage,\r\n    previousPage,\r\n    setPageSize,\r\n    state: { pageIndex, pageSize },\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      defaultColumn,\r\n      // use the skipPageReset option to disable page resetting temporarily\r\n      autoResetPage: !skipPageReset,\r\n      // updateMyData isn't part of the API, but\r\n      // anything we put into these options will\r\n      // automatically be available on the instance.\r\n      // That way we can call this function from our\r\n      // cell renderer!\r\n      updateMyData,\r\n    },\r\n    usePagination\r\n  )\r\n\r\n  // Render the UI for your table\r\n  return (\r\n    <>\r\n      <table style={{width:'100%'}} {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map(headerGroup => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map(column => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n                <th></th>\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, i) => {\r\n            prepareRow(row)\r\n            // console.log(row)\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map(cell => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                })}\r\n                <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\r\n                    setTableValues(draft => draft.filter(d => d.id !== row.original.id))\r\n                }}/></td>\r\n              </tr>\r\n            )\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div style={{display:'flex',justifyContent:'space-between',marginBottom:20}}>\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n              Previous Page\r\n          </button>\r\n          <div>\r\n              Page{' '}\r\n              <em>\r\n                  {pageIndex + 1} of {pageOptions.length}\r\n              </em>\r\n          </div>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n              Next Page\r\n          </button>\r\n      </div>\r\n      {/* <div className=\"pagination\">\r\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\r\n          {'<<'}\r\n        </button>{' '}\r\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n          {'<'}\r\n        </button>{' '}\r\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n          {'>'}\r\n        </button>{' '}\r\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\r\n          {'>>'}\r\n        </button>{' '}\r\n        <span>\r\n          Page{' '}\r\n          <strong>\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </strong>{' '}\r\n        </span>\r\n        <span>\r\n          | Go to page:{' '}\r\n          <input\r\n            type=\"number\"\r\n            defaultValue={pageIndex + 1}\r\n            onChange={e => {\r\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\r\n              gotoPage(page)\r\n            }}\r\n            style={{ width: '100px' }}\r\n          />\r\n        </span>{' '}\r\n        <select\r\n          value={pageSize}\r\n          onChange={e => {\r\n            setPageSize(Number(e.target.value))\r\n          }}\r\n        >\r\n          {[10, 20, 30, 40, 50].map(pageSize => (\r\n            <option key={pageSize} value={pageSize}>\r\n              Show {pageSize}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </div> */}\r\n    </>\r\n  )\r\n}\r\n\r\nfunction App(props) {\r\n  const columns = React.useMemo(\r\n    () => [\r\n        {\r\n            Header: 'Invoice Number',\r\n            accessor: 'invoice_no',\r\n        },\r\n        {\r\n            Header: 'Supplier',\r\n            accessor: 'supplier',\r\n        },\r\n        {\r\n            Header: 'Buyer',\r\n            accessor: 'buyer',\r\n        },\r\n        {\r\n            Header: 'Style',\r\n            accessor: 'style_code',\r\n        },\r\n        {\r\n            Header: 'Color',\r\n            accessor: 'color',\r\n        },\r\n        {\r\n            Header: 'Lot',\r\n            accessor: 'lot',\r\n        },\r\n        {\r\n            Header: 'Length',\r\n            accessor: 'length',\r\n        },\r\n        {\r\n            Header: 'Net Weight',\r\n            accessor: 'net_weight',\r\n        },\r\n        {\r\n            Header: 'Gross Weight',\r\n            accessor: 'gross_weight',\r\n        },\r\n        {\r\n            Header: 'Roll No',\r\n            accessor: 'roll_no',\r\n        },\r\n        {\r\n            Header: 'Season Code',\r\n            accessor: 'season_code',\r\n        },\r\n        {\r\n            Header: 'Fabric Type',\r\n            accessor: 'fabric_type',\r\n        }\r\n    ],\r\n    []\r\n  )\r\n\r\n  const [data, setData] = React.useState([])\r\n  const [originalData] = React.useState(props.tableValues)\r\n  const [skipPageReset, setSkipPageReset] = React.useState(false)\r\n\r\n  React.useEffect(()=>{\r\n    if(props.tableValues){\r\n        setData(props.tableValues)\r\n    }\r\n  },[props.tableValues])\r\n  // We need to keep the table from resetting the pageIndex when we\r\n  // Update data. So we can keep track of that flag with a ref.\r\n\r\n  // When our cell renderer calls updateMyData, we'll use\r\n  // the rowIndex, columnId and new value to update the\r\n  // original data\r\n  const updateMyData = async (rowIndex, columnId, value) => {\r\n    // We also turn on the flag to not reset the page\r\n    // console.log('in uploadmydata',rowIndex,columnId,value)\r\n    setSkipPageReset(true)\r\n    let arr = await Promise.all(data.map((row, index) => {\r\n        if (index === rowIndex) {\r\n          return {\r\n            ...data[rowIndex],\r\n            [columnId]: value,\r\n          }\r\n        }\r\n        return row\r\n      }))\r\n    setData(arr)\r\n    props.setTableValues(arr)\r\n  }\r\n\r\n  // console.log('data_____________________________________________________________________________',data)\r\n  // After data chagnes, we turn the flag back off\r\n  // so that if data actually changes when we're not\r\n  // editing it, the page is reset\r\n  React.useEffect(() => {\r\n    setSkipPageReset(false)\r\n  }, [data])\r\n\r\n  // Let's add a data resetter/randomizer to help\r\n  // illustrate that flow...\r\n  const resetData = () => setData(originalData)\r\n\r\n  return (\r\n   <>\r\n      {/* <button onClick={resetData}>Reset Data</button> */}\r\n      <Table\r\n        columns={columns}\r\n        data={data}\r\n        updateMyData={updateMyData}\r\n        skipPageReset={skipPageReset}\r\n        setTableValues={props.setTableValues}\r\n      />\r\n      </>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport { Grid, TextField, Button, Menu, MenuItem, Typography, RadioGroup, Radio, FormControlLabel, CircularProgress } from '@material-ui/core'\nimport { api_endpoint } from '../../util/config'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { withSnackbar } from 'notistack';\nimport { Dialog } from '@material-ui/core'\nimport uuid from 'uuid/v4'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddIcon from '@material-ui/icons/Add'\nimport Table from '../Table'\nimport makeStyles from '@material-ui/styles/makeStyles'\nimport readXlsxFile from 'read-excel-file'\n//import {EditableSelect} from 'react-editable-select';\n\nconst useStyles = makeStyles({\n    addIcon:{position:'absolute',cursor:'pointer',right:20,zIndex:999,top:20,color:'#707070'}\n})\nconst units = ['kgs','yds']\n//const styles = \n\n\nconst AddPackingList = props => {\n    \n    const classes = useStyles()\n    const [value, setValue] = React.useState('kg');\n    const [distance, setDistance] = React.useState('yd');\n    const options = [{id:3,name:\"Hamza\"},{id:4,name:\"Iqbal\"}]\n    let selectedOption = {id:3,name:\"Hamza\"}\n\n    const handleChangeWeightUnit = event => {\n        setValue(event.target.value);\n    };\n    const handleChangeLengthUnit = event => {\n        setDistance(event.target.value);\n    };\n\n    const [unit,setUnit] = React.useState('kgs')\n    const [anchorEl, setAnchorEl] = React.useState(null);\n\n    const handleClick = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const [state,setState] = React.useState({})\n    const [uploadVisible,setUploadVisible] = React.useState(false)\n    const [filesState,setFilesState] = React.useState([])\n    const [noOfRolls,setNoOfRolls] = React.useState(null)\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [loading,setLoading] = React.useState(false)\n    const [excelLoading,setExcelLoading] = React.useState(false)\n    //const [sizes,setSizes] = React.useState([])\n    const [buyers,setBuyers] = React.useState([])\n    const [lots,setLots] = React.useState([])\n    const [styles,setStyles] = React.useState([])\n    const [colors,setColors] = React.useState([])\n    const [tableValues,setTableValues] = React.useState([])\n\n\n    const toggleUploadVisible = () => {\n        setUploadVisible(!uploadVisible)\n    }\n    //const [deparments,setDepartments] = React.useState([])\n\n    // React.useEffect(()=>{\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n    //     console.log('state',state)\n    //     if(state.style){\n    //         fetch(api_endpoint+`/Jordan/SPTS/order/getColorsForStyleCode.php?style_code=${state.style}`)\n    //         .then(res => res.json()\n    //         .then(res => {\n    //             console.log('res colors',res)\n    //             setColors(res.Colors)\n    //         }))\n    //         .catch(err => {\n    //             console.log('err in fetch',err)\n    //         })\n\n    //     }\n    // },[state.style])\n\n    // React.useEffect(()=>{\n    //     //http://192.168.88.237/Jordan/Cutting/Marker/getSizes.php\n    //     if(state.size){\n    //         setModalVisible(true)\n    //     }\n        \n    // },[state.size])\n\n    const handleAppend = async () => {\n        console.log('handleAppend',state)\n        let newArr = []\n        for(let i=0; i<noOfRolls;i++){\n            newArr.push({id:uuid(),...state})\n        }\n        setModalVisible(false)\n        setTableValues(s => [...s,...newArr])\n        setState({})\n    }\n\n    React.useEffect(()=>{\n        \n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res styles',res)\n            setStyles(res.Styles)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n        fetch(api_endpoint+'/Jordan/SPTS/order/getColors.php')\n        .then(res => res.json()\n        .then(res => {\n            console.log('res sized',res)\n            setColors(res.Colors)\n        }))\n        .catch(err => {\n            console.log('err in fetch',err)\n        })\n    },[])\n\n    const handleFileUpload = (e) => {\n        setExcelLoading(true)\n        // console.log('e ',e)\n        // console.log('e.target.files ',e.target.files)\n        //setFilesState()\n        try{\n\n            readXlsxFile(e.target.files[0]).then(async (rows) => {\n                let arr = []\n                // console.log('rows: ',rows)\n                for(let i=1; i<rows.length; i++){\n                    let obj = {\n                        invoice_no:rows[i][0],\n                        supplier:rows[i][1],\n                        buyer:rows[i][2],\n                        style_code:rows[i][3],\n                        color:rows[i][4],\n                        lot:rows[i][5],\n                        length:rows[i][6],\n                        net_weight:rows[i][7],\n                        gross_weight:rows[i][8],\n                        roll_no:rows[i][9],\n                        season_code:rows[i][10],\n                        fabric_type:rows[i][11],\n                        id:uuid()\n                    }\n                    arr.push(obj)\n                }\n                console.log('arr',arr)\n                setTableValues(arr)\n                setExcelLoading(false)\n                // `rows` is an array of rows\n                // each row being an array of cells.\n              })\n        }catch(err){\n            console.log('errr',err)\n            setExcelLoading(false)\n        }\n\n    }\n\n    const handleAdd = async() => {\n        \n        console.log('state: ',state)\n        \n        setLoading(true)\n        let temp = tableValues\n        // console.log('value',value,tableValues)\n        \n        // if(value==='lb'){\n        //     // console.log('hehre')\n        //     temp = await Promise.all(temp.map(t => ({...t,net_weight:t.net_weight*0.4535,gross_weight:t.gross_weight*0.4535})))\n        //     // setTableValues(temp)\n        //     // console.log(2)\n        // }\n        \n        // if(distance==='yd'){\n        //     temp = await Promise.all(temp.map(t => ({...t,length:t.length*0.9144})))\n        //     // setTableValues(temp)\n        //     // console.log(4)\n        // }\n        setTableValues(temp)\n        var ajaxTime= new Date().getTime();\n        try{\n            let url = api_endpoint+`/Jordan/Warehouse/PackingList/insertPackingList.php`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n                body:JSON.stringify({packing_list:temp})\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res-------------------------------------------------------------------------------------: ',res)\n                if(res.Error_No===0){\n                    // setTableValues([])\n                    var totalTime = new Date().getTime()-ajaxTime;\n                    console.log('Response Time: ',parseInt(totalTime/1000),' seconds to add ',res.Responses.length,' items.')\n                    props.enqueueSnackbar('Successfully Added Packing List!', { \n                        variant: 'info',\n                    })\n                }else{\n                    if(typeof res.Error_Description==='object'){\n                        console.log('objecttypeee')\n                        props.enqueueSnackbar('Validation Errors!', { \n                            variant: 'info',\n                        })\n                    }else{\n                        props.enqueueSnackbar(res.Error_Description, { \n                            variant: 'info',\n                        })\n                    }\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Error While Adding Packing List!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Error While Adding Packing List!', { \n                variant: 'info',\n            })\n        }\n\n    }\n    return (\n        <div>\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 300 }}>\n                    <div style={{textAlign:'center'}}><Typography variant=\"h6\" style={{margin:15}}>Add Following Details</Typography></div>\n                    <Grid container>\n\n                        \n                        {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <EditableSelect\n                                options={options}\n                                value={selectedOption}\n                                getOptionValue={(option) => option.id}\n                                getOptionLabel={(option) => option.name}\n                                createOption={(text) => { return {id: 1, name: text} }}\n                                onChange={(ev, option) => setState({...state,option})}\n                            />\n                        </Grid> */}\n                        \n                        {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                            <TextField value={state.rollNumber} onChange={e => setState({...state,rollNumber:e.target.value})} name=\"rollNumber\" variant=\"outlined\" fullWidth label=\"Roll Number\"/>\n                        </Grid> */}\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                            <TextField value={noOfRolls} type=\"number\" onChange={e => setNoOfRolls(e.target.value)} name=\"noOfRolls\" variant=\"outlined\" fullWidth label=\"Number of Rolls\"/>\n                        </Grid>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                            <Button color='primary' fullWidth onClick={handleAppend} variant=\"contained\" style={{color:'#fff',height:50}}>\n                                Generate\n                            </Button>\n                        </Grid>\n                        <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                            <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{color:'#fff',height:50}}>\n                                cancel\n                            </Button>\n                        </Grid>\n                    </Grid>\n                    \n                    {/* <div style={{display:'flex',justifyContent:'space-between'}}>\n                        \n                        \n                    </div> */}\n                </div>\n            </Dialog>\n            <Grid container>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.invoice_no} onChange={e => setState({...state,invoice_no:e.target.value})} name=\"invoice_no\" variant=\"outlined\" fullWidth label=\"Invoice Number\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.supplier} onChange={e => setState({...state,supplier:e.target.value})} name=\"supplier\" variant=\"outlined\" fullWidth label=\"Supplier\"/>\n                    {/* <Autocomplete\n                        options={[{supplier:\"1\"},{supplier:\"2\"},{supplier:\"3\"}]}\n                        getOptionLabel={option => option.supplier}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => {if(v){setState({...state,supplier:v.supplier})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Supplier\" variant=\"outlined\" fullWidth />\n                        )}\n                    /> */}\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.buyer} onChange={e => setState({...state,buyer:e.target.value})} name=\"buyer\" variant=\"outlined\" fullWidth label=\"Buyer\"/>\n                    {/* <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={buyers}\n                        getOptionLabel={option => option.buyer_id}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => setState({...state,buyer:v})}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Buyer\" variant=\"outlined\" fullWidth />\n                        )}\n                    /> */}\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={styles}\n                        getOptionLabel={option => option.style_code}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) => {if(v){setState({...state,style_code:v.style_code})}else{setState({...state,style_code:v})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <Autocomplete\n                        //id=\"combo-box-demo\"\n                        options={colors}\n                        getOptionLabel={option => option.color}\n                        style={{ width: '100%' }}\n                        onChange={(e,v) =>  {if(v){setState({...state,color:v.color})}else{setState({...state,color:v})}}}\n                        renderInput={params => (\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\n                        )}\n                    />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.lot} onChange={e => setState({...state,lot:e.target.value})} name=\"lot\" variant=\"outlined\" fullWidth label=\"Lot\"/>\n                </Grid>\n                \n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.length} type=\"number\" onChange={e => setState({...state,length:e.target.value})} name=\"length\" variant=\"outlined\" fullWidth label={`Length (${distance})`}/>\n                </Grid>\n                \n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.net_weight} type=\"number\" onChange={e => setState({...state,net_weight:e.target.value})} name=\"net_weight\" variant=\"outlined\" fullWidth label={`Net Weight (${value})`} />\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.gross_weight} type=\"number\" onChange={e => setState({...state,gross_weight:e.target.value})} name=\"gross_weight\" variant=\"outlined\" fullWidth label={`Gross Weight (${value})`} />\n                </Grid>\n                \n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.fabric_type} onChange={e => setState({...state,fabric_type:e.target.value})} name=\"fabric_type\" variant=\"outlined\" fullWidth label=\"Fabric Type\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.roll_no} onChange={e => setState({...state,roll_no:e.target.value})} name=\"roll_no\" variant=\"outlined\" fullWidth label=\"Roll No\"/>\n                </Grid>\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                <TextField value={state.season_code} onChange={e => setState({...state,season_code:e.target.value})} name=\"season_code\" variant=\"outlined\" fullWidth label=\"Season Code\"/>\n                </Grid>\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5,alignItems:'center'}}>\n                    <RadioGroup aria-label=\"Unit\" name=\"gender1\" value={value} onChange={handleChangeWeightUnit} >\n                        Select Unit For Weight: &nbsp;&nbsp;&nbsp;\n                        <FormControlLabel value=\"kg\" control={<Radio />} label=\"Kilograms\" />\n                        <FormControlLabel value=\"lb\" control={<Radio />} label=\"Pounds\" />\n                    </RadioGroup>\n                </Grid>\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5,alignItems:'center'}}>\n                    <RadioGroup aria-label=\"Unit\" name=\"length\" value={distance} onChange={handleChangeLengthUnit} >\n                        Select Unit For Length: &nbsp;&nbsp;&nbsp;\n                        <FormControlLabel value=\"m\" control={<Radio />} label=\"Meters\" />\n                        <FormControlLabel value=\"yd\" control={<Radio />} label=\"Yards\" />\n                    </RadioGroup>\n                </Grid>\n                <Grid item lg={4} md={4} sm={6} xs={6} style={{padding:5}}>\n                    <Button variant=\"contained\" color='secondary' style={{height:\"100%\"}} onClick={()=>setModalVisible(true)} fullWidth>Generate List</Button>\n                </Grid>\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.no_of_plies} onChange={e => setState({...state,no_of_plies:e.target.value})} name=\"no_of_plies\" variant=\"outlined\" fullWidth label=\"No. of Plies\"/>\n                </Grid> */}\n                {/* <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\n                    <TextField value={state.po_description} onChange={e => setState({...state,po_description:e.target.value})} name=\"poDescription\" variant=\"outlined\" fullWidth label=\"PO Description\"/>\n                </Grid> */}\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Typography onClick={toggleUploadVisible} variant=\"subtitle1\" color='primary' style={{fontWeight:'700',cursor:'pointer'}}>Upload Spreadsheet Instead</Typography>\n                    {\n                        uploadVisible===true?\n                        <input id=\"upload\" type=\"file\" onChange={handleFileUpload} />\n                        :null\n                    }\n                    {\n                        excelLoading===true?\n                        <CircularProgress color='primary' size={15}/>\n                        :null\n                    }\n                </Grid>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <Table setTableValues={setTableValues} tableValues={tableValues}/>\n                        :null\n                    }\n                </Grid>\n                {/* <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    {\n                        tableValues && tableValues.length > 0?\n                        <table style={{width:'100%'}}>\n                            <tr>\n                                <th>Invoice Number</th>\n                                <th>Supplier</th>\n                                <th>Buyer</th>\n                                <th>Style</th>\n                                <th>Color</th>\n                                <th>Lot</th> \n                                <th>Roll Number</th>\n                                <th>Quantity</th>\n                                <th>Net Weight</th>\n                                <th>Gross Weight</th>\n                                <th>Fabric Type</th>\n                                <th style={{ width: '40px' }}></th>\n                               \n                            </tr>\n                            {console.log('tableValues',tableValues)}\n                            <tbody>\n                                {\n                                    tableValues.map(v => (\n                                        <tr>\n                                            <td>{v.invoiceNumber}</td>\n                                            <td>{v.supplier}</td>\n                                            <td>{v.buyer}</td>\n                                            <td>{v.style?v.style.style_code:null}</td>\n                                            <td>{v.color?v.color.color:null}</td>\n                                            <td>{v.lot}</td>\n                                            <td>{v.rollNumber}</td>\n                                            <td>{v.quantity}</td>\n                                            <td>{v.nw}</td>\n                                            <td>{v.gw}</td>\n                                            <td>{v.fabricType}</td>\n                                            <td><DeleteIcon color='primary' style={{ cursor: 'pointer' }} onClick={()=>{\n                                                setTableValues(draft => draft.filter(d => d.id !== v.id))\n                                            }}/></td>\n                                            \n                                        </tr>\n                                    ))\n                                }\n                                \n                            </tbody>\n                        </table>\n                        :null\n                    }\n\n                </Grid> */}\n                <Menu\n                    id=\"simple-menu\"\n                    anchorEl={anchorEl}\n                    keepMounted\n                    open={Boolean(anchorEl)}\n                    onClose={handleClose}\n                >\n                    <MenuItem onClick={()=>{setUnit('kgs');handleClose();}}>Kilograms</MenuItem>\n                    <MenuItem onClick={()=>{setUnit('yds');handleClose();}}>Yards</MenuItem>\n                </Menu>\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\n                    <Button \n                        color='primary' \n                        variant='contained' \n                        style={{color:'#fff',height:'50px'}} \n                        onClick={handleAdd}\n                        fullWidth\n                    >\n                        {\n                            loading === true?\n                            <CircularProgress color='#fff'/>\n                            :\n                            `Upload Packing List`\n                        }\n                    </Button>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default withSnackbar(AddPackingList)","import React from 'react'\nimport { TextField, Grid, InputAdornment, Button, Typography, CircularProgress, Backdrop } from '@material-ui/core'\nimport { Autocomplete } from '@material-ui/lab'\nimport SearchIcon from '@material-ui/icons/Search'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { Dialog } from '@material-ui/core'\nimport './index.css'\nimport { api_endpoint } from '../../util/config'\nimport { withSnackbar } from 'notistack'\nimport { useTable, usePagination, useGlobalFilter } from 'react-table'\n\nfunction GlobalFilter({\n    preGlobalFilteredRows,\n    globalFilter,\n    setGlobalFilter,\n  }) {\n    //const count = preGlobalFilteredRows.length\n  \n    return (\n      <span>\n        <TextField\n            name='searchValue'\n            variant=\"outlined\"\n            label=\"Search Order\"\n            value={globalFilter || ''}\n            onChange={e => setGlobalFilter(e.target.value || undefined)}\n            fullWidth\n            InputProps={{\n                endAdornment: <InputAdornment position=\"end\">\n                    <SearchIcon color='primary' style={{ cursor: 'pointer' }} />\n                </InputAdornment>\n            }}\n        />\n      </span>\n    )\n  }\n\nfunction MyTable({ columns, data,setModalValues,setModalVisible,handleDelete,setOpenBackdrop }) {\n    // Use the useTable hook to create your table configuration\n    const {\n        getTableProps,\n        getTableBodyProps,\n        headerGroups,\n        rows,\n        prepareRow,\n        previousPage,\n        state: { pageIndex, pageSize, globalFilter },\n        canPreviousPage,\n        nextPage,\n        page,\n        canNextPage,\n        // pageIndex,\n        pageOptions,\n        gotoPage,\n        setGlobalFilter,\n        preGlobalFilteredRows,\n        // pageSize,\n        setPageSize\n      } = useTable({\n        columns,\n        data,\n      },useGlobalFilter,usePagination)\n    // // console.log('porps', props)\n    // console.log('____________________________________________________________________________',previousPage,\n    // canPreviousPage,\n    // nextPage,\n    // canNextPage,\n    // pageIndex,\n    // pageOptions,\n    // gotoPage,\n    // pageSize,\n    // setPageSize)\n\n    return (\n        <div style={{width:'90%'}}>\n            {/* <div>\n                <GlobalFilter\n                    preGlobalFilteredRows={preGlobalFilteredRows}\n                    globalFilter={globalFilter}\n                    setGlobalFilter={setGlobalFilter}\n                />\n            </div> */}\n            <table {...getTableProps()} style={{width:'100%'}}>\n        <thead>\n          {headerGroups.map(headerGroup => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map(column => (\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\n              ))}\n              {/* <th></th> */}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {page.map((row, i) => {\n            prepareRow(row)\n            return (\n              <tr {...row.getRowProps()}>\n                  {/* <td>{i+1}</td> */}\n                {row.cells.map(cell => {\n                    return <td style={{fontSize:12}} {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                })}\n                {/* <td style={{ textAlign: 'center' }}><EditIcon color='primary' onClick={() => {\n                    setModalVisible(true)\n                    setModalValues(row.original)\n                }} style={{ cursor: 'pointer', marginRight: 15 }} /><DeleteIcon color='primary' onClick={() => {\n                    handleDelete(row.original); setOpenBackdrop(true);\n                }} style={{ cursor: 'pointer' }} /></td> */}\n                \n              </tr>\n            )\n          })}\n        </tbody>\n      </table>\n            <div style={{display:'flex',justifyContent:'space-between'}}>\n                <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n                    Previous Page\n                </button>\n                <div>\n                    Page{' '}\n                    <em>\n                        {pageIndex + 1} of {pageOptions.length}\n                    </em>\n                </div>\n                <button onClick={() => nextPage()} disabled={!canNextPage}>\n                    Next Page\n                </button>\n            </div>\n        </div>\n    )\n}\n\nconst PackingListTable = props => {\n\n    const [searchText, setSearchText] = React.useState('')\n    const [modalVisible, setModalVisible] = React.useState(false)\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\n    const [invoiceNumbers,setInvoiceNumbers] = React.useState([])\n    //const [deleteLoader, setDeleteLoader] = React.useState(false)\n    const [modalValues, setModalValues] = React.useState(null)\n    const [tableValues, setTableValues] = React.useState([])\n    const [editState, setEditState] = React.useState({})\n    const [state, setState] = React.useState({})\n    const [loading, setLoading] = React.useState(false)\n\n    // React.useEffect(() => {\n    //     console.log('modalValues', modalValues)\n    //     setEditState(modalValues)\n    // }, [modalValues])\n\n    const handleFetch = () => {\n\n        console.log('state: ',state)\n        console.log('tableValues: ',tableValues)\n        setTableValues(null)\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\n        setLoading(true)\n        try{\n            let url = api_endpoint+`/Jordan/Warehouse/PackingList/getPackingListForInvoiceNumber.php?invoice_no=${state.invoice?state.invoice.invoice_code:''}`;\n            console.log('url',url)\n            fetch(url,{\n                method: 'post',\n            })\n            .then(res => res.json())\n            .then(res => {\n                setLoading(false)\n                console.log('res: ',res)\n                if(res.Packing_List){\n                    setTableValues(res.Packing_List)\n                }\n            })\n            .catch(err => {\n                console.log('error while fetching',err)\n                setLoading(false)\n                props.enqueueSnackbar('Failed to Fetch Packing List!', { \n                    variant: 'info',\n                })\n            })\n        }catch(err){\n            console.log('err in try catch',err)\n            setLoading(false)\n            props.enqueueSnackbar('Failed to Fetch Packing List!', { \n                variant: 'info',\n            })\n        }\n\n    }\n\n    const handleDelete = (record) => {\n\n    //     try {\n    //         setDeleteLoader(true)\n    //         setOpenBackdrop(true)\n    //         fetch(api_endpoint + `/Jordan/SPTS/order/closeOrder.php?order_id=${record.order_id}`)\n    //             .then(res => res.json())\n    //             .then(res => {\n    //                 setDeleteLoader(false)\n    //                 setOpenBackdrop(false)\n    //                 console.log('delete response: ', res)\n    //                 if (res.Error_No === 0) {\n    //                     props.enqueueSnackbar('Successfully deleted order!', {\n    //                         variant: 'info',\n    //                     })\n    //                     fetchOrders()\n    //                 }\n    //                 //setTableValues(res.Orders)\n    //             })\n    //             .catch(err => {\n    //                 console.log('err in fetching', err)\n    //                 setDeleteLoader(false)\n    //                 setOpenBackdrop(false)\n    //                 //setTableValues([])\n    //             })\n    //     } catch (err) {\n    //         console.log('try catch error: ', err)\n    //         setDeleteLoader(false)\n    //         setOpenBackdrop(false)\n    //         //setTableValues([])\n    //     }\n    }\n\n    const fetchInvoiceNumbers = () => {\n        try {\n            fetch(api_endpoint + '/Jordan/Warehouse/PackingList/getInvoiceCodes.php')\n                .then(res => res.json())\n                .then(res => {\n                    console.log(res)\n                    if(res.Invoices){\n                        setInvoiceNumbers(res.Invoices)\n                    }\n                })\n                .catch(err => {\n                    console.log('err in fetching', err)\n                    //setTableValues([])\n                })\n        } catch (err) {\n            console.log('try catch error: ', err)\n            //setTableValues([])\n        }\n    }\n\n    React.useEffect(() => {\n        fetchInvoiceNumbers()\n    }, [])\n    // React.useEffect(() => {\n    //     fetchPackingListForInvoice()\n    // }, [state.invoice])\n\n    return (\n        <>\n            {/* <label for=\"date\">Order Date:&nbsp;</label>\n            <input type=\"date\" id=\"date\" onChange={(e)=>console.log('date: ',e,e.target.value)} name=\"date\"></input> */}\n            <Dialog\n                open={modalVisible}\n            >\n                <div style={{ padding: 20, width: 480 }}>\n                    asdf\n                    {/* {\n                        editState ?\n                            <>\n                                <div style={{ textAlign: 'center', marginBottom: 15 }}><Typography variant=\"h6\"> Edit Order</Typography></div>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"buyer\" value={editState.buyer_code} onChange={e => setEditState({ ...editState, buyer_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Buyer\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"style\" value={editState.style_code} onChange={e => setEditState({ ...editState, style_code: e.target.value })} variant=\"outlined\" fullWidth label=\"Style\" />\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <TextField name=\"color\" value={editState.color} onChange={e => setEditState({ ...editState, color: e.target.value })} variant=\"outlined\" fullWidth label=\"Color\" />\n                                    </Grid>\n                                </Grid>\n                                <Grid container>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={handleUpdate}>Update</Button>\n                                    </Grid>\n                                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                                        <Button color='primary' variant='contained' style={{ color: '#fff', height: '50px' }} fullWidth onClick={() => setModalVisible(false)}>Cancel</Button>\n                                    </Grid>\n                                </Grid>\n                            </>\n                            : null\n                    } */}\n                </div>\n            </Dialog>\n\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Grid item lg={6} md={6} sm={6} xs={6} style={{ padding: 5 }}>\n                        <Autocomplete\n                            //id=\"combo-box-demo\"\n                            options={invoiceNumbers}\n                            getOptionLabel={option => option.invoice_code}\n                            style={{ width: '100%' }}\n                            onChange={(e,v) => setState({...state,invoice:v})}\n                            renderInput={params => (\n                                <TextField {...params} label=\"Invoice\" variant=\"outlined\" fullWidth />\n                            )}\n                        />\n                    </Grid>\n                    <Grid item lg={3} md={3} sm={3} xs={3} style={{ padding: 5 }}>\n                        <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{color:'#fff',height:'100%'}} >\n                            {\n                                `Fetch`\n                            }\n                        </Button>\n                    </Grid>\n                </Grid>\n                <Grid container style={{ display: 'flex', justifyContent: 'center' }}>\n\n                    {\n                        tableValues === null ?\n                        <div style={{ padding: 20, display: 'flex', justifyContent: 'center' }}>\n                            <CircularProgress color='primary' />\n                        </div>\n                        :\n                        tableValues.length === 0 ?\n                        null\n                        :\n                        <MyTable columns={[\n                            {\n                                Header: 'Supplier',\n                                accessor: 'supplier',\n                            },\n                            {\n                                Header: 'Buyer',\n                                accessor: 'buyer',\n                            },\n                            {\n                                Header: 'Style',\n                                accessor: 'style_code',\n                            },\n                            {\n                                Header: 'Color',\n                                accessor: 'color',\n                            },\n                            {\n                                Header: 'Lot',\n                                accessor: 'lot',\n                            },\n                            {\n                                Header: 'Invoice',\n                                accessor: 'invoice_no',\n                            },\n                            {\n                                Header: 'Roll No',\n                                accessor: 'roll_no',\n                            },\n                            {\n                                Header: 'Fabric',\n                                accessor: 'fabric_type',\n                            },\n                            {\n                                Header: 'Length',\n                                accessor: 'length',\n                            },\n                            {\n                                Header: 'Net Weight',\n                                accessor: 'net_weight',\n                            },\n                            {\n                                Header: 'Gross Weight',\n                                accessor: 'gross_weight',\n                            },\n                        ]} data={tableValues} tableValues={tableValues} \n                        // setModalValues={setModalValues} setModalVisible={setModalVisible} handleDelete={handleDelete} setOpenBackdrop={setOpenBackdrop}\n                        />\n                    }\n                </Grid>\n                <Backdrop open={openBackdrop}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n        </>\n    )\n}\n\nexport default withSnackbar(PackingListTable)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddPackingList from '../AddPackingList'\nimport ViewPackingList from '../PackingListTable'\n// import MarkersTable from '../MarkersTable'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst PackingList = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Packing List</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Add Packing List\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        <Tab label=\"View Packing List\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/>\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <AddPackingList />\n                        {/* <div>asdf</div> */}\n                    </TabPanel>\n                    <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewPackingList/>\n                        {/* <MarkersTable /> */}\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default PackingList","import React from 'react'\r\nimport { Grid, TextField, Button,Backdrop,CircularProgress, Typography } from '@material-ui/core'\r\nimport { api_endpoint } from '../../util/config'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport EditIcon from '@material-ui/icons/Edit'\r\nimport { withSnackbar } from 'notistack';\r\nimport { Dialog } from '@material-ui/core'\r\nimport Select, { components } from 'react-select'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport Tooltip from '@atlaskit/tooltip';\r\n\r\n\r\nconst options = [\r\n    { value: 'chocolate', label: 'Chocolate' },\r\n    { value: 'strawberry', label: 'Strawberry' },\r\n    { value: 'vanilla', label: 'Vanilla' }\r\n  ]\r\n\r\nconst PlanSimulate = props => {\r\n\r\n    const [state,setState] = React.useState({})\r\n    const [textFields,setTextFields] = React.useState({\r\n        targetMinutes:480,\r\n        plannedEfficiency:100\r\n    })\r\n    const [modalVisible, setModalVisible] = React.useState(false)\r\n    const [count, setCount] = React.useState(null)\r\n    const [somethingChanged, setSomethingChanged] = React.useState(false)\r\n    const [modalValues, setModalValues] = React.useState(null)\r\n    const [openBackdrop, setOpenBackdrop] = React.useState(false)\r\n    const [loading,setLoading] = React.useState(false)\r\n    //const [sizes,setSizes] = React.useState([])\r\n    const [styles,setStyles] = React.useState([])\r\n    const [operations,setOperations] = React.useState([])\r\n    const [machineTypes,setMachineTypes] = React.useState([])\r\n    //const [colors,setColors] = React.useState([])\r\n    const [tableValues,setTableValues] = React.useState([])\r\n    \r\n    const [value, setValue] = React.useState('target');\r\n\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n\r\n    React.useEffect(() => {\r\n        recalculate(tableValues)\r\n    },[value])\r\n\r\n    React.useEffect(()=>{\r\n        \r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/order/getStyleCodes.php')\r\n        .then(res => res.json()\r\n        .then(res => {\r\n            // console.log('res styles',res)\r\n            setStyles(res.Styles)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/operation/getOperations.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res operations',res)\r\n            let ops = await Promise.all(res.Operations.map(o => ({operation_id:o.operation_id,operation:o.operation_code+' - '+o.operation_description,operation_code:o.operation_code,operation_description:o.operation_description})))\r\n            setOperations(ops)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n        fetch(api_endpoint+'/Jordan/SPTS/style/getDistinctMachineTypes.php')\r\n        .then(res => res.json()\r\n        .then(async res => {\r\n            console.log('res machine Types',res)\r\n            setMachineTypes(res.machine_types)\r\n        }))\r\n        .catch(err => {\r\n            console.log('err in fetch',err)\r\n        })\r\n        //__________________________________________________________________________________________________________//\r\n\r\n        \r\n    },[])\r\n\r\n    \r\n    const handleUpdateTable = async () => {\r\n        // console.log('modalValues',modalValues)\r\n        // console.log('tableVlaue',tableValues)\r\n        let tempTable = await Promise.all(tableValues.map(v => {\r\n            if(v.style_id===modalValues.style_id){\r\n                return modalValues\r\n            }else{\r\n                return v\r\n            }\r\n        }))\r\n        console.log('newTable',tempTable)\r\n        setTableValues(tempTable)\r\n        setSomethingChanged(true)\r\n        setModalVisible(false)\r\n\r\n        //let \r\n\r\n    }\r\n\r\n    // const handleUpdate = async () => {\r\n    //     console.log('tableValues',tableValues)\r\n    //     setLoading(true)\r\n    //     let table = await Promise.all(tableValues.map(t => ({...t,Style_id:t.style_id,target:t.order_target,time_for_target:t.allocated_time_for_target})))\r\n    //     try{\r\n    //         let url = api_endpoint+`/Jordan/SPTS/style/updateStyleBulletin.php`;\r\n    //         console.log('url',url)\r\n    //         fetch(url,{\r\n    //             method: 'post',\r\n    //             body: JSON.stringify({styleBulletin:table})\r\n    //         })\r\n    //         .then(res => res.json())\r\n    //         .then(res => {\r\n    //             setLoading(false)\r\n    //             console.log('res: ',res)\r\n    //             setTableValues([])\r\n    //             setSomethingChanged(false)\r\n    //             props.enqueueSnackbar('Updated Style Bulletin Successfully!', { \r\n    //                 variant: 'info',\r\n    //             })\r\n    //         })\r\n    //         .catch(err => {\r\n    //             console.log('error while fetching',err)\r\n    //             setLoading(false)\r\n    //             props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n    //                 variant: 'info',\r\n    //             })\r\n    //         })\r\n    //     }catch(err){\r\n    //         console.log('err in try catch',err)\r\n    //         setLoading(false)\r\n    //         props.enqueueSnackbar('Failed to Update Style Bulletin!', { \r\n    //             variant: 'info',\r\n    //         })\r\n    //     }\r\n\r\n    // }\r\n\r\n    const fetchAndUpdateWorkers = async (res) => {\r\n        let plans = await Promise.all(res.Style_Bulletin.map(async s => {\r\n            // API to fetch Plans\r\n            let url = api_endpoint+`/Jordan/SPTS/planning/getPlanForOperation.php?operation_id=${s.operation_id}`;\r\n            console.log('url',url)\r\n            let plansFromFetch = await fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(async r => {\r\n                console.log('res--> ',r)\r\n                if(r.Plan){\r\n                    // console.log(r.Plan)\r\n                    let formattedPlans = await Promise.all(r.Plan.map(p => ({...p,label:p.worker_name+', ppm: '+p.ppm+', Op Sam: '+(1/parseFloat(p.ppm)).toFixed(2),value:p.worker_id})))\r\n                    return {...s,workersForThisOperation:formattedPlans,selectedWorkers:[]}\r\n                }else{\r\n                    return {...s,workersForThisOperation:[],selectedWorkers:[]}\r\n                }\r\n            })\r\n            return plansFromFetch\r\n            // console.log(s)\r\n        }))\r\n\r\n        setCount(plans.length)\r\n        setLoading(false)\r\n        recalculate(plans)\r\n    }\r\n\r\n    \r\n\r\n    const handleFetch = () => {\r\n        setCount(null)\r\n\r\n        console.log('state: ',state)\r\n        console.log('tableValues: ',tableValues)\r\n        // console.log(`/Jordan/Cutting/Marker/insertMarkerAndSizeMappings.php?style_code=${state.color.style_code}&color=${state.color.color}&marker_description=${state.marker_description}&no_of_plies=${state.no_of_plies}&size_mappings=${tableValues}`)\r\n        setLoading(true)\r\n        try{\r\n            let url = api_endpoint+`/Jordan/SPTS/style/getStyleBulletinForStyleCode.php?style_code=${state.style}`;\r\n            console.log('url',url)\r\n            fetch(url,{\r\n                method: 'post',\r\n            })\r\n            .then(res => res.json())\r\n            .then(async res => {\r\n                \r\n                console.log('res: ',res)\r\n\r\n                if(res.Style_Bulletin){\r\n                   fetchAndUpdateWorkers(res)\r\n                }else{\r\n                    setLoading(false)\r\n                }\r\n                \r\n            })\r\n            .catch(err => {\r\n                console.log('error while fetching',err)\r\n                setLoading(false)\r\n                props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                    variant: 'info',\r\n                })\r\n            })\r\n        }catch(err){\r\n            console.log('err in try catch',err)\r\n            setLoading(false)\r\n            props.enqueueSnackbar('Failed to Fetch Style Bulletin!', { \r\n                variant: 'info',\r\n            })\r\n        }\r\n    }\r\n\r\n    const handleSelect = async (values,row) => {\r\n        // console.log('what: ',what)\r\n        let newTableValues = await Promise.all(tableValues.map(tV => {\r\n            if(tV.operation_id===row.operation_id){\r\n                return ({...tV,selectedWorkers:values})\r\n            }else{\r\n                return tV\r\n            }\r\n        }))\r\n        recalculate(newTableValues)\r\n    }\r\n\r\n    const recalculate = async (tableValues) => {\r\n        let newTableValues = await Promise.all(tableValues.map(async tV => {\r\n            // console.log(tV)\r\n            let production = 0 \r\n            let minutes = 0 \r\n            await Promise.all(tV.selectedWorkers.map(sW => {\r\n                production = production + sW.ppm\r\n            }))\r\n            if(value==='minutes'){\r\n                minutes = textFields.targetMinutes\r\n                production = ((production * parseFloat(textFields.targetMinutes))).toFixed(2)\r\n            }else{\r\n                console.log('production -> ',production)\r\n                minutes = production === 0? 0: ((1/production)* parseFloat(textFields.targetMinutes)).toFixed(2)\r\n                production = textFields.targetMinutes\r\n            }\r\n            console.log('-----------------------------------------------> ',production)\r\n            return ({...tV,production,minutes})\r\n        }))\r\n        setTableValues(newTableValues)\r\n    }\r\n\r\n    const handleTextFields = (e,attr) => {\r\n        setTextFields({...textFields,[attr]:e.target.value})\r\n        recalculate(tableValues)\r\n    }\r\n    return (\r\n        <div>\r\n            <Dialog\r\n                open={modalVisible}\r\n            >\r\n                <div style={{ padding: 20, width: 480 }}>\r\n                    <div style={{padding:10}}>\r\n                        Update The Following Information For Style\r\n                    </div>\r\n                    {\r\n                        modalValues?\r\n                        <Grid container style={{padding:10}}>\r\n                            {\r\n                                console.log('modalValues ====> ',modalValues)\r\n                            }\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={operations}\r\n                                getOptionLabel={option => option.operation}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={()=>operations.filter(o => o.operation_code===modalValues.operation_code)[0]}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,operation_id:v.operation_id,operation_code:v.operation_code,operation_description:v.operation_description})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Operation\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <Autocomplete\r\n                                //id=\"combo-box-demo\"\r\n                                options={machineTypes}\r\n                                getOptionLabel={option => option.machine_type}\r\n                                style={{ width: '100%' }}\r\n                                defaultValue={{machine_type:modalValues.machine_type}}\r\n                                //value={modalValues.machine_type}\r\n                                //defaultValue={() => machineTypes.filter(t => t.)}\r\n                                onChange={(e,v) => {if(v){setModalValues({...modalValues,machine_type:v.machine_type})}}}\r\n                                renderInput={params => (\r\n                                    <TextField {...params} label=\"Machine Type\" variant=\"outlined\" fullWidth />\r\n                                )}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='sequence' type='number' variant=\"outlined\" label=\"Sequence\" value={modalValues.operation_sequence} onChange={e=>setModalValues({...modalValues,operation_sequence:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='target' type='number' variant=\"outlined\" label=\"Target\" value={modalValues.order_target} onChange={e=>setModalValues({...modalValues,order_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='timeForTarget' type='number' variant=\"outlined\" label=\"Time For Target\" value={modalValues.allocated_time_for_target} onChange={e=>setModalValues({...modalValues,allocated_time_for_target:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfOperators' type='number' variant=\"outlined\" label=\"No Of Operators\" value={modalValues.no_of_operators} onChange={e=>setModalValues({...modalValues,no_of_operators:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                            <TextField name='noOfHelpers' type='number' variant=\"outlined\" label=\"No Of Helpers\" value={modalValues.no_of_helpers} onChange={e=>setModalValues({...modalValues,no_of_helpers:Number(e.target.value)})} fullWidth />\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                    }\r\n                    <div style={{display:'flex',justifyContent:'center'}}>\r\n                        <Button color='primary' fullWidth onClick={handleUpdateTable} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            {\r\n                                loading === true?\r\n                                <CircularProgress color={'#fff'}/>\r\n                                :\r\n                                `Update`\r\n                            }\r\n                        </Button>\r\n                        <Button color='primary' fullWidth onClick={()=>setModalVisible(false)} variant=\"contained\" style={{margin:10,color:'#fff',height:55}}>\r\n                            cancel\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Dialog>\r\n            <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:5}}>\r\n                    <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={styles}\r\n                        getOptionLabel={option => option.style_code}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => {if(v){setState({...state,style:v.style_code})}}}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Style\" variant=\"outlined\" fullWidth />\r\n                        )}\r\n                    />\r\n                </Grid>\r\n                <Grid item lg={2} md={2} sm={2} xs={2} style={{padding:5}}>\r\n                    <Button variant=\"contained\" color='primary' onClick={handleFetch} style={{height:55,color:'#fff'}} fullWidth>\r\n                        fetch\r\n                    </Button>\r\n                    \r\n                    {/* <Autocomplete\r\n                        //id=\"combo-box-demo\"\r\n                        options={colors}\r\n                        getOptionLabel={option => option.color}\r\n                        style={{ width: '100%' }}\r\n                        onChange={(e,v) => setState({...state,color:v})}\r\n                        renderInput={params => (\r\n                            <TextField {...params} label=\"Color\" variant=\"outlined\" fullWidth />\r\n                            )}\r\n                        /> */}\r\n                </Grid>\r\n                {\r\n                    count !== null?\r\n                    <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                        <Grid item lg={6} md={6} sm={6} xs={6} style={{padding:15,marginTop:15}}>\r\n                            <Typography variant=\"subtitle\" color='primary' style={{display:'flex',justifyContent:'center',fontWeight:'600'}}>\r\n                                No Of Operations: {count}\r\n                            </Typography>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n                    :null\r\n                }\r\n                <Grid container style={{display:'flex',justifyContent:'center'}}>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15,textAlign:'end'}}>\r\n                        <FormControl component=\"fieldset\">\r\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={value} onChange={handleChange} style={{alignItems:'center',flexDirection:'row'}}>\r\n                                <FormLabel component=\"legend\" style={{marginRight:15}}>Select:</FormLabel>\r\n                                <FormControlLabel value=\"target\" control={<Radio />} label=\"Target\" />\r\n                                <FormControlLabel value=\"minutes\" control={<Radio />} label=\"Minutes\" />\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15}}>\r\n                        <TextField fullWidth label={\"Available \"+value} variant=\"outlined\" type=\"number\" value={textFields.targetMinutes} onChange={e=>handleTextFields(e,'targetMinutes')} />\r\n                    </Grid>\r\n                    <Grid item lg={4} md={4} sm={4} xs={6} style={{padding:15,marginTop:15}}>\r\n                        <TextField fullWidth label=\"Planned Efficiency\" variant=\"outlined\" type=\"number\" value={textFields.plannedEfficiency} onChange={e=>handleTextFields(e,'plannedEfficiency')} />\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item lg={12} md={12} sm={12} xs={12} style={{padding:5}}>\r\n                    {\r\n                        loading===true?\r\n                        <div style={{ padding: 20, justifyContent: 'center', display: 'flex' }}>\r\n                            <CircularProgress color='primary' />\r\n                        </div>\r\n                        :\r\n                        tableValues && tableValues.length > 0?\r\n                        <table style={{width:'100%'}}>\r\n                            <tr>\r\n                                <th style={{width:500}}>Workers</th>\r\n                                <th>Code</th>\r\n                                <th>Desc</th>\r\n                                <th>Seq</th>\r\n                                <th>Production</th>\r\n                                <th>Minutes</th>\r\n                            </tr>\r\n                            <tbody>\r\n                                {\r\n                                    tableValues.map(v => (\r\n                                        <tr>\r\n                                            <td>\r\n                                                <Select \r\n                                                    isMulti\r\n                                                    styles={{ option: (base) => ({ ...base, border: `1px solid black`, height: '100%' }) }}\r\n                                                    onChange={values => handleSelect(values,v)} \r\n                                                    options={v?v.workersForThisOperation?v.workersForThisOperation:[]:[]}\r\n                                                    components={{Option}} \r\n                                                />\r\n                                            </td>\r\n                                            <td>{v.operation_code}</td>\r\n                                            <td>{v.operation_description}</td>\r\n                                            <td>{v.operation_sequence}</td>\r\n                                            <td>{v.production}</td>\r\n                                            <td>{v.minutes}</td>\r\n                                           \r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                                \r\n                            </tbody>\r\n                            <Backdrop open={openBackdrop}>\r\n                                <CircularProgress color=\"inherit\" />\r\n                            </Backdrop>\r\n                        </table>\r\n                        :null\r\n                    }\r\n\r\n                </Grid>\r\n                \r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Option = props => {\r\n    console.log('props ---> ',props)\r\n    return(<Tooltip content={'something'}>\r\n         <components.Option {...props}/>\r\n    </Tooltip>)\r\n}\r\n\r\nexport default withSnackbar(PlanSimulate)","import React from 'react';\nimport PropTypes from 'prop-types';\n//import SwipeableViews from 'react-swipeable-views';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport AddStyleBulletin from '../AddStyleBulletin'\nimport PlanSimulate from '../PlanSimulateTab'\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\n\nfunction TabPanel(props) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <Typography\n            component=\"div\"\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`full-width-tabpanel-${index}`}\n            aria-labelledby={`full-width-tab-${index}`}\n            {...other}\n        >\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nTabPanel.propTypes = {\n    children: PropTypes.node,\n    index: PropTypes.any.isRequired,\n    value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n    return {\n        id: `full-width-tab-${index}`,\n        'aria-controls': `full-width-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        width: 500,\n    },\n}));\n\n\nconst StyleBulletin = props => {\n\n    const classes = useStyles();\n    const theme = useTheme();\n    const [value, setValue] = React.useState(0);\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    const handleChangeIndex = index => {\n        setValue(index);\n    };\n\n\n    return (\n        <div style={{ padding: 20 }}>\n            <div style={{ textAlign: 'center' }}><Typography variant=\"h6\">Plan Simulate</Typography></div>\n            <div style={{display:'flex',justifyContent:'center'}}>\n                <div style={{width:'100%'}}>\n                    <AppBar position=\"static\" color=\"secondary\" style={{marginTop:15,borderTopLeftRadius:10,borderTopRightRadius:10}}>\n                        <Tabs\n                        value={value}\n                        onChange={handleChange}\n                        indicatorColor=\"#fff\"\n                        textColor=\"primary\"\n                        variant=\"fullWidth\"\n                        aria-label=\"full width tabs example\"\n                        >\n                        <Tab label=\"Simulate\" {...a11yProps(0)} style={{color:'#fff',borderBottom:value===0?'3px solid white':''}} />\n                        {/* <Tab label=\"View Style Bulletin\" {...a11yProps(1)} style={{color:'#fff',borderBottom:value===1?'3px solid white':''}}/> */}\n                        </Tabs>\n                    </AppBar>\n                    <TabPanel value={value} index={0} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <PlanSimulate />\n                    </TabPanel>\n                    {/* <TabPanel value={value} index={1} dir={theme.direction} style={{backgroundColor:'#f6f6f6',borderBottomLeftRadius:10,borderBottomRightRadius:10}}>\n                        <ViewStyleBulletin />\n                    </TabPanel> */}\n                </div>\n            </div>\n        </div>\n    )\n\n}\n\nexport default StyleBulletin","import React from 'react'\nimport Header from '../../../components/ProductionTrackingHeader'\nimport Workers from '../../../components/Workers'\nimport Orders from '../../../components/Orders'\nimport Operations from '../../../components/Operations'\nimport Markers from '../../../components/Marker'\nimport RollIssuance from '../../../components/RollIssuance'\nimport CutJob from '../../../components/CutJob'\nimport CutReport from '../../../components/CutReport'\nimport StyleBulletin from '../../../components/StyleBulletin'\nimport IE from '../../../components/IECharts'\nimport PO from '../../../components/PO'\nimport AssignPOtoBundle from '../../../components/AssignPOtoBundle'\nimport ManualStocking from '../../../components/ManualStocking'\nimport InfoIcon from '@material-ui/icons/InfoOutlined'\nimport ChartIcon from '@material-ui/icons/BarChart'\nimport { Typography } from '@material-ui/core'\nimport PackingList from '../../../components/PackingList'\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport HomeIcon from '@material-ui/icons/HomeWork';\nimport DeviceIcon from '@material-ui/icons/DeviceHub';\nimport SettingsIcon from '@material-ui/icons/Settings';\n// import AppBar from '@material-ui/core/AppBar';\n// import CssBaseline from '@material-ui/core/CssBaseline';\n// import Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\n//import Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport { Link } from 'react-router-dom'\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport MailIcon from '@material-ui/icons/Mail';\nimport PlanSimulate from '../../../components/PlanSimulate'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor:'#212121'\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n  },\n  toolbar: theme.mixins.toolbar,\n}));\n\nconst ProductionTracking = props => {\n    const classes = useStyles();\n\n    const [sptsValue,setSptsValue] = React.useState('') \n\n    return(<div>\n        {/* <Header setSptsValue={setSptsValue} /> */}\n        <div style={{paddingLeft:240,backgroundColor:'#fff'}}>\n\n        <Drawer\n        className={classes.drawer}\n        variant=\"permanent\"\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n      >\n        {/* <div className={classes.toolbar} /> */}\n            <div style={{display:'flex',justifyContent:'center',backgroundColor:'#212121',paddingTop:20,paddingBottom:20}}>\n                <img src={require('../../../assets/WiMetrix.png')} alt=\"Logo\" style={{width:190}}/>\n            </div>\n            <Divider />\n            {/* <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                Reports&nbsp;\n            </Typography>\n            <ChartIcon color='primary'/>\n        </div> */}\n        {/* <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('ieReport')} button key={'ieReport'} style={{backgroundColor:sptsValue === 'ieReport'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'IE Reports'} />\n            </ListItem>\n        </List> */}\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                Warehouse&nbsp;\n            </Typography>\n            <HomeIcon color='primary'/>\n        </div>\n        <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('packingList')} button key={'packingList'} style={{backgroundColor:sptsValue === 'packingList'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Packing List'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('manualStocking')} button key={'manualStocking'} style={{backgroundColor:sptsValue === 'manualStocking'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Manual Stocking'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('rollIssuance')} button key={'rollIssuance'} style={{backgroundColor:sptsValue === 'rollIssuance'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Roll Issuance'} />\n            </ListItem>\n        </List>\n        <Divider />\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                Cutting&nbsp;\n            </Typography>\n            <DeviceIcon color='primary'/>\n        </div>\n        <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('marker')} button key={'marker'} style={{backgroundColor:sptsValue === 'marker'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Marker'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('po')} button key={'po'} style={{backgroundColor:sptsValue === 'po'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'PO'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('cutJob')} button key={'cutJob'} style={{backgroundColor:sptsValue === 'cutJob'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Cut Job'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('cutReport')} button key={'cutReport'} style={{backgroundColor:sptsValue === 'cutReport'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Cut Report'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('assignPO')} button key={'assignPO'} style={{backgroundColor:sptsValue === 'assignPO'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Assign PO to Bundle'} />\n            </ListItem>\n        </List>\n        <Divider />\n        <div style={{marginTop:20,paddingLeft:20,display:'flex',alignItems:'center'}}>\n            <Typography variant=\"h6\" color='primary'>\n                SPTS&nbsp;\n            </Typography>\n            <SettingsIcon color='primary'/>\n        </div>\n        <List style={{padding:10}}>\n            <ListItem onClick={()=>setSptsValue('workers')} button key={'workers'} style={{backgroundColor:sptsValue === 'workers'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Workers'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('orders')} button key={'orders'} style={{backgroundColor:sptsValue === 'orders'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Orders'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('operations')} button key={'operations'} style={{backgroundColor:sptsValue === 'operations'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Operations'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('styleBulletin')} button key={'styleBulletin'} style={{backgroundColor:sptsValue === 'styleBulletin'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Style Bulletin'} />\n            </ListItem>\n            <ListItem onClick={()=>setSptsValue('planSimulate')} button key={'planSimulate'} style={{backgroundColor:sptsValue === 'planSimulate'?'#418832':'',color:'#fff'}}>\n              <ListItemText primary={'Plan Simulate'} />\n            </ListItem>\n        </List>\n      </Drawer>\n      <div style={{padding:'30px 30px 10px',display:'flex',justifyContent:'space-between',alignItems:'flex-end'}}>\n      <Typography color='primary' style={{fontWeight:'500'}} variant=\"h4\">Rainbow</Typography>\n      <Link to='/'>\n        <Typography color='primary' style={{fontWeight:'500'}} variant=\"subtitle\">Logout</Typography>  \n      </Link>\n      </div>\n      <div style={{margin:'0px 30px 10px',borderBottom:'1px solid lightgrey'}}>\n\n      </div>\n \n        {\n            sptsValue === 'workers'?\n            <Workers />\n            :\n            sptsValue === 'operations'?\n            <Operations />\n            :\n            sptsValue === 'orders'?\n            <Orders />\n            :\n            sptsValue === 'marker'?\n            <Markers />\n            :\n            sptsValue === 'cutJob'?\n            <CutJob />\n            :\n            sptsValue === 'cutReport'?\n            <CutReport />\n            :\n            sptsValue === 'styleBulletin'?\n            <StyleBulletin />\n            :\n            sptsValue === 'assignPO'?\n            <AssignPOtoBundle />\n            :\n            sptsValue === 'po'?\n            <PO />\n            :\n            sptsValue === 'packingList'?\n            <PackingList />\n            :\n            sptsValue === 'manualStocking'?\n            <ManualStocking />\n            :\n            sptsValue === 'rollIssuance'?\n            <RollIssuance />\n            :\n            sptsValue === 'ieReport'?\n            <IE />\n            :\n            sptsValue === 'planSimulate'?\n            <PlanSimulate />\n            :\n            <div style={{display:'flex',justifyContent:'center',alignItems:'center',height:400}}>\n                <div>\n                    <div style={{textAlign:'center',marginBottom:20}}><InfoIcon color='primary' style={{fontSize:70}} /></div>\n                    <div>\n                        <Typography variant=\"h6\" color='secondary'>\n                            Select An Option\n                        </Typography> \n                    </div>\n                </div>\n            </div>\n        }\n        </div>\n    </div>)\n}\n\nexport default ProductionTracking"],"sourceRoot":""}